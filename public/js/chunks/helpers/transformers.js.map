{"version":3,"file":"js/chunks/helpers/transformers.js?id=1357b673cc9e39194a8b","sources":["webpack:///./resources/js/helpers/transformers.js"],"sourcesContent":["import store from '@js/store'\nimport { formatCurrency } from '@core/utils'\nconst vars = store.getters['config/vars']\n\n\nexport function arrayOfObjects(value, opts) {\n    let toReturn = ''\n\n    if(value && value.length && opts) {\n        value.forEach(detail => {\n            if(toReturn) {\n                toReturn += ', '\n            }\n            toReturn += `${detail[opts.firstAttr][opts.firstAttr2]} (${formatCurrency.to(detail[opts.secondAttr], vars.defaultCurrency, true, false, true, false)})`\n        })\n    }\n\n    return toReturn\n}\n\nexport function uppercase(val) {\n    return val.toUpperCase()\n}\n\nexport function capitalize(val) {\n    return val.capitalize()\n}\n\nexport function lowercase(val) {\n    return val.toLowerCase()\n}\n\nexport function objectWithName({name}) {\n    return name\n}\n\nexport function contact({name}) {\n    return name\n}\n\nexport function contactWithAlias({name, alias}) {\n    return `${name} (${alias})`\n}\n\nexport function contactWithAssociation({name, designation}) {\n    return `${name} (${designation})`\n}\n\nexport function user(user) {\n    return user.profile ? user.profile.name || user.username : user.username\n}\n\nexport function employee({name}) {\n    return name\n}\n\nexport function employeeWithAlias({name, alias}) {\n    return `${name} (${alias})`\n}\n\nexport function getRegion(value, item = {}) {\n    let region = item ? item.city : ''\n    region = region ? (item.zipcode ? `${region} - ${item.zipcode}` : region) : ''\n    region = item.state ? (region ? `${region}, ${item.state}` : item.state) : region\n    region = item.country ? (region ? `${region}, ${item.country.name}` : item.country.name) : region\n    return region\n}\n\nexport function percent(content) {\n    return `${content} %`\n}\n\nexport function date(content) {\n    return moment(content, vars.serverDateFormat).format(vars.defaultDateFormat)\n}\n\nexport function datetime(content) {\n    return moment(content, vars.serverDateTimeFormat).format(vars.defaultDateTimeFormat)\n}\n\nexport function truncateString(content, opts) {\n    const max = opts.max || 30\n    const suffix = content.length > max ? (opts.suffix || '...') : ''\n    return content.slice(0, max) + suffix\n}\n\nexport function limitWords(content, opts) {\n    const contentArr = content.split(' ')\n    const max = opts.max || 3\n    const suffix = contentArr.length > max ? (opts.suffix || '...') : ''\n    return contentArr.slice(0, max).join(' ') + suffix\n}\n\nexport function badgeStatus(status) {\n    return status ? 'true' : 'false'\n}\n\nexport function badgeStatusYesNo(status) {\n    return status ? $t('general.yes') : $t('general.no')\n}\n\nexport function badgeStatusLabel(status, opts) {\n    return status ? $t('general.yes') : $t('general.no')\n}\n\nexport function badgeStatusCompleted(status) {\n    return status ? $t('utility.todo.completed') : $t('utility.todo.incomplete')\n}\n\nexport function currency(value, opts) {\n    const currency = opts && opts.currency ? opts.currency : vars.defaultCurrency\n    return formatCurrency.to(value, currency, true)\n}\n\nexport function getCurrencyDescription(value, item = {}) {\n    return `${item.currency.name} - ${item.currency.description} (${item.currency.symbol})`\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;;;;A","sourceRoot":""}