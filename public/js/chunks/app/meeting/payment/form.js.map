{"version":3,"file":"js/chunks/app/meeting/payment/form.js?id=6b8c8fad9346c96b0df6","sources":["webpack:///form.vue","webpack:///./resources/js/views/app/meeting/payment/form.vue?9087","webpack:///./resources/js/views/app/meeting/payment/form.vue?b52a","webpack:///./resources/js/views/app/meeting/payment/form.vue?abf2","webpack:///./resources/js/views/app/meeting/payment/form.vue","webpack:///./resources/js/views/app/meeting/payment/form.vue?90f1","webpack:///./resources/js/views/app/meeting/payment/form.vue?a7c9","webpack:///./resources/js/views/app/meeting/payment/form.vue?70fb"],"sourcesContent":["<template>\n    <base-container boxed min-height=\"full\" has-form has-footer>\n        <form @submit.prevent=\"proceed\">\n            <animated-loader :is-loading=\"isBusy\" :loader-color=\"vars.loaderColor\" />\n\n            <template v-if=\"entity\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-md-6 mb-4\">\n                        <label class=\"d-block text-muted\">{{ formLabels.currency }}</label>\n                        <div>\n                            {{ computedCurrency }}\n                        </div>\n                    </div>\n\n                    <div class=\"col-12 col-md-6 mb-4\">\n                        <view-currency :label=\"formLabels.payableAmount\" :value=\"payableAmount\" :currency=\"formData.currency\" tag=\"h2\" data-classes=\"text-success font-weight-600 text-right\" class=\"text-right\" />\n                    </div>\n                </div>\n\n                <h5 class=\"mb-2 mt-1 pb-2 border-bottom\">{{ $t('meeting.props.billing_address') }}</h5>\n\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <base-input :label=\"formLabels.userName\" type=\"text\" v-model=\"formData.userName\" :error.sync=\"formErrors.userName\" />\n                    </div>\n                    <div class=\"col-12 col-md-4\">\n                        <base-input :label=\"formLabels.addressLine1\" type=\"text\" v-model=\"formData.addressLine1\" :error.sync=\"formErrors.addressLine1\" />\n                    </div>\n                    <div class=\"col-12 col-md-4\">\n                        <base-input :label=\"formLabels.addressLine2\" type=\"text\" v-model=\"formData.addressLine2\" :error.sync=\"formErrors.addressLine2\" />\n                    </div>\n                    <div class=\"col-12 col-md-4\">\n                        <base-input :label=\"formLabels.city\" type=\"text\" v-model=\"formData.city\" :error.sync=\"formErrors.city\" />\n                    </div>\n                    <div class=\"col-12 col-md-4\">\n                        <base-input :label=\"formLabels.state\" type=\"text\" v-model=\"formData.state\" :error.sync=\"formErrors.state\" />\n                    </div>\n                    <div class=\"col-12 col-md-4\">\n                        <base-input :label=\"formLabels.country\" type=\"text\" v-model=\"formData.country\" :error.sync=\"formErrors.country\" />\n                    </div>\n                    <div class=\"col-12 col-md-4\">\n                        <base-input :label=\"formLabels.zipcode\" type=\"text\" v-model=\"formData.zipcode\" :error.sync=\"formErrors.zipcode\" />\n                    </div>\n                </div>\n\n                <br>\n\n                <div v-if=\"showPaymentOptions\">\n                    <b-card no-body>\n                        <b-tabs pills card vertical lazy active-nav-item-class=\"font-weight-bold py-2\" nav-wrapper-class=\"col-12 col-md-4 col-lg-3 border-right\" v-model=\"computedActiveTab\">\n                            <b-tab v-for=\"gateway in preRequisite.paymentGateways\" :title=\"gateway.label\" :key=\"gateway.name\" title-item-class=\"p-0\">\n\n                                <stripe-element-card v-if=\"gateway.name === 'stripe'\" ref=\"stripeRef\" :pk=\"stripeConfig.key\" :amount=\"payableAmount*100\" :locale=\"configs.system.locale\" @token=\"stripeTokenCreated\" @loading=\"loading = $event\" :style-object=\"stripeStyle\" />\n\n                                <div v-if=\"gateway.name === 'paypal'\" ref=\"paypalRef\">\n                                    <animated-loader :is-loading=\"!paypalConfig.loaded && computedActiveTab === 1 && !isBusy\" :loader-color=\"vars.loaderColor\" />\n                                </div>\n\n                                <div v-if=\"gateway.name === 'paddle'\" class=\"paddle-container\">\n                                    <animated-loader :is-loading=\"!paddleConfig.loaded && computedActiveTab === 2 && !isBusy\" :loader-color=\"vars.loaderColor\" />\n                                </div>\n\n                            </b-tab>\n                        </b-tabs>\n                    </b-card>\n                </div>\n            </template>\n\n            <div class=\"form-footer mt-3\">\n                <div class=\"left-side\">\n                    <base-button type=\"button\" design=\"light\" @click=\"$router.back()\" tabindex=\"-1\"><i class=\"fas fa-chevron-left\"></i> {{ $t('general.cancel') }}</base-button>\n                </div>\n                <div class=\"right-side\">\n                    <base-button v-if=\"computedActiveTab === 0\" type=\"submit\" design=\"primary\">{{ $t('general.proceed') }} <i class=\"fas fa-chevron-right\"></i></base-button>\n                </div>\n            </div>\n        </form>\n    </base-container>\n</template>\n\n<script>\n    import form from '@mixins/form'\n    import { mapGetters, mapActions } from 'vuex'\n    import { StripeElementCard } from '@vue-stripe/vue-stripe';\n    import { BCard, BTabs, BTab } from 'bootstrap-vue'\n\n    export default {\n        extends: form,\n        components: {\n            StripeElementCard,\n            BCard,\n            BTabs,\n            BTab,\n        },\n        data() {\n            return {\n                formData: {\n                    currency: null,\n                    amount: 0,\n                    payableAmount: 0,\n                    source: null,\n                    token: null,\n                    charge: null,\n                    userName: '',\n                    addressLine1: '',\n                    addressLine2: '',\n                    city: '',\n                    state: '',\n                    country: '',\n                    zipcode: '',\n                },\n                formLabels: {\n                    currency: $t('config.system.currency'),\n                    amount: $t('meeting.payment.amount'),\n                    payableAmount: $t('meeting.payment.payable_amount'),\n                    userName: $t('meeting.payment.user_name'),\n                    addressLine1: $t('meeting.payment.address_line_1'),\n                    addressLine2: $t('meeting.payment.address_line_2'),\n                    city: $t('meeting.payment.city'),\n                    state: $t('meeting.payment.state'),\n                    country: $t('meeting.payment.country'),\n                    zipcode: $t('meeting.payment.zipcode'),\n                },\n                showPaymentOptions: true,\n                initialSetupCompleted: false,\n                paypalConfig: {},\n                paypalButtons: null,\n                paypalButtonsHasRendered: false,\n                paddleConfig: {},\n                activePGTab: 0,\n                loading: false,\n                initUrl: 'meetings',\n                initSubUrl: 'payment',\n                preRequisite: {\n                    selectedCurrency: null,\n                    currencies: [],\n                    paymentGateways: [],\n                },\n            }\n        },\n        computed: {\n            ...mapGetters('common', [\n                'entity',\n            ]),\n            ...mapGetters('user', [\n                'hasActiveMembership',\n                'meetingExpiryDate',\n                'hasLifetimeMembership',\n                'email',\n                'name',\n            ]),\n            isBusy() {\n                return !this.entity || this.isLoading ? true : false\n            },\n            computedCurrency: {\n                get() {\n                    return this.formData.currency ? this.formData.currency.name : null\n                },\n                set(v) {\n                    this.formData.currency = this.preRequisite.currencies.find(c => c.name === v)\n                    this.getCalculatedAmount()\n\n                    if(this.preRequisite.paymentGateways.length && this.preRequisite.paymentGateways[this.computedActiveTab].name === 'paypal') {\n                        if(this.paypalConfig.loaded === true) {\n                            this.paypalScriptLoaded()\n                        } else {\n                            this.loadPaypal()\n                        }\n                    }\n\n                    if(this.preRequisite.paymentGateways.length && this.preRequisite.paymentGateways[this.computedActiveTab].name === 'paddle') {\n                        if(this.paddleConfig.loaded === true) {\n                            this.paddleScriptLoaded()\n                        } else {\n                            this.loadPaddle()\n                        }\n                    }\n                }\n            },\n            computedPricingForPaddle() {\n                return [ this.computedCurrency ? `${this.computedCurrency}:${this.payableAmount}` : `USD:${this.payableAmount}` ]\n            },\n            stripeConfig() {\n                return this.preRequisite && this.preRequisite.paymentGateways.length ? this.preRequisite.paymentGateways[0] : {}\n            },\n            stripeStyle() {\n                return {\n                    empty: {\n                        '::placeholder': {\n                            color: '#adb5c0'\n                        },\n                        ':focus': {\n                            '::placeholder': {\n                                color: '#ced4dd'\n                            }\n                        }\n                    },\n                }\n            },\n            payableAmount() {\n                return this.formData.amount\n            },\n            computedActiveTab: {\n                get() {\n                    return this.activePGTab === -1 ? 0 : this.activePGTab\n                },\n                set(v) {\n                    this.activePGTab = v === -1 ? 0 : v\n\n                    if(v !== -1) {\n                        if(this.preRequisite.paymentGateways.length && this.preRequisite.paymentGateways[v].name === 'paypal') {\n                            if(this.paypalConfig.loaded === false) {\n                                this.loadPaypal()\n                            } else {\n                                this.paypalScriptLoaded()\n                            }\n                        } else {\n                            if(this.paypalConfig.loaded && this.paypalButtons && this.paypalButtons.close) {\n                                this.paypalButtons.close()\n                                this.paypalButtonsHasRendered = false\n                            }\n\n                            if(this.preRequisite.paymentGateways.length && this.preRequisite.paymentGateways[v].name === 'paddle') {\n                                if(this.paddleConfig.loaded === false) {\n                                    this.loadPaddle()\n                                } else {\n                                    this.paddleScriptLoaded()\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n        },\n        methods: {\n            ...mapActions('user', [\n                'GetUser',\n            ]),\n            getCalculatedAmount(cbFunction) {\n                if(! this.initialSetupCompleted) {\n                    return\n                }\n\n                this.isLoading = true\n                this.formData.method = this.preRequisite && this.preRequisite.paymentGateways && this.preRequisite.paymentGateways.length ? this.preRequisite.paymentGateways[this.computedActiveTab].name : null\n\n                this.Custom({\n                        url: `/${this.initUrl}/${this.entity.uuid}/payment/calculate`,\n                        method: 'post',\n                        data: this.formData\n                    })\n                    .then(response => {\n                        this.formData.amount = response.amount || 0\n                        this.formData.paddleUrl = response.paddleUrl\n                        // this.showPaymentOptions = this.formData.payable ? true : false\n                        this.isLoading = false\n\n                        if(cbFunction && _.isFunction(cbFunction)) {\n                            cbFunction()\n                        } else {\n                            if(this.preRequisite && this.preRequisite.paymentGateways.length && this.preRequisite.paymentGateways[this.computedActiveTab].name === 'paddle') {\n                                if(this.paddleConfig.loaded === true) {\n                                    if(Paddle && Paddle.Checkout) {\n                                        // Paddle.Checkout.close()\n                                        // this.paddleConfig.loaded = false\n                                    }\n\n                                    this.paddleScriptLoaded()\n                                } else {\n                                    this.loadPaddle()\n                                }\n                            }\n                        }\n                    })\n                    .catch(error => {\n                        this.isLoading = false\n                        formUtil.handleErrors(error)\n                    })\n            },\n            updateMeeting() {\n                this.isLoading = true\n                this.Custom({\n                        url: `/${this.initUrl}/${this.entity.uuid}/payment`,\n                        method: 'post',\n                        data: this.formData\n                    })\n                    .then(response => {\n                        this.$toasted.success(response.message, this.$toastConfig)\n\n\n                        if (this.$route.query && this.$route.query.hasOwnProperty('join')) {\n                            this.$router.push({ name: 'liveMeeting', params: { uuid: this.entity.uuid } })\n                        } else {\n                            this.$router.push({ name: 'appMeetingPaymentReceipt', params: { uuid: this.entity.uuid } })\n                        }\n                        // this.isLoading = false\n                    })\n                    .catch(error => {\n                        this.isLoading = false\n                        formUtil.handleErrors(error)\n                    })\n            },\n            proceed() {\n                if (this.formData.amount) {\n                    this.isLoading = true\n                    if (this.$refs && this.$refs.stripeRef && this.preRequisite.paymentGateways.length && this.preRequisite.paymentGateways[this.computedActiveTab].name === 'stripe') {\n                        this.$refs.stripeRef[0].submit()\n                    } else {\n                        this.isLoading = false\n                    }\n                } else {\n                    this.updateMeeting()\n                }\n            },\n            stripeTokenCreated(token) {\n                this.formData.token = token\n                this.formData.method = this.preRequisite.paymentGateways.length && this.preRequisite.paymentGateways[this.computedActiveTab].name\n\n                // for additional charge objects go to https://stripe.com/docs/api/charges/object\n                this.formData.charge = {\n                    source: token.id,\n                    amount: this.payableAmount * 100, // the amount you want to charge the customer in cents. $100 is 1000 (it is strongly recommended you use a product id and quantity and get calculate this on the backend to avoid people manipulating the cost)\n                }\n                this.formData.payableAmount = this.formData.charge.amount\n\n                this.updateMeeting()\n            },\n            paypalScriptLoaded() {\n                this.loading = true\n                this.isLoading = true\n\n                if (this.paypalButtons && this.paypalButtons.close && this.paypalButtonsHasRendered) {\n                    this.paypalButtons.close()\n                    this.paypalButtonsHasRendered = false\n                }\n\n                this.paypalButtons = window.paypal.Buttons({\n                    createOrder: (data, actions) => {\n                        this.isLoading = true\n                        const orderObj = {\n                            purchase_units: [\n                                {\n                                    description: `${window.kmenv.name} - ${this.computedFrequency.name} ${$t('meeting.meeting')}`,\n                                    amount: {\n                                        currency_code: this.computedCurrency,\n                                        value: this.payableAmount\n                                    }\n                                }\n                            ]\n                        }\n\n                        // console.log(orderObj)\n                        return actions.order.create(orderObj)\n                    },\n                    onApprove: async (data, actions) => {\n                        const token = await actions.order.capture()\n                        // console.log(token)\n                        this.formData.token = token\n                        this.formData.method = this.preRequisite.paymentGateways.length ? this.preRequisite.paymentGateways[this.computedActiveTab].name : null\n\n                        // for additional charge objects go to https://stripe.com/docs/api/charges/object\n                        this.formData.charge = {\n                            source: token.id,\n                            amount: this.payableAmount, // the amount you want to charge the customer in cents. $100 is 1000 (it is strongly recommended you use a product id and quantity and get calculate this on the backend to avoid people manipulating the cost)\n                        }\n                        this.formData.payableAmount = this.formData.charge.amount\n                        this.isLoading = false\n                        this.updateMeeting()\n                    },\n                    onError: err => {\n                        this.isLoading = false\n                        this.$toasted.error(this.$t('meeting.paypal_create_order_error'), this.$toastConfig.error)\n                    }\n                })\n\n                this.paypalButtons.render(this.$refs.paypalRef[0])\n                .then(() => {\n                    this.paypalButtonsHasRendered = true\n                })\n                .catch((err) => {\n                    let selector = this.$refs.paypalRef[0]\n\n                    // button failed to render, possibly because it was closed or destroyed.\n                    if (selector && selector.children.length > 0) {\n                        // still mounted so throw an error\n                        throw new Error(err)\n                    }\n\n                    this.$toasted.info($t('general.kindly_reload_page'), this.$toastConfig.info)\n\n                    // not mounted anymore, we can safely ignore the error\n                    return\n                })\n\n                this.paypalConfig.loaded = true\n                this.loading = false\n                this.isLoading = false\n            },\n            paddleScriptLoaded() {\n                if(Paddle) {\n                    if(!this.paddleConfig.mode) {\n                        Paddle.Environment.set('sandbox')\n                    }\n\n                    Paddle.Setup({\n                        vendor: this.paddleConfig.key,\n                    })\n\n                    this.getCalculatedAmount(() => {\n                        Paddle.Checkout.open({\n                            method: 'inline',\n                            email: this.email,\n                            country: this.formData.country,\n                            postcode: this.formData.zipcode,\n                            allowQuantity: false,\n                            disableLogout: true,\n                            frameTarget: 'paddle-container',\n                            frameInitialHeight: 416,\n                            frameStyle: 'width:100%; min-width:312px; background-color: transparent; border: none;',\n                            override: this.formData.paddleUrl,\n                            successCallback: (data) => {\n                                this.formData.token = data.checkout\n                                this.formData.method = this.preRequisite.paymentGateways.length && this.preRequisite.paymentGateways[this.computedActiveTab].name\n\n                                this.formData.charge = {\n                                    source: data.checkout.id,\n                                    amount: this.payableAmount\n                                }\n                                this.formData.payableAmount = this.formData.charge.amount\n\n                                this.updateMeeting()\n                            },\n                            // closeCallback: (data) => {\n                            //     console.log(data)\n                            // }\n                        })\n                        this.paddleConfig.loaded = true\n                    })\n                }\n            },\n            loadPaypal() {\n                const script = document.createElement(\"script\")\n                script.src =\n                \"https://www.paypal.com/sdk/js?client-id=\" + this.paypalConfig.key + \"&currency=\" + this.computedCurrency\n                script.addEventListener(\"load\", this.paypalScriptLoaded)\n                document.body.appendChild(script)\n            },\n            loadPaddle() {\n                const script = document.createElement(\"script\")\n                script.src =\n                \"https://cdn.paddle.com/paddle/paddle.js\"\n                script.addEventListener(\"load\", this.paddleScriptLoaded)\n                document.body.appendChild(script)\n            },\n            getPreRequisite(callbackFn) {\n                this.isLoading = true\n                this.Custom({\n                        url: `/${this.initUrl}/${this.entity.uuid}/payment/pre-requisite`,\n                        method: 'get',\n                    })\n                    .then(response => {\n                        this.fillPreRequisite(response)\n                        callbackFn(response)\n\n                        this.isLoading = false\n                        return response\n                    })\n                    .catch(error => {\n                        this.isLoading = false\n                        formUtil.handleErrors(error)\n                    })\n            },\n            initialSetup() {\n                this.formData.currency = this.configs.system.currency\n\n                this.formData.userName = this.name\n\n                if (this.preRequisite) {\n                    this.formData.currency = this.preRequisite.selectedCurrency ? this.preRequisite.selectedCurrency : (this.preRequisite.currencies ? this.preRequisite.currencies[0] : null)\n\n                    if (this.preRequisite.paymentGateways.length) {\n                        this.paypalConfig = this.preRequisite.paymentGateways.find(pg => pg.name === 'paypal')\n                        if(this.paypalConfig) {\n                            this.paypalConfig.loaded = false\n\n                            if(this.preRequisite.paymentGateways[this.computedActiveTab].name === 'paypal') {\n                                this.loadPaypal()\n                            }\n                        }\n\n                        this.paddleConfig = this.preRequisite.paymentGateways.find(pg => pg.name === 'paddle')\n                        if(this.paddleConfig) {\n                            this.paddleConfig.loaded = false\n\n                            if(this.preRequisite.paymentGateways[this.computedActiveTab].name === 'paddle') {\n                                this.loadPaddle()\n                            }\n                        }\n                    }\n\n                    this.initialSetupCompleted = true\n\n                    window.setTimeout(() => {\n                        this.getCalculatedAmount()\n                    }, 1000)\n                } else {\n                    this.initialSetupCompleted = true\n                }\n            },\n        },\n        mounted() {\n            this.getPreRequisite(this.initialSetup)\n        },\n\n    }\n\n</script>\n\n<style lang=\"scss\">\n    @import '~@js/core/assets/scss/imports.scss';\n    .base-container {\n        .StripeElement {\n            border: 1px solid $light !important;\n        }\n    }\n</style>\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Muli:300,400,600,700,800,900);\", \"\"]);\n\n// module\nexports.push([module.id, \".base-container .StripeElement {\\n  border: 1px solid #dee2e9 !important;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&lang=scss&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&lang=scss&\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&lang=scss&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"base-container\",\n    {\n      attrs: {\n        boxed: \"\",\n        \"min-height\": \"full\",\n        \"has-form\": \"\",\n        \"has-footer\": \"\"\n      }\n    },\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.proceed.apply(null, arguments)\n            }\n          }\n        },\n        [\n          _c(\"animated-loader\", {\n            attrs: {\n              \"is-loading\": _vm.isBusy,\n              \"loader-color\": _vm.vars.loaderColor\n            }\n          }),\n          _vm._v(\" \"),\n          _vm.entity\n            ? [\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\"div\", { staticClass: \"col-12 col-md-6 mb-4\" }, [\n                    _c(\"label\", { staticClass: \"d-block text-muted\" }, [\n                      _vm._v(_vm._s(_vm.formLabels.currency))\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", [\n                      _vm._v(\n                        \"\\n                        \" +\n                          _vm._s(_vm.computedCurrency) +\n                          \"\\n                    \"\n                      )\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 col-md-6 mb-4\" },\n                    [\n                      _c(\"view-currency\", {\n                        staticClass: \"text-right\",\n                        attrs: {\n                          label: _vm.formLabels.payableAmount,\n                          value: _vm.payableAmount,\n                          currency: _vm.formData.currency,\n                          tag: \"h2\",\n                          \"data-classes\":\n                            \"text-success font-weight-600 text-right\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"h5\", { staticClass: \"mb-2 mt-1 pb-2 border-bottom\" }, [\n                  _vm._v(_vm._s(_vm.$t(\"meeting.props.billing_address\")))\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12\" },\n                    [\n                      _c(\"base-input\", {\n                        attrs: {\n                          label: _vm.formLabels.userName,\n                          type: \"text\",\n                          error: _vm.formErrors.userName\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(_vm.formErrors, \"userName\", $event)\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.userName,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"userName\", $$v)\n                          },\n                          expression: \"formData.userName\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 col-md-4\" },\n                    [\n                      _c(\"base-input\", {\n                        attrs: {\n                          label: _vm.formLabels.addressLine1,\n                          type: \"text\",\n                          error: _vm.formErrors.addressLine1\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(\n                              _vm.formErrors,\n                              \"addressLine1\",\n                              $event\n                            )\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.addressLine1,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"addressLine1\", $$v)\n                          },\n                          expression: \"formData.addressLine1\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 col-md-4\" },\n                    [\n                      _c(\"base-input\", {\n                        attrs: {\n                          label: _vm.formLabels.addressLine2,\n                          type: \"text\",\n                          error: _vm.formErrors.addressLine2\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(\n                              _vm.formErrors,\n                              \"addressLine2\",\n                              $event\n                            )\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.addressLine2,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"addressLine2\", $$v)\n                          },\n                          expression: \"formData.addressLine2\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 col-md-4\" },\n                    [\n                      _c(\"base-input\", {\n                        attrs: {\n                          label: _vm.formLabels.city,\n                          type: \"text\",\n                          error: _vm.formErrors.city\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(_vm.formErrors, \"city\", $event)\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.city,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"city\", $$v)\n                          },\n                          expression: \"formData.city\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 col-md-4\" },\n                    [\n                      _c(\"base-input\", {\n                        attrs: {\n                          label: _vm.formLabels.state,\n                          type: \"text\",\n                          error: _vm.formErrors.state\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(_vm.formErrors, \"state\", $event)\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.state,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"state\", $$v)\n                          },\n                          expression: \"formData.state\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 col-md-4\" },\n                    [\n                      _c(\"base-input\", {\n                        attrs: {\n                          label: _vm.formLabels.country,\n                          type: \"text\",\n                          error: _vm.formErrors.country\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(_vm.formErrors, \"country\", $event)\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.country,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"country\", $$v)\n                          },\n                          expression: \"formData.country\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 col-md-4\" },\n                    [\n                      _c(\"base-input\", {\n                        attrs: {\n                          label: _vm.formLabels.zipcode,\n                          type: \"text\",\n                          error: _vm.formErrors.zipcode\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(_vm.formErrors, \"zipcode\", $event)\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.zipcode,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"zipcode\", $$v)\n                          },\n                          expression: \"formData.zipcode\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\"br\"),\n                _vm._v(\" \"),\n                _vm.showPaymentOptions\n                  ? _c(\n                      \"div\",\n                      [\n                        _c(\n                          \"b-card\",\n                          { attrs: { \"no-body\": \"\" } },\n                          [\n                            _c(\n                              \"b-tabs\",\n                              {\n                                attrs: {\n                                  pills: \"\",\n                                  card: \"\",\n                                  vertical: \"\",\n                                  lazy: \"\",\n                                  \"active-nav-item-class\":\n                                    \"font-weight-bold py-2\",\n                                  \"nav-wrapper-class\":\n                                    \"col-12 col-md-4 col-lg-3 border-right\"\n                                },\n                                model: {\n                                  value: _vm.computedActiveTab,\n                                  callback: function($$v) {\n                                    _vm.computedActiveTab = $$v\n                                  },\n                                  expression: \"computedActiveTab\"\n                                }\n                              },\n                              _vm._l(_vm.preRequisite.paymentGateways, function(\n                                gateway\n                              ) {\n                                return _c(\n                                  \"b-tab\",\n                                  {\n                                    key: gateway.name,\n                                    attrs: {\n                                      title: gateway.label,\n                                      \"title-item-class\": \"p-0\"\n                                    }\n                                  },\n                                  [\n                                    gateway.name === \"stripe\"\n                                      ? _c(\"stripe-element-card\", {\n                                          ref: \"stripeRef\",\n                                          refInFor: true,\n                                          attrs: {\n                                            pk: _vm.stripeConfig.key,\n                                            amount: _vm.payableAmount * 100,\n                                            locale: _vm.configs.system.locale,\n                                            \"style-object\": _vm.stripeStyle\n                                          },\n                                          on: {\n                                            token: _vm.stripeTokenCreated,\n                                            loading: function($event) {\n                                              _vm.loading = $event\n                                            }\n                                          }\n                                        })\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    gateway.name === \"paypal\"\n                                      ? _c(\n                                          \"div\",\n                                          { ref: \"paypalRef\", refInFor: true },\n                                          [\n                                            _c(\"animated-loader\", {\n                                              attrs: {\n                                                \"is-loading\":\n                                                  !_vm.paypalConfig.loaded &&\n                                                  _vm.computedActiveTab === 1 &&\n                                                  !_vm.isBusy,\n                                                \"loader-color\":\n                                                  _vm.vars.loaderColor\n                                              }\n                                            })\n                                          ],\n                                          1\n                                        )\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    gateway.name === \"paddle\"\n                                      ? _c(\n                                          \"div\",\n                                          { staticClass: \"paddle-container\" },\n                                          [\n                                            _c(\"animated-loader\", {\n                                              attrs: {\n                                                \"is-loading\":\n                                                  !_vm.paddleConfig.loaded &&\n                                                  _vm.computedActiveTab === 2 &&\n                                                  !_vm.isBusy,\n                                                \"loader-color\":\n                                                  _vm.vars.loaderColor\n                                              }\n                                            })\n                                          ],\n                                          1\n                                        )\n                                      : _vm._e()\n                                  ],\n                                  1\n                                )\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ]\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"form-footer mt-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"left-side\" },\n              [\n                _c(\n                  \"base-button\",\n                  {\n                    attrs: { type: \"button\", design: \"light\", tabindex: \"-1\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.$router.back()\n                      }\n                    }\n                  },\n                  [\n                    _c(\"i\", { staticClass: \"fas fa-chevron-left\" }),\n                    _vm._v(\" \" + _vm._s(_vm.$t(\"general.cancel\")))\n                  ]\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"right-side\" },\n              [\n                _vm.computedActiveTab === 0\n                  ? _c(\n                      \"base-button\",\n                      { attrs: { type: \"submit\", design: \"primary\" } },\n                      [\n                        _vm._v(_vm._s(_vm.$t(\"general.proceed\")) + \" \"),\n                        _c(\"i\", { staticClass: \"fas fa-chevron-right\" })\n                      ]\n                    )\n                  : _vm._e()\n              ],\n              1\n            )\n          ])\n        ],\n        2\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=586f982e&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('586f982e')) {\n      api.createRecord('586f982e', component.options)\n    } else {\n      api.reload('586f982e', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=586f982e&\", function () {\n      api.rerender('586f982e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/app/meeting/payment/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/style-loader/index.js!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=586f982e&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAtCA;AA4CA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAJA;AADA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AA9DA;AA8FA;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAIA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAFA;AACA;AAYA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAeA;AACA;AACA;AAAA;AACA;AApCA;AAuCA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1BA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAlRA;AAoRA;AACA;AACA;AA1aA;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnzbA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACvCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}