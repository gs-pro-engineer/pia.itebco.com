{"version":3,"file":"js/chunks/app/meeting/add~app/meeting/edit.js?id=5a65b3bc4bebcf40c879","sources":["webpack:///form.vue","webpack:///./resources/js/views/app/meeting/form.vue?3147","webpack:///./resources/js/views/app/meeting/form.vue?168b","webpack:///./resources/js/views/app/meeting/form.vue?bb27","webpack:///./resources/js/views/app/meeting/form.vue","webpack:///./resources/js/views/app/meeting/form.vue?e6ec","webpack:///./resources/js/views/app/meeting/form.vue?0597","webpack:///./resources/js/views/app/meeting/form.vue?fa5e"],"sourcesContent":["<template>\n    <form @submit.prevent=\"submit\">\n        <animated-loader :is-loading=\"isLoading || isFetching\" :loader-color=\"vars.loaderColor\" />\n\n        <div class=\"row\">\n            <div class=\"col-12 col-md-5\">\n\n                <div class=\"row\">\n                    <div class=\"col-12 mb-3\">\n                        <base-input auto-focus :label=\"formLabels.title\" type=\"text\" v-model=\"formData.title\" :error.sync=\"formErrors.title\" required />\n                    </div>\n\n                    <div class=\"col-12 mb-3\">\n                        <base-textarea rows=\"10\" :label=\"formLabels.agenda\" v-model=\"formData.agenda\" :error.sync=\"formErrors.agenda\" required />\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"col-12 col-md-7\">\n                <fieldset class=\"fieldset primary\">\n                    <div class=\"row\">\n                        <div class=\"col-12 col-md-6 mb-3\">\n                            <base-select :options=\"preRequisite.types\" v-model=\"formData.type\" :label=\"formLabels.type\" :error.sync=\"formErrors.type\" required :allow-empty=\"false\" preselect-first />\n                        </div>\n\n                        <div class=\"col-12 col-md-6 mb-3\">\n                            <base-select :options=\"preRequisite.categories\" v-model=\"formData.category\" :label=\"formLabels.category\" :error.sync=\"formErrors.category\" required :allow-empty=\"false\" preselect-first :add-new-modal=\"true\" needed-permission=\"access-meeting-config\">\n                                <template #addNewModal>\n                                    <option-form :meta=\"{optionType: 'meeting_category', dataType: 'category', dataTypeArr: 'categories', entityTitle: 'meeting.meeting_category.category'}\" @close=\"newModalClose\" />\n                                </template>\n                            </base-select>\n                        </div>\n\n                        <div class=\"col-12 col-md-6 mb-3\">\n                            <base-input class=\"mb-3\" :label=\"formLabels.startDateTime\" addon-right-icon=\"far fa-calendar-alt\" type=\"text\" v-model=\"formData.startDateTime\" :error.sync=\"formErrors.startDateTime\" :is-wrapper=\"true\" required>\n                                <date-picker v-model=\"formData.startDateTime\" :config=\"vars.datetimepickerConfig\" class=\"form-control datepicker\">\n                                </date-picker>\n                            </base-input>\n                        </div>\n\n                        <div class=\"col-12 col-md-6 mb-3\">\n                            <base-input class=\"mb-3\" :label=\"formLabels.period\" type=\"number\" v-model=\"formData.period\" :error.sync=\"formErrors.period\" required select-on-focus @wheel.stop.prevent :addon-right-text=\"$t('list.general.durations.minutes')\" />\n                        </div>\n\n                        <div class=\"col-12 col-md-6 mb-3\">\n                            <base-input :label=\"formLabels.identifier\" type=\"text\" v-model=\"formData.identifier\" :error.sync=\"formErrors.identifier\" />\n                        </div>\n\n                        <div class=\"col-12 col-md-6 mb-3\">\n                            <base-input :label=\"formLabels.maxParticipantCount\" type=\"number\" v-model=\"formData.maxParticipantCount\" :error.sync=\"formErrors.maxParticipantCount\" :min=\"2\" :max=\"maxParticipantAllowed\" :step=\"1\" />\n                        </div>\n\n                        <div class=\"col-12 col-md-6 mb-3\">\n                            <base-select \n                                :options=\"autoTranslates\" \n                                v-model=\"selectTranslator\"\n                                :label=\"formLabels.autoTranslate\"\n                                :allow-empty=\"false\"\n                                preselect-first\n                                simple \n                                track-by=\"uuid\" \n                                show-by=\"label\" \n                                required\n                            />\n                        </div>\n\n                        <div class=\"col-12 col-md-6 mb-3\">\n                            <base-checkbox class=\"ml-3 mt-2\" v-model=\"formData.accessibleViaLink\">\n                                {{ formLabels.accessibleViaLink }}\n                            </base-checkbox>\n                        </div>\n\n                        <div class=\"col-12 col-md-6 mb-3\" v-if=\"configs.meeting && configs.meeting.enablePam && !formData.accessibleToMembers && !formData.isPaid\">\n                            <base-checkbox class=\"ml-3 mt-2\" v-model=\"formData.isPam\" @change=\"isPamChanged\">\n                                {{ formLabels.isPam }}\n                            </base-checkbox>\n                        </div>\n                    </div>\n\n                    <template v-if=\"allowExtraInput && !formData.isPam\">\n                        <div class=\"row\" v-if=\"!formData.isPaid\">\n                            <div class=\"col-12 mb-3\">\n                                <base-checkbox class=\"ml-3 mt-2\" v-model=\"formData.accessibleToMembers\" @change=\"accessibleToMembersChanged\">\n                                    {{ formLabels.accessibleToMembers }}\n                                </base-checkbox>\n                            </div>\n                        </div>\n\n                        <div class=\"row\" v-if=\"configs.meeting.enablePaidMeeting && !formData.accessibleToMembers\">\n                            <div class=\"col-12 col-md-6 mb-3\">\n                                <base-checkbox class=\"ml-3 mt-2\" v-model=\"formData.isPaid\" @change=\"isPaidChanged\">\n                                    {{ formLabels.isPaid }}\n                                </base-checkbox>\n                            </div>\n\n                            <div class=\"col-12 col-md-6 mb-3\" v-if=\"formData.isPaid\">\n                                <base-input :label=\"formLabels.fee\" type=\"number\" v-model=\"formData.fee\" :error.sync=\"formErrors.fee\" :min=\"0.01\" :step=\"0.01\" format=\"currency\" />\n                            </div>\n                        </div>\n                    </template>\n                </fieldset>\n            </div>\n        </div>\n\n        <div class=\"mt-element\">\n            <editor-wrapper :label=\"formLabels.description\" v-model=\"formData.description\" :error.sync=\"formErrors.description\" />\n        </div>\n\n        <div v-if=\"formHasErrors\" class=\"alert alert-danger\" role=\"alert\">\n            <h6 class=\"m-0\">{{ $t('general.form_has_errors') }}</h6>\n        </div>\n\n        <div class=\"form-footer mt-5\">\n            <div class=\"left-side\">\n                <base-button type=\"button\" design=\"light\" @click=\"$router.back()\" tabindex=\"-1\"><i class=\"fas fa-chevron-left\"></i> {{ $t('general.cancel') }}</base-button>\n\n                <base-checkbox class=\"ml-3 mt-2\" v-model=\"keepAdding\" v-if=\"showKeepAdding\">\n                    {{ $t('general.keep_adding') }}\n                </base-checkbox>\n            </div>\n            <div class=\"right-side\">\n                <base-button type=\"button\" design=\"light\" @click=\"reset\">{{ $t('general.reset') }}</base-button>\n                <base-button type=\"submit\" design=\"primary\">{{ $t('global.save', { attribute: $t('meeting.meeting') } ) }}</base-button>\n            </div>\n        </div>\n\n        <template v-if=\"showKeepAdding && keepAdding\">\n            <keep-adding-form :keep-adding-fields=\"keepAddingFields\" :keep-adding-option=\"keepAddingOption\" @optionUpdated=\"keepAddingOption=$event\" :keep-adding-selected-fields=\"keepAddingSelectedFields\" @fieldsUpdated=\"keepAddingSelectedFields=$event\" :is-loading=\"isLoading\" />\n        </template>\n        <template>\n            <SlideYUpTransition :duration=\"this.props.animationDuration\">\n                <div class=\"modal fade\"\n                    @click.self=\"closeModal\"\n                    :class=\"[{'show d-block': this.props.show}, {'d-none': !this.props.show}, {'modal-mini': this.props.type === 'mini'}]\"\n                    v-show=\"this.props.show\"\n                    tabindex=\"-1\"\n                    role=\"dialog\"\n                    :aria-hidden=\"!this.props.show\">\n\n                    <div class=\"modal-dialog modal-dialog-centered\" :class=\"[{'modal-notice': this.props.type === 'notice'}, this.props.modalClasses]\">\n                        <div class=\"modal-content\" :class=\"[this.props.gradient ? `bg-gradient-${this.props.gradient}` : '', this.props.modalContentClasses]\">\n\n                            <div class=\"modal-body\" :class=\"this.props.bodyClasses\">\n                                <slot>\n                                    <div class=\"col-12\">\n                                        <h5>Please Input the Microsoft Azure API Key!</h5>\n                                        <base-input\n                                            :label=\"formLabels.azure_api_key\"\n                                            type=\"text\"\n                                            v-model=\"modalFormData.azureApikey\"\n                                            :error.sync=\"formErrors.azureApikey\"\n                                            @change=\"isChangedAzureApiKey\"\n                                        />\n                                    </div>\n                                </slot>\n                            </div>\n\n                            <div class=\"modal-footer\" :class=\"this.props.footerClasses\">\n                                <slot name=\"footer\">\n                                    <div class=\"text-right\">\n                                        <base-button type=\"button\" design=\"light\" @click=\"closeModal\">\n                                            {{$t(\"general.cancel\")}}\n                                        </base-button>\n                                        <base-button type=\"button\" design=\"primary\" @click=\"saveAzureApiKey\">\n                                            {{$t(\"general.save\")}}\n                                        </base-button>\n                                    </div>\n                                </slot>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </SlideYUpTransition>\n        </template>\n        <template>\n            <SlideYUpTransition :duration=\"this.props.animationDuration\">\n                <div class=\"modal fade\"\n                    @click.self=\"closeGoogleModal\"\n                    :class=\"[{'show d-block': this.props.showGoogleModal}, {'d-none': !this.props.showGoogleModal}, {'modal-mini': this.props.type === 'mini'}]\"\n                    v-show=\"this.props.showGoogleModal\"\n                    tabindex=\"-1\"\n                    role=\"dialog\"\n                    :aria-hidden=\"!this.props.showGoogleModal\">\n\n                    <div class=\"modal-dialog modal-dialog-centered\" :class=\"[{'modal-notice': this.props.type === 'notice'}, this.props.modalClasses]\">\n                        <div class=\"modal-content\" :class=\"[this.props.gradient ? `bg-gradient-${this.props.gradient}` : '', this.props.modalContentClasses]\">\n\n                            <div class=\"modal-body\" :class=\"this.props.bodyClasses\">\n                                <slot>\n                                    <div class=\"col-12\">\n                                        <label class=\"input-group-material-label\">\n                                            Please Upload the Google API Key file!\n                                        </label>\n                                        <file-uploader\n                                            class=\"mb-5\"\n                                            name-label=\"config.system.google_api_key\"\n                                            :options=\"uploaderConfig\"\n                                            @updated=\"handleFileUpload\"\n                                            :multiple=\"false\"\n                                            url=\"/config/system/google_api_key_json/start\"\n                                            button-classes=\"justify-content-center\"\n                                            :hideAfterUpload=\"false\"\n                                        />\n                                    </div>\n                                </slot>\n                            </div>\n\n                            <div class=\"modal-footer\" :class=\"this.props.footerClasses\">\n                                <slot name=\"footer\">\n                                    <div class=\"text-right\">\n                                        <base-button type=\"button\" design=\"light\" @click=\"closeGoogleModal\">\n                                            {{$t(\"general.cancel\")}}\n                                        </base-button>\n                                        <base-button type=\"button\" design=\"primary\" @click=\"saveGoogleApiKey\">\n                                            {{$t(\"general.save\")}}\n                                        </base-button>\n                                    </div>\n                                </slot>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </SlideYUpTransition>\n        </template>\n    </form>\n</template>\n\n<script>\n    import form from '@mixins/form'\n    import EditorWrapper from '@core/components/EditorWrapper'\n    import OptionForm from '@views/app/option/modal-form'\n    import * as MomentTz from '@core/filters/momentz'\n    import * as ConfigAPI from '@api/config'\n    import { SlideYUpTransition } from \"vue2-transitions\";\n\n    import store from '@js/store'\n    const vars = store.getters['config/vars']\n\n    export default {\n        extends: form,\n        components: {\n            EditorWrapper,\n            OptionForm,\n            SlideYUpTransition,\n        },\n        data() {\n            return {\n                formData: {\n                    uuid: null,\n                    title: '',\n                    agenda: '',\n                    description: '',\n                    startDateTime: MomentTz.now(vars.serverDateTimeFormat),\n                    period: 60,\n                    type: null,\n                    category: [\"Default\"],\n                    autoTranslate: null,\n                    identifier: '',\n                    maxParticipantCount: 1000,\n                    accessibleViaLink: false,\n                    accessibleToMembers: false,\n                    isPam: false,\n                    isPaid: false,\n                    fee: 0,\n                },\n                autoTranslates: [\n                    { uuid: 'none',                label: 'NONE' },\n                    { uuid: 'microsoft_azure',     label: 'Microsoft Azure' },\n                    { uuid: 'google_translate',    label: 'Google Translate' }\n                ],\n                modalFormData: {\n                    azureApikey: \"\",\n                    googleApikey: \"\",\n                },\n                preRequisite: {\n                    types: [],\n                    segments: [],\n                    categories: [],\n                },\n                uploaderConfig: {\n                    allowedExtensions: [\"json\"],\n                    maxNoOfFiles: 1,\n                },\n                formLabels: {\n                    title: $t('meeting.props.title'),\n                    agenda: $t('meeting.props.agenda'),\n                    identifier: $t('meeting.enter_meeting_code'),\n                    maxParticipantCount: $t('meeting.config.max_participant_count'),\n                    description: $t('meeting.props.description'),\n                    startDateTime: $t('meeting.props.start_date_time'),\n                    period: $t('meeting.props.estimated_period'),\n                    type: $t('meeting.props.type'),\n                    category: $t('meeting.meeting_category.category'),\n                    autoTranslate: $t('meeting.props.auto_translate'),\n                    accessibleViaLink: $t('meeting.props.accessible_via_link'),\n                    accessibleToMembers: $t('meeting.props.only_accessible_to_members'),\n                    isPam: $t('meeting.props.is_pam'),\n                    isPaid: $t('meeting.props.is_paid'),\n                    fee: $t('meeting.props.fee'),\n                    azure_api_key: $t('config.system.azure_api_key'),\n                    google_api_key: $t(\"config.system.google_api_key\")\n                },\n                azure_modal_state: false,\n                google_modal_state: false,\n                initUrl: 'meetings',\n                dateTimeFields: ['startDateTime'],\n                modalVisible: false,\n                props: {\n                    show: false,\n                    showGoogleModal: false,\n                    showClose: true,\n                    type: \"\",\n                    modalClasses: {\n                        type: [Object, String],\n                        description: \"Modal dialog css classes\"\n                    },\n                    modalContentClasses: {\n                        type: [Object, String],\n                        description: \"Modal dialog content css classes\"\n                    },\n                    gradient: {\n                        type: String,\n                        description: \"Modal gradient type (danger, primary etc)\"\n                    },\n                    headerClasses: {\n                        type: [Object, String],\n                        description: \"Modal Header css classes\"\n                    },\n                    bodyClasses: {\n                        type: [Object, String],\n                        description: \"Modal Body css classes\"\n                    },\n                    footerClasses: {\n                        type: [Object, String],\n                        description: \"Modal Footer css classes\"\n                    },\n                    animationDuration: 500\n                },\n                selectedLanguage: \"\"\n            }\n        },\n        computed: {\n            maxParticipantAllowed() {\n                return this.configs.meeting.maxParticipantCount ? this.configs.meeting.maxParticipantCount : 999999\n            },\n            selectTranslator: {\n                get() {\n                    if (this.autoTranslate) {\n                        return this.formData.autoTranslate;\n                    } else {\n                        return this.selectedLanguage;\n                    }\n                },\n                set(value) {\n                    if (value === \"none\") {\n                        this.formData.autoTranslate = \"NONE\";\n                    } else {\n                        ConfigAPI.getTranslator(value).then(response => {\n                            if (value === \"microsoft_azure\") {\n                                this.formData.autoTranslate = \"Microsoft Azure\";\n                                this.props.show = (response === false) ? true : false;\n                            }\n                            if (value === \"google_translate\") {\n                                this.formData.autoTranslate = \"Google Translate\";\n                                this.props.showGoogleModal = (response === false) ? true : false;\n                            }\n                        })\n                    }\n                    this.selectedLanguage = value;\n                }\n            }\n        },\n        methods: {\n            afterEditData() {\n                if(this.duplicate) {\n                    this.formData.identifier = ''\n                    this.formData.startDateTime = moment().format(vars.serverDateTimeFormat)\n                }\n            },\n            isPamChanged() {\n                if(this.formData.isPam) {\n                    this.formData.accessibleToMembers = false\n                    this.formData.isPaid = false\n                    this.formData.fee = 0\n                }\n            },\n            accessibleToMembersChanged() {\n                if(this.formData.accessibleToMembers) {\n                    this.formData.isPam = false\n                    this.formData.isPaid = false\n                    this.formData.fee = 0\n                }\n            },\n            isPaidChanged() {\n                if(this.formData.isPaid) {\n                    this.formData.isPam = false\n                    this.formData.accessibleToMembers = false\n                }\n            },\n            isChangedAzureApiKey(e) {\n                this.modalFormData.azureApikey = e.target.value;\n            },\n            closeModal() {\n                this.props.show = false;\n            },\n            saveAzureApiKey() {\n                ConfigAPI.saveAzureApiKey(this.modalFormData.azureApikey).then(response => {\n                    this.props.show = response.status === \"success\" ? false : true;\n                })\n            },\n            closeGoogleModal() {\n                this.props.showGoogleModal = false;\n            },\n            handleFileUpload(response) {\n                if (response.uuid) {\n                    this.modalFormData.googleApikey = response.uuid;\n                }\n            },\n            saveGoogleApiKey() {\n                ConfigAPI.saveGoogleApiKey(this.modalFormData.googleApikey).then(response => {\n                    this.props.showGoogleModal = response.status === \"success\" ? false : true;\n                })\n            },\n        },\n        mounted() {\n            this.getInitialData();\n        }\n    }\n\n</script>\n<style>\n    .modal.show {\n        background-color: rgba(0, 0, 0, 0.3);\n    }\n    .modal-body h5 {\n        font-weight: bold;\n    }\n</style>","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.modal.show {\\n    background-color: rgba(0, 0, 0, 0.3);\\n}\\n.modal-body h5 {\\n    font-weight: bold;\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js??ref--8-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&lang=css&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--8-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&lang=css&\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--8-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&lang=css&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function($event) {\n          $event.preventDefault()\n          return _vm.submit.apply(null, arguments)\n        }\n      }\n    },\n    [\n      _c(\"animated-loader\", {\n        attrs: {\n          \"is-loading\": _vm.isLoading || _vm.isFetching,\n          \"loader-color\": _vm.vars.loaderColor\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-md-5\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"col-12 mb-3\" },\n              [\n                _c(\"base-input\", {\n                  attrs: {\n                    \"auto-focus\": \"\",\n                    label: _vm.formLabels.title,\n                    type: \"text\",\n                    error: _vm.formErrors.title,\n                    required: \"\"\n                  },\n                  on: {\n                    \"update:error\": function($event) {\n                      return _vm.$set(_vm.formErrors, \"title\", $event)\n                    }\n                  },\n                  model: {\n                    value: _vm.formData.title,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData, \"title\", $$v)\n                    },\n                    expression: \"formData.title\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 mb-3\" },\n              [\n                _c(\"base-textarea\", {\n                  attrs: {\n                    rows: \"10\",\n                    label: _vm.formLabels.agenda,\n                    error: _vm.formErrors.agenda,\n                    required: \"\"\n                  },\n                  on: {\n                    \"update:error\": function($event) {\n                      return _vm.$set(_vm.formErrors, \"agenda\", $event)\n                    }\n                  },\n                  model: {\n                    value: _vm.formData.agenda,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData, \"agenda\", $$v)\n                    },\n                    expression: \"formData.agenda\"\n                  }\n                })\n              ],\n              1\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-md-7\" }, [\n          _c(\n            \"fieldset\",\n            { staticClass: \"fieldset primary\" },\n            [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-md-6 mb-3\" },\n                  [\n                    _c(\"base-select\", {\n                      attrs: {\n                        options: _vm.preRequisite.types,\n                        label: _vm.formLabels.type,\n                        error: _vm.formErrors.type,\n                        required: \"\",\n                        \"allow-empty\": false,\n                        \"preselect-first\": \"\"\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(_vm.formErrors, \"type\", $event)\n                        }\n                      },\n                      model: {\n                        value: _vm.formData.type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"type\", $$v)\n                        },\n                        expression: \"formData.type\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-md-6 mb-3\" },\n                  [\n                    _c(\"base-select\", {\n                      attrs: {\n                        options: _vm.preRequisite.categories,\n                        label: _vm.formLabels.category,\n                        error: _vm.formErrors.category,\n                        required: \"\",\n                        \"allow-empty\": false,\n                        \"preselect-first\": \"\",\n                        \"add-new-modal\": true,\n                        \"needed-permission\": \"access-meeting-config\"\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(_vm.formErrors, \"category\", $event)\n                        }\n                      },\n                      scopedSlots: _vm._u([\n                        {\n                          key: \"addNewModal\",\n                          fn: function() {\n                            return [\n                              _c(\"option-form\", {\n                                attrs: {\n                                  meta: {\n                                    optionType: \"meeting_category\",\n                                    dataType: \"category\",\n                                    dataTypeArr: \"categories\",\n                                    entityTitle:\n                                      \"meeting.meeting_category.category\"\n                                  }\n                                },\n                                on: { close: _vm.newModalClose }\n                              })\n                            ]\n                          },\n                          proxy: true\n                        }\n                      ]),\n                      model: {\n                        value: _vm.formData.category,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"category\", $$v)\n                        },\n                        expression: \"formData.category\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-md-6 mb-3\" },\n                  [\n                    _c(\n                      \"base-input\",\n                      {\n                        staticClass: \"mb-3\",\n                        attrs: {\n                          label: _vm.formLabels.startDateTime,\n                          \"addon-right-icon\": \"far fa-calendar-alt\",\n                          type: \"text\",\n                          error: _vm.formErrors.startDateTime,\n                          \"is-wrapper\": true,\n                          required: \"\"\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(\n                              _vm.formErrors,\n                              \"startDateTime\",\n                              $event\n                            )\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.startDateTime,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"startDateTime\", $$v)\n                          },\n                          expression: \"formData.startDateTime\"\n                        }\n                      },\n                      [\n                        _c(\"date-picker\", {\n                          staticClass: \"form-control datepicker\",\n                          attrs: { config: _vm.vars.datetimepickerConfig },\n                          model: {\n                            value: _vm.formData.startDateTime,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formData, \"startDateTime\", $$v)\n                            },\n                            expression: \"formData.startDateTime\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-md-6 mb-3\" },\n                  [\n                    _c(\"base-input\", {\n                      staticClass: \"mb-3\",\n                      attrs: {\n                        label: _vm.formLabels.period,\n                        type: \"number\",\n                        error: _vm.formErrors.period,\n                        required: \"\",\n                        \"select-on-focus\": \"\",\n                        \"addon-right-text\": _vm.$t(\n                          \"list.general.durations.minutes\"\n                        )\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(_vm.formErrors, \"period\", $event)\n                        },\n                        wheel: function($event) {\n                          $event.stopPropagation()\n                          $event.preventDefault()\n                        }\n                      },\n                      model: {\n                        value: _vm.formData.period,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"period\", $$v)\n                        },\n                        expression: \"formData.period\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-md-6 mb-3\" },\n                  [\n                    _c(\"base-input\", {\n                      attrs: {\n                        label: _vm.formLabels.identifier,\n                        type: \"text\",\n                        error: _vm.formErrors.identifier\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(_vm.formErrors, \"identifier\", $event)\n                        }\n                      },\n                      model: {\n                        value: _vm.formData.identifier,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"identifier\", $$v)\n                        },\n                        expression: \"formData.identifier\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-md-6 mb-3\" },\n                  [\n                    _c(\"base-input\", {\n                      attrs: {\n                        label: _vm.formLabels.maxParticipantCount,\n                        type: \"number\",\n                        error: _vm.formErrors.maxParticipantCount,\n                        min: 2,\n                        max: _vm.maxParticipantAllowed,\n                        step: 1\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(\n                            _vm.formErrors,\n                            \"maxParticipantCount\",\n                            $event\n                          )\n                        }\n                      },\n                      model: {\n                        value: _vm.formData.maxParticipantCount,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"maxParticipantCount\", $$v)\n                        },\n                        expression: \"formData.maxParticipantCount\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-md-6 mb-3\" },\n                  [\n                    _c(\"base-select\", {\n                      attrs: {\n                        options: _vm.autoTranslates,\n                        label: _vm.formLabels.autoTranslate,\n                        \"allow-empty\": false,\n                        \"preselect-first\": \"\",\n                        simple: \"\",\n                        \"track-by\": \"uuid\",\n                        \"show-by\": \"label\",\n                        required: \"\"\n                      },\n                      model: {\n                        value: _vm.selectTranslator,\n                        callback: function($$v) {\n                          _vm.selectTranslator = $$v\n                        },\n                        expression: \"selectTranslator\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-md-6 mb-3\" },\n                  [\n                    _c(\n                      \"base-checkbox\",\n                      {\n                        staticClass: \"ml-3 mt-2\",\n                        model: {\n                          value: _vm.formData.accessibleViaLink,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"accessibleViaLink\", $$v)\n                          },\n                          expression: \"formData.accessibleViaLink\"\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n                            \" +\n                            _vm._s(_vm.formLabels.accessibleViaLink) +\n                            \"\\n                        \"\n                        )\n                      ]\n                    )\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _vm.configs.meeting &&\n                _vm.configs.meeting.enablePam &&\n                !_vm.formData.accessibleToMembers &&\n                !_vm.formData.isPaid\n                  ? _c(\n                      \"div\",\n                      { staticClass: \"col-12 col-md-6 mb-3\" },\n                      [\n                        _c(\n                          \"base-checkbox\",\n                          {\n                            staticClass: \"ml-3 mt-2\",\n                            on: { change: _vm.isPamChanged },\n                            model: {\n                              value: _vm.formData.isPam,\n                              callback: function($$v) {\n                                _vm.$set(_vm.formData, \"isPam\", $$v)\n                              },\n                              expression: \"formData.isPam\"\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(_vm.formLabels.isPam) +\n                                \"\\n                        \"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ]),\n              _vm._v(\" \"),\n              _vm.allowExtraInput && !_vm.formData.isPam\n                ? [\n                    !_vm.formData.isPaid\n                      ? _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"col-12 mb-3\" },\n                            [\n                              _c(\n                                \"base-checkbox\",\n                                {\n                                  staticClass: \"ml-3 mt-2\",\n                                  on: {\n                                    change: _vm.accessibleToMembersChanged\n                                  },\n                                  model: {\n                                    value: _vm.formData.accessibleToMembers,\n                                    callback: function($$v) {\n                                      _vm.$set(\n                                        _vm.formData,\n                                        \"accessibleToMembers\",\n                                        $$v\n                                      )\n                                    },\n                                    expression: \"formData.accessibleToMembers\"\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                \" +\n                                      _vm._s(\n                                        _vm.formLabels.accessibleToMembers\n                                      ) +\n                                      \"\\n                            \"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          )\n                        ])\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.configs.meeting.enablePaidMeeting &&\n                    !_vm.formData.accessibleToMembers\n                      ? _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"col-12 col-md-6 mb-3\" },\n                            [\n                              _c(\n                                \"base-checkbox\",\n                                {\n                                  staticClass: \"ml-3 mt-2\",\n                                  on: { change: _vm.isPaidChanged },\n                                  model: {\n                                    value: _vm.formData.isPaid,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.formData, \"isPaid\", $$v)\n                                    },\n                                    expression: \"formData.isPaid\"\n                                  }\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                \" +\n                                      _vm._s(_vm.formLabels.isPaid) +\n                                      \"\\n                            \"\n                                  )\n                                ]\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _vm.formData.isPaid\n                            ? _c(\n                                \"div\",\n                                { staticClass: \"col-12 col-md-6 mb-3\" },\n                                [\n                                  _c(\"base-input\", {\n                                    attrs: {\n                                      label: _vm.formLabels.fee,\n                                      type: \"number\",\n                                      error: _vm.formErrors.fee,\n                                      min: 0.01,\n                                      step: 0.01,\n                                      format: \"currency\"\n                                    },\n                                    on: {\n                                      \"update:error\": function($event) {\n                                        return _vm.$set(\n                                          _vm.formErrors,\n                                          \"fee\",\n                                          $event\n                                        )\n                                      }\n                                    },\n                                    model: {\n                                      value: _vm.formData.fee,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.formData, \"fee\", $$v)\n                                      },\n                                      expression: \"formData.fee\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            : _vm._e()\n                        ])\n                      : _vm._e()\n                  ]\n                : _vm._e()\n            ],\n            2\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"mt-element\" },\n        [\n          _c(\"editor-wrapper\", {\n            attrs: {\n              label: _vm.formLabels.description,\n              error: _vm.formErrors.description\n            },\n            on: {\n              \"update:error\": function($event) {\n                return _vm.$set(_vm.formErrors, \"description\", $event)\n              }\n            },\n            model: {\n              value: _vm.formData.description,\n              callback: function($$v) {\n                _vm.$set(_vm.formData, \"description\", $$v)\n              },\n              expression: \"formData.description\"\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.formHasErrors\n        ? _c(\n            \"div\",\n            { staticClass: \"alert alert-danger\", attrs: { role: \"alert\" } },\n            [\n              _c(\"h6\", { staticClass: \"m-0\" }, [\n                _vm._v(_vm._s(_vm.$t(\"general.form_has_errors\")))\n              ])\n            ]\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"form-footer mt-5\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"left-side\" },\n          [\n            _c(\n              \"base-button\",\n              {\n                attrs: { type: \"button\", design: \"light\", tabindex: \"-1\" },\n                on: {\n                  click: function($event) {\n                    return _vm.$router.back()\n                  }\n                }\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-chevron-left\" }),\n                _vm._v(\" \" + _vm._s(_vm.$t(\"general.cancel\")))\n              ]\n            ),\n            _vm._v(\" \"),\n            _vm.showKeepAdding\n              ? _c(\n                  \"base-checkbox\",\n                  {\n                    staticClass: \"ml-3 mt-2\",\n                    model: {\n                      value: _vm.keepAdding,\n                      callback: function($$v) {\n                        _vm.keepAdding = $$v\n                      },\n                      expression: \"keepAdding\"\n                    }\n                  },\n                  [\n                    _vm._v(\n                      \"\\n                \" +\n                        _vm._s(_vm.$t(\"general.keep_adding\")) +\n                        \"\\n            \"\n                    )\n                  ]\n                )\n              : _vm._e()\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"right-side\" },\n          [\n            _c(\n              \"base-button\",\n              {\n                attrs: { type: \"button\", design: \"light\" },\n                on: { click: _vm.reset }\n              },\n              [_vm._v(_vm._s(_vm.$t(\"general.reset\")))]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"base-button\",\n              { attrs: { type: \"submit\", design: \"primary\" } },\n              [\n                _vm._v(\n                  _vm._s(\n                    _vm.$t(\"global.save\", {\n                      attribute: _vm.$t(\"meeting.meeting\")\n                    })\n                  )\n                )\n              ]\n            )\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _vm.showKeepAdding && _vm.keepAdding\n        ? [\n            _c(\"keep-adding-form\", {\n              attrs: {\n                \"keep-adding-fields\": _vm.keepAddingFields,\n                \"keep-adding-option\": _vm.keepAddingOption,\n                \"keep-adding-selected-fields\": _vm.keepAddingSelectedFields,\n                \"is-loading\": _vm.isLoading\n              },\n              on: {\n                optionUpdated: function($event) {\n                  _vm.keepAddingOption = $event\n                },\n                fieldsUpdated: function($event) {\n                  _vm.keepAddingSelectedFields = $event\n                }\n              }\n            })\n          ]\n        : _vm._e(),\n      _vm._v(\" \"),\n      [\n        _c(\n          \"SlideYUpTransition\",\n          { attrs: { duration: this.props.animationDuration } },\n          [\n            _c(\n              \"div\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: this.props.show,\n                    expression: \"this.props.show\"\n                  }\n                ],\n                staticClass: \"modal fade\",\n                class: [\n                  { \"show d-block\": this.props.show },\n                  { \"d-none\": !this.props.show },\n                  { \"modal-mini\": this.props.type === \"mini\" }\n                ],\n                attrs: {\n                  tabindex: \"-1\",\n                  role: \"dialog\",\n                  \"aria-hidden\": !this.props.show\n                },\n                on: {\n                  click: function($event) {\n                    if ($event.target !== $event.currentTarget) {\n                      return null\n                    }\n                    return _vm.closeModal.apply(null, arguments)\n                  }\n                }\n              },\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"modal-dialog modal-dialog-centered\",\n                    class: [\n                      { \"modal-notice\": this.props.type === \"notice\" },\n                      this.props.modalClasses\n                    ]\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"modal-content\",\n                        class: [\n                          this.props.gradient\n                            ? \"bg-gradient-\" + this.props.gradient\n                            : \"\",\n                          this.props.modalContentClasses\n                        ]\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"modal-body\",\n                            class: this.props.bodyClasses\n                          },\n                          [\n                            _vm._t(\"default\", function() {\n                              return [\n                                _c(\n                                  \"div\",\n                                  { staticClass: \"col-12\" },\n                                  [\n                                    _c(\"h5\", [\n                                      _vm._v(\n                                        \"Please Input the Microsoft Azure API Key!\"\n                                      )\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"base-input\", {\n                                      attrs: {\n                                        label: _vm.formLabels.azure_api_key,\n                                        type: \"text\",\n                                        error: _vm.formErrors.azureApikey\n                                      },\n                                      on: {\n                                        \"update:error\": function($event) {\n                                          return _vm.$set(\n                                            _vm.formErrors,\n                                            \"azureApikey\",\n                                            $event\n                                          )\n                                        },\n                                        change: _vm.isChangedAzureApiKey\n                                      },\n                                      model: {\n                                        value: _vm.modalFormData.azureApikey,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.modalFormData,\n                                            \"azureApikey\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"modalFormData.azureApikey\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ]\n                            })\n                          ],\n                          2\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"modal-footer\",\n                            class: this.props.footerClasses\n                          },\n                          [\n                            _vm._t(\"footer\", function() {\n                              return [\n                                _c(\n                                  \"div\",\n                                  { staticClass: \"text-right\" },\n                                  [\n                                    _c(\n                                      \"base-button\",\n                                      {\n                                        attrs: {\n                                          type: \"button\",\n                                          design: \"light\"\n                                        },\n                                        on: { click: _vm.closeModal }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(_vm.$t(\"general.cancel\")) +\n                                            \"\\n                                    \"\n                                        )\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"base-button\",\n                                      {\n                                        attrs: {\n                                          type: \"button\",\n                                          design: \"primary\"\n                                        },\n                                        on: { click: _vm.saveAzureApiKey }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(_vm.$t(\"general.save\")) +\n                                            \"\\n                                    \"\n                                        )\n                                      ]\n                                    )\n                                  ],\n                                  1\n                                )\n                              ]\n                            })\n                          ],\n                          2\n                        )\n                      ]\n                    )\n                  ]\n                )\n              ]\n            )\n          ]\n        )\n      ],\n      _vm._v(\" \"),\n      [\n        _c(\n          \"SlideYUpTransition\",\n          { attrs: { duration: this.props.animationDuration } },\n          [\n            _c(\n              \"div\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: this.props.showGoogleModal,\n                    expression: \"this.props.showGoogleModal\"\n                  }\n                ],\n                staticClass: \"modal fade\",\n                class: [\n                  { \"show d-block\": this.props.showGoogleModal },\n                  { \"d-none\": !this.props.showGoogleModal },\n                  { \"modal-mini\": this.props.type === \"mini\" }\n                ],\n                attrs: {\n                  tabindex: \"-1\",\n                  role: \"dialog\",\n                  \"aria-hidden\": !this.props.showGoogleModal\n                },\n                on: {\n                  click: function($event) {\n                    if ($event.target !== $event.currentTarget) {\n                      return null\n                    }\n                    return _vm.closeGoogleModal.apply(null, arguments)\n                  }\n                }\n              },\n              [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"modal-dialog modal-dialog-centered\",\n                    class: [\n                      { \"modal-notice\": this.props.type === \"notice\" },\n                      this.props.modalClasses\n                    ]\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        staticClass: \"modal-content\",\n                        class: [\n                          this.props.gradient\n                            ? \"bg-gradient-\" + this.props.gradient\n                            : \"\",\n                          this.props.modalContentClasses\n                        ]\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"modal-body\",\n                            class: this.props.bodyClasses\n                          },\n                          [\n                            _vm._t(\"default\", function() {\n                              return [\n                                _c(\n                                  \"div\",\n                                  { staticClass: \"col-12\" },\n                                  [\n                                    _c(\n                                      \"label\",\n                                      {\n                                        staticClass:\n                                          \"input-group-material-label\"\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        Please Upload the Google API Key file!\\n                                    \"\n                                        )\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\"file-uploader\", {\n                                      staticClass: \"mb-5\",\n                                      attrs: {\n                                        \"name-label\":\n                                          \"config.system.google_api_key\",\n                                        options: _vm.uploaderConfig,\n                                        multiple: false,\n                                        url:\n                                          \"/config/system/google_api_key_json/start\",\n                                        \"button-classes\":\n                                          \"justify-content-center\",\n                                        hideAfterUpload: false\n                                      },\n                                      on: { updated: _vm.handleFileUpload }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ]\n                            })\n                          ],\n                          2\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"modal-footer\",\n                            class: this.props.footerClasses\n                          },\n                          [\n                            _vm._t(\"footer\", function() {\n                              return [\n                                _c(\n                                  \"div\",\n                                  { staticClass: \"text-right\" },\n                                  [\n                                    _c(\n                                      \"base-button\",\n                                      {\n                                        attrs: {\n                                          type: \"button\",\n                                          design: \"light\"\n                                        },\n                                        on: { click: _vm.closeGoogleModal }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(_vm.$t(\"general.cancel\")) +\n                                            \"\\n                                    \"\n                                        )\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"base-button\",\n                                      {\n                                        attrs: {\n                                          type: \"button\",\n                                          design: \"primary\"\n                                        },\n                                        on: { click: _vm.saveGoogleApiKey }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(_vm.$t(\"general.save\")) +\n                                            \"\\n                                    \"\n                                        )\n                                      ]\n                                    )\n                                  ],\n                                  1\n                                )\n                              ]\n                            })\n                          ],\n                          2\n                        )\n                      ]\n                    )\n                  ]\n                )\n              ]\n            )\n          ]\n        )\n      ]\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=4b230976&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4b230976')) {\n      api.createRecord('4b230976', component.options)\n    } else {\n      api.reload('4b230976', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=4b230976&\", function () {\n      api.rerender('4b230976', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/app/meeting/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/style-loader/index.js!../../../../../node_modules/css-loader/index.js??ref--8-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-2!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=4b230976&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AA7BA;AA+BA;AA5FA;AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAxBA;AAJA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAlDA;AAoDA;AACA;AACA;AA5LA;;;;;;;;;;;AC/OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnxgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACvCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}