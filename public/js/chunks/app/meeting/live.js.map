{"version":3,"file":"js/chunks/app/meeting/live.js?id=ecb90625d27b57e095e6","sources":["webpack:///FileSharer.vue","webpack:///live.vue","webpack:///./resources/js/views/app/meeting/live.vue?00de","webpack:///./resources/js/views/app/meeting/live.vue?8f86","webpack:///./resources/js/components/FileSharer.vue?621e","webpack:///./resources/js/views/app/meeting/live.vue?76e6","webpack:///./resources/js/api/azure-speech.js","webpack:///./resources/js/components/FileSharer.vue","webpack:///./resources/js/components/FileSharer.vue?dca6","webpack:///./resources/js/components/FileSharer.vue?43f5","webpack:///./resources/js/mixins/azure-speech.js","webpack:///./resources/js/mixins/google-speech.js","webpack:///./resources/js/mixins/meeting.js","webpack:///./resources/js/views/app/meeting/live.vue","webpack:///./resources/js/views/app/meeting/live.vue?428f","webpack:///./resources/js/views/app/meeting/live.vue?42d1","webpack:///./resources/js/views/app/meeting/live.vue?fda8","webpack:///./resources/public/js/recordrtc/RecordRTC.js","webpack:///util (ignored)","webpack:///util (ignored)?94e3","webpack:///fs (ignored)","webpack:///ws (ignored)?6f96","webpack:///tls (ignored)","webpack:///../../external/ocsp/ocsp (ignored)","webpack:///agent-base (ignored)","webpack:///async-disk-cache (ignored)","webpack:///https-proxy-agent (ignored)","webpack:///net (ignored)"],"sourcesContent":["<template>\n    <div class=\"sm-uploader file-uploader file-sharer\">\n\n        <div :class=\"['files-list-wrapper']\">\n            <div class=\"file-incoming-request\" v-if=\"incomingRequest.show\">\n                <div class=\"alert fade show alert-white\">\n                    <div class=\"alert-content\">\n                        <h6><strong>{{ incomingRequest.sender.name }}</strong><span class=\"text-muted mx-1\">{{ $t('upload.wants_to_share_file') }}</span><strong>{{ incomingRequest.fileId }}</strong></h6>\n                    </div>\n\n                    <div class=\"d-flex justify-content-start mt-3\">\n                        <button type=\"button\" class=\"btn btn-sm btn-danger flex-grow\" @click=\"rejectIncomingFile\">{{ $t('upload.reject') }}</button>\n                        <button type=\"button\" class=\"btn btn-sm btn-success flex-grow\" @click=\"acceptIncomingFile\">{{ $t('upload.accept') }}</button>\n                    </div>\n                </div>\n            </div>\n\n            <ul class=\"files-list\" v-if=\"sharingFiles.length\">\n\n                <li class=\"file-details-row\" v-for=\"(fileObj, index) in sharingFiles\" :key=\"fileObj.fileId\">\n                    <div class=\"file-details-wrapper\">\n                        <div class=\"file-icon\">\n                            <span><i :class=\"['far', getFileIcon(fileObj.type)]\"></i></span>\n                        </div>\n                        <div class=\"file-details\">\n                            <h6>{{ fileObj.name }}</h6>\n                            <p>\n                                <span><span class=\"font-weight-700\">{{ $t('upload.type') }}</span>: {{ mimeTypes[fileObj.type] || 'Unknown' }}</span>\n                                <span class=\"ml-1\"><span class=\"font-weight-700\">{{ $t('upload.size') }}</span>: {{ fileObj.humanSize }}</span>\n                            </p>\n\n\n                            <div class=\"sharing-details-wrapper\" v-if=\"fileObj.sendingTo\">\n                                <div class=\"sharing-row mt-2\" v-for=\"to in fileObj.sendingTo\" :key=\"to.userid\">\n                                    <div class=\"sharing-details small\">\n                                        <div class=\"flex-grow text-muted\">\n                                            Sending to: {{ to.userid }}\n                                        </div>\n                                        <div>\n                                            <span :class=\"['badge badge-sm badge-pill', {'badge-success': to.progress.status === 'sent'}, {'badge-info': to.progress.status !== 'sent'}]\">{{ to.progress.status }}</span>\n                                        </div>\n                                    </div>\n                                    <b-progress :value=\"to.progress.percent\" :max=\"100\" class=\"mt-2 mb-0\"></b-progress>\n                                </div>\n                            </div>\n                            <div class=\"sharing-row mt-2\" v-else-if=\"fileObj.receivingFrom\">\n                                <div class=\"sharing-details small\">\n                                    <div class=\"flex-grow text-muted\">\n                                        Receiving From: {{ fileObj.receivingFrom }}\n                                    </div>\n                                    <div>\n                                        <span :class=\"['badge badge-sm badge-pill', {'badge-success': fileObj.progress.status === 'received'}, {'badge-info': fileObj.progress.status !== 'received'}]\">{{ fileObj.progress.status }}</span>\n                                    </div>\n                                </div>\n                                <b-progress :value=\"fileObj.progress.percent\" :max=\"100\" class=\"mt-2 mb-0\"></b-progress>\n                            </div>\n                        </div>\n                        <div class=\"status-wrapper\">\n                            <a v-if=\"!fileObj.receivingFrom || fileObj.progress.status === 'received'\" :href=\"fileObj.url\" target=\"_blank\" :download=\"fileObj.name\" class=\"status-action\"><span><i class=\"fas fa-download\"></i></span></a>\n                        </div>\n                    </div>\n                </li>\n\n\n            </ul>\n        </div>\n\n\n        <div class=\"file-uploader-form\">\n            <div :class=\"['file-selector d-flex', buttonWrapperClasses]\">\n                <button v-if=\"showCloseButton\" type=\"button\" :class=\"['btn', closeButtonClasses]\" @click=\"$emit('hide')\"> <span class=\"button-icon\"><i class=\"fas fa-times\"></i></span> <span class=\"button-label\">{{ $t(closeButtonLabel) }}</span></button>\n\n                <template v-if=\"allowSharing\">\n                    <label :class=\"['btn', `btn-${buttonDesign}`, buttonClasses]\">\n                        <input name=\"filesInput\" type=\"file\" ref=\"filesInput\" id=\"filesInput\" @change=\"generateFilesList\" class=\"selector-input\" :multiple=\"multiple\">\n                        <span class=\"button-icon\"><i :class=\"buttonIcon\"></i></span> <span class=\"button-label\" v-if=\"!hideButtonLabel\">{{ $t(actionLabel, { attribute: $t(namesLabel)}) }}</span>\n                    </label>\n                </template>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import { mapGetters, mapActions } from 'vuex'\n    import { fileIcons, fileMimeTypes } from '@js/vars'\n    import { BProgress } from 'bootstrap-vue'\n    import { bytesToSize } from '@core/utils'\n\n    export default {\n        name: \"file-sharer\",\n        components: {\n            BProgress,\n        },\n        props: {\n            connection: {\n                default: null,\n            },\n            allowSharing: {\n                default: true,\n            },\n            actionLabel: {\n                type: String,\n                default: 'global.choose',\n            },\n            nameLabel: {\n                type: String,\n                default: 'upload.file',\n            },\n            namesLabel: {\n                type: String,\n                default: 'upload.files',\n            },\n            closeButtonLabel: {\n                type: String,\n                default: 'upload.close',\n            },\n            buttonWrapperClasses: {\n                type: String,\n                default: 'justify-content-between',\n            },\n            buttonClasses: {\n                type: String,\n                default: '',\n            },\n            closeButtonClasses: {\n                type: String,\n                default: 'btn-light',\n            },\n            buttonIcon: {\n                type: String,\n                default: 'fas fa-upload',\n            },\n            buttonDesign: {\n                type: String,\n                default: 'primary',\n            },\n            options: {\n                type: Object,\n                default () {\n                    return {\n                        allowedExtensions: [\"jpg\",\"png\",\"jpeg\",\"pdf\",\"doc\",\"docx\",\"xls\",\"xlsx\",\"txt\"],\n                        maxNoOfFiles: 20,\n                        allowedMaxFileSize: null,\n                    }\n                }\n            },\n            multiple: {\n                type: Boolean,\n                default: false,\n            },\n            hideButtonLabel: {\n                type: Boolean,\n                default: false,\n            },\n            showCloseButton: {\n                type: Boolean,\n                default: true,\n            },\n            autoSend: {\n                type: Boolean,\n                default: true,\n            },\n        },\n        data() {\n            return {\n                icons: fileIcons,\n                mimeTypes: fileMimeTypes,\n                sharingFiles: [],\n                lastSelectedFile: null,\n                incomingRequest: {\n                    show: false,\n                    sender: null,\n                    fileId: null,\n                }\n            }\n        },\n        computed: {\n            ...mapGetters('config', [\n                'configs',\n                'vars',\n            ]),\n        },\n        watch: {\n            connection(newVal, oldVal) {\n                if(newVal && oldVal === null) {\n                    this.setupConnection()\n                }\n            }\n        },\n        methods: {\n            getFileIcon(type) {\n                return this.icons[type] || 'fa-file-alt'\n            },\n            getFileNameIcon(type) {\n                return this.icons[type] || 'fa-file-alt'\n            },\n            generateFilesList(e) {\n                let allowedExtensions = null\n                const selectedFiles = this.$refs.filesInput.files\n\n                if (this.options.allowedExtensions) {\n                    if(! _.isArray(this.options.allowedExtensions)) {\n                        this.options.allowedExtensions = this.options.allowedExtensions.split(\",\")\n                    }\n                    allowedExtensions = new RegExp('(\\.' + this.options.allowedExtensions.join('|\\.') + ')$')\n                }\n\n                if(this.options.maxNoOfFiles && selectedFiles.length > this.options.maxNoOfFiles) {\n                    this.$toasted.error(this.$t('upload.max_file_limit_crossed', { number: this.options.maxNoOfFiles }), this.$toastConfig.error)\n                    return\n                }\n\n                for (let i = 0; i < selectedFiles.length; i++) {\n                    const fileId = `${selectedFiles[i].size}-${selectedFiles[i].name}`\n                    const existingFileIndex = this.sharingFiles.findIndex(f => f.fileId === fileId)\n\n                    if (allowedExtensions && !allowedExtensions.test(selectedFiles[i].name)) {\n\n                        this.$toasted.error(this.$t('global.file_not_supported', { attribute: selectedFiles[i].name.split('.').pop() }), this.$toastConfig.error)\n\n                    } else if (this.options.allowedMaxFileSize && selectedFiles[i].size > this.options.allowedMaxFileSize) {\n\n                        this.$toasted.error(this.$t('global.file_too_large', { attribute: selectedFiles[i].name }), this.$toastConfig.error)\n\n                    } else if(existingFileIndex === -1) {\n                        const fileObj = {\n                            uuid: '',\n                            name: selectedFiles[i].name,\n                            size: selectedFiles[i].size,\n                            type: selectedFiles[i].type,\n                            humanSize: bytesToSize(selectedFiles[i].size),\n                            fileId: fileId,\n                            url: '',\n                            sendingTo: [],\n                            progress: {\n                                value: 0,\n                                max: 0,\n                                percent: 0,\n                                status: 'starting'\n                            }\n                        }\n\n                        this.sharingFiles.unshift(fileObj)\n                        this.lastSelectedFile = selectedFiles[i]\n                    }\n                }\n\n                if(this.autoSend && this.connection) {\n                    this.connection.send({\n                        doYouWannaReceiveThisFile: true,\n                        sender: this.connection.extra,\n                        fileId: `${this.lastSelectedFile.size}-${this.lastSelectedFile.name}`\n                    })\n                }\n            },\n\n            rejectIncomingFile() {\n                this.incomingRequest.show = false\n                this.connection.send({\n                    noIDoNotWannaReceive: true,\n                    sender: this.connection.extra,\n                    fileId: this.incomingRequest.fileId\n                })\n                this.incomingRequest.sender = null\n                this.incomingRequest.fileId = null\n            },\n            acceptIncomingFile() {\n                this.incomingRequest.show = false\n                this.connection.send({\n                    yesIWannaReceive: true,\n                    sender: this.connection.extra,\n                    fileId: this.incomingRequest.fileId\n                })\n                this.incomingRequest.sender = null\n                this.incomingRequest.fileId = null\n            },\n            rtcmOnOpen(e) {\n                try {\n                    chrome.power.requestKeepAwake('display')\n                } catch (e) {}\n\n                if (this.connection.connectedWith[e.userid]) {\n                    return\n                }\n\n                this.connection.connectedWith[e.userid] = true\n\n                if (!this.lastSelectedFile) {\n                    return\n                }\n\n                window.setTimeout(() => {\n                    if(this.autoSend && this.connection) {\n                        this.connection.send({\n                            doYouWannaReceiveThisFile: true,\n                            sender: this.connection.extra,\n                            fileId: `${this.lastSelectedFile.size}-${this.lastSelectedFile.name}`\n                        })\n                    }\n                }, 500)\n            },\n            rtcmOnClose(e) {\n            },\n            rtcmOnLeave(e) {\n            },\n            rtcmOnMessage(event) {\n                if (event.data.doYouWannaReceiveThisFile) {\n                    if (!this.connection.fileReceived[event.data.fileId]) {\n                        this.incomingRequest.fileId = event.data.fileId\n                        this.incomingRequest.sender = event.data.sender\n                        this.incomingRequest.show = true\n                        this.$emit('show')\n                    }\n                } else if (event.data.yesIWannaReceive && !!this.lastSelectedFile) {\n                    this.connection.shareFile(this.lastSelectedFile, event.userid)\n                } else if (event.data.noIDoNotWannaReceive && !!this.lastSelectedFile) {\n                }\n            },\n            rtcmOnFileStart(file) {\n                const fileId = `${file.size}-${file.name}`\n\n                if (this.connection.fileReceived[fileId]) {\n                    return\n                }\n\n                //receiving new file\n                if (file.userid !== this.connection.userid) {\n                    this.sharingFiles.unshift({\n                        uuid: '',\n                        name: file.name,\n                        size: file.size,\n                        type: file.type,\n                        humanSize: bytesToSize(file.size),\n                        fileId: fileId,\n                        url: '',\n                        receivingFrom: null,\n                        progress: {\n                            value: 0,\n                            max: 0,\n                            percent: 0,\n                            status: 'starting'\n                        }\n                    })\n                    this.$emit('show')\n                }\n\n                const selectedFileIndex = this.sharingFiles.findIndex(f => f.fileId === fileId)\n                if (selectedFileIndex === -1) {\n                    return\n                }\n                let selectedFile = this.sharingFiles[selectedFileIndex]\n\n                selectedFile.uuid = file.uuid\n                selectedFile.userid = file.userid\n\n                if (file.userid === this.connection.userid) {\n                    if(!selectedFile.sendingTo) {\n                        selectedFile.sendingTo = []\n                    }\n\n                    if(selectedFile.sendingTo.length > 0) {\n                        if(selectedFile.sendingTo.findIndex(u => u.userid === file.remoteUserId) !== -1) {\n                            return\n                        }\n                    }\n\n                    selectedFile.sendingTo.unshift({\n                        userid: file.remoteUserId,\n                        progress: {\n                            value: 0,\n                            percent: 0,\n                            max: file.maxChunks,\n                            status: 'starting'\n                        }\n                    })\n\n\n                } else {\n                    selectedFile.receiveAgain = true\n                    selectedFile.receivingFrom = file.userid\n\n                    selectedFile.progress.max = file.maxChunks\n                    selectedFile.progress.status = 'starting'\n\n                }\n            },\n            rtcmOnFileProgress(chunk) {\n                const fileId = `${chunk.size}-${chunk.name}`\n\n                if (this.connection.fileReceived[fileId]) {\n                    return\n                }\n\n                const selectedFileIndex = this.sharingFiles.findIndex(f => f.uuid === chunk.uuid)\n\n                if (selectedFileIndex === -1) {\n                    return\n                }\n\n                let selectedFile = this.sharingFiles[selectedFileIndex]\n\n                if (chunk.remoteUserId && selectedFile.sendingTo) {\n                    const remoteUserIndex = selectedFile.sendingTo.findIndex(u => u.userid === chunk.remoteUserId)\n                    const helperInnerObj = selectedFile.sendingTo[remoteUserIndex]\n\n                    if (!helperInnerObj) {\n                        return\n                    }\n\n                    helperInnerObj.progress.value = chunk.currentPosition\n                    helperInnerObj.progress = this.updateProgress(helperInnerObj.progress, true)\n                } else {\n                    selectedFile.progress.value = chunk.currentPosition\n                    selectedFile.progress = this.updateProgress(selectedFile.progress, false)\n                }\n            },\n            rtcmOnFileEnd(file) {\n                const fileId = `${file.size}-${file.name}`\n\n                if (this.connection.fileReceived[fileId]) {\n                    return\n                }\n\n                //received file ?\n                if (file.remoteUserId === this.connection.userid) {\n                    this.connection.fileReceived[fileId] = file\n                }\n\n                const selectedFileIndex = this.sharingFiles.findIndex(f => f.fileId === fileId)\n                if (selectedFileIndex === -1) {\n                    return\n                }\n\n                let selectedFile = this.sharingFiles[selectedFileIndex]\n                selectedFile.url = file.url\n\n                if (file.remoteUserId && selectedFile.sendingTo) {\n                    const remoteUserIndex = selectedFile.sendingTo.findIndex(u => u.userid === file.remoteUserId)\n\n                    selectedFile.sendingTo[remoteUserIndex].progress.status = 'sent'\n                } else  {\n                    selectedFile.progress.status = 'received'\n                }\n            },\n            rtcmOnError(e) {\n            },\n            updateProgress(progress, sending = true) {\n                if (!progress.value || progress.value === -1) {\n                    progress.percent = 0\n                    return progress\n                }\n\n                const percent = parseInt(((progress.value / progress.max ) * 100).toFixed(0))\n\n                if(sending) {\n                    progress.status = percent > 100 ? 'sent' : 'sending - ' + percent + '%'\n                } else {\n                    progress.status = percent > 100 ? 'received' : 'receiving - ' + percent + '%'\n                }\n\n                progress.percent = percent > 100 ? 100 : percent\n                return progress\n            },\n\n            setupConnection() {\n                this.connection.enableFileSharing = true\n                this.connection.fileReceived = {}\n                this.connection.connectedWith = {}\n                this.connection.chunkSize = 15 * 1000\n\n                this.connection.onopen = this.rtcmOnOpen\n                this.connection.onclose = this.rtcmOnClose\n                this.connection.onleave = this.rtcmOnLeave\n                this.connection.onmessage = this.rtcmOnMessage\n                this.connection.onerror = this.rtcmOnError\n                this.connection.onFileStart = this.rtcmOnFileStart\n                this.connection.onFileProgress = this.rtcmOnFileProgress\n                this.connection.onFileEnd = this.rtcmOnFileEnd\n            },\n        },\n        mounted() {\n            this.options.allowedMaxFileSize = this.options.allowedMaxFileSize ? this.options.allowedMaxFileSize : (this.configs.system && this.configs.system.postMaxSize ? this.configs.system.postMaxSize : null)\n\n            this.options.allowedExtensions = this.options.allowedExtensions ? this.options.allowedExtensions : (this.configs.system && this.configs.system.allowedFileExtensions ? this.configs.system.allowedFileExtensions : null)\n\n            if(this.connection) {\n                this.setupConnection()\n            }\n        },\n        destroyed() {\n        },\n    }\n\n</script>\n","<template>\n    <base-container with-loader :is-loading=\"isLoading\" :loader-color=\"vars.loaderColor\" :overlay-color=\"uiConfigs.pageColorSchemeType\" loader-size=\"screen\" :class=\"['meeting-page', {'auto-hide-footer': pageConfigs.footerAutoHide && hasVideos}, {'pulse': recording}, {'mirrored-video': configs.meeting && configs.meeting.mirroredVideo}]\" :data-page-background-color=\"uiConfigs.pageBackgroundColor\" :data-card-background-color=\"uiConfigs.pageContainerBackgroundColor\">\n\n        <template v-if=\"!duplicateTab\">\n            <div :class=\"['meeting-footer', {'has-videos': hasVideos}]\" :data-footer-background-color=\"uiConfigs.leftSidebarColor\">\n\n                <div class=\"logo-wrapper\">\n                    <app-logo place=\"sidebar\" size=\"sm\" tag=\"span\" />\n                </div>\n\n                <div class=\"meeting-actions meeting-actions-center\" v-if=\"entity && entity.status\">\n\n                    <template v-if=\"pageConfigs.showEnableAudioBtn\">\n                        <button v-if=\"pageConfigs.enableAudio\" type=\"button\" class=\"btn action\" @click=\"toggleAudio(); toggleRecognition()\" v-b-tooltip.hover.d500 :title=\"$t('meeting.mute_audio')\"><i class=\"fas fa-microphone\"></i></button>\n\n                        <button v-else type=\"button\" class=\"btn action disabled-text\" @click=\"toggleAudio(); toggleRecognition()\" v-b-tooltip.hover.d500 :title=\"$t('meeting.unmute_audio')\"><i class=\"fas fa-microphone-slash\"></i></button>\n                    </template>\n\n                    <template v-if=\"pageConfigs.showEnableVideoBtn\">\n                        <button v-if=\"pageConfigs.enableVideo\" type=\"button\" class=\"btn action\" @click=\"toggleVideo\" v-b-tooltip.hover.d500 :title=\"$t('meeting.mute_video')\"><i class=\"fas fa-video\"></i></button>\n\n                        <button v-else type=\"button\" class=\"btn action disabled-text\" @click=\"toggleVideo\" v-b-tooltip.hover.d500 :title=\"$t('meeting.unmute_video')\"><i class=\"fas fa-video-slash\"></i></button>\n                    </template>\n\n                    <button v-if=\"pageConfigs.showDeviceConfig\" type=\"button\" class=\"btn action d-sm-none d-md-inline-block\" @click=\"toggleDevicesModal\" v-b-tooltip.hover.d500 :title=\"$t('meeting.media_devices.setup')\"><i class=\"fas fa-cogs\"></i></button>\n\n                    <template v-if=\"videoList.length\">\n\n                        <button v-if=\"pageConfigs.enableFileSharing\" type=\"button\" :class=\"['btn action d-none d-lg-inline-block', {'disabled-text': showFileSharing}]\" @click=\"toggleFileSharing\" v-b-tooltip.hover.d500 :title=\"$t('upload.share_files')\"><i class=\"fas fa-upload\"></i></button>\n\n                        <button type=\"button\" class=\"btn action danger-text\" @click=\"getOffline\" v-b-tooltip.hover.d500 :title=\"$t('meeting.leave_meeting')\"><i class=\"fas fa-phone-slash\"></i></button>\n\n                        <template v-if=\"pageConfigs.enableScreenSharing\">\n                            <button v-if=\"localScreenStreamid\" type=\"button\" class=\"btn action disabled-text d-none d-lg-inline-block\" @click=\"stopSharingScreen\" v-b-tooltip.hover.d500 :title=\"$t('meeting.stop_sharing_screen')\"><i class=\"fas fa-minus-square\"></i></button>\n\n                            <button v-else type=\"button\" class=\"btn action d-none d-lg-inline-block\" @click=\"shareScreen\" v-b-tooltip.hover.d500 :title=\"$t('meeting.share_screen')\"><i class=\"fas fa-desktop\"></i></button>\n                        </template>\n\n                        <template v-if=\"pageConfigs.enableRecording && entity.canModerate\">\n                            <template v-if=\"recording\">\n                                <template v-if=\"pageConfigs.enableAutoRecording && !pageConfigs.canStopAutoRecording\">\n                                    <button type=\"button\" class=\"btn action danger-text d-none d-md-inline-block\"><i class=\"fas fa-circle\"></i> <span class=\"recording_time\">{{ recordingDuration }}</span></button>\n                                </template>\n\n                                <template v-else>\n                                    <button v-if=\"recordingPaused\" type=\"button\" class=\"btn action success-text d-none d-md-inline-block\" @click=\"resumeRecording\" v-b-tooltip.hover.d500 :title=\"$t('meeting.resume_recording')\"><i class=\"fas fa-circle\"></i></button>\n                                    <button v-else type=\"button\" class=\"btn action danger-text d-none d-md-inline-block\" @click=\"pauseRecording\" v-b-tooltip.hover.d500 :title=\"$t('meeting.pause_recording')\"><i class=\"fas fa-pause\"></i></button>\n\n                                    <button type=\"button\" class=\"btn action danger-text d-none d-md-inline-block\" @click=\"stopRecording\" v-b-tooltip.hover.d500 :title=\"$t('meeting.stop_recording')\"><i class=\"fas fa-stop\"></i> <span class=\"recording_time\">{{ recordingDuration }}</span></button>\n                                </template>\n\n                            </template>\n\n                            <button v-else type=\"button\" class=\"btn action d-none d-md-inline-block\" @click=\"startRecording\" v-b-tooltip.hover.d500 :title=\"$t('meeting.start_recording')\"><i class=\"fas fa-circle\"></i></button>\n                        </template>\n\n                        <template v-if=\"pageConfigs.enableWhiteboard\">\n                            <button v-if=\"showWhiteboard\" type=\"button\" class=\"btn action danger-text d-none d-md-inline-block\" @click=\"toggleWhiteboard\" v-b-tooltip.hover.d500 :title=\"$t('meeting.hide_whiteboard')\"><i class=\"fas fa-chalkboard-teacher\"></i></button>\n                            <button v-if=\"showWhiteboard\" type=\"button\" class=\"btn action danger-text d-none d-md-inline-block\" @click=\"hideAndDestroyWhiteboard\" v-b-tooltip.hover.d500 :title=\"$t('meeting.clear_hide_whiteboard')\"><i class=\"fas fa-chalkboard-teacher mr-0\"></i><i class=\"fas fa-times font-size-xs ml-1 font-size-xs text-danger\"></i></button>\n\n                            <button v-else type=\"button\" class=\"btn action d-none d-md-inline-block\" @click=\"toggleWhiteboard\" v-b-tooltip.hover.d500 :title=\"$t('meeting.show_whiteboard')\"><i class=\"fas fa-chalkboard-teacher\"></i></button>\n                        </template>\n\n                        <template v-if=\"pageConfigs.enableHandGesture\">\n                            <button v-if=\"isHandUp\" type=\"button\" class=\"btn action success-text\" @click=\"toggleHandUp\" v-b-tooltip.hover.d500 :title=\"$t('meeting.lower_hand')\"><i class=\"far fa-hand-paper\"></i></button>\n\n                            <button v-else type=\"button\" class=\"btn action\" @click=\"toggleHandUp\" v-b-tooltip.hover.d500 :title=\"$t('meeting.raise_hand')\"><i class=\"fas fa-hand-paper\"></i></button>\n                        </template>\n                    </template>\n                </div>\n\n                <div class=\"meeting-actions meeting-actions-right\">\n                    <template v-if=\"entity\">\n\n                        <base-dropdown tag=\"div\" class=\"more-actions\" direction=\"up\" menu-classes=\"show-dropdown-up\" position=\"right\">\n                            <button slot=\"title\" type=\"button\" class=\"btn action more-actions-btn\"><i class=\"fas fa-globe\"></i></button>\n                            <template v-for=\"(supportedLanguage, cIndex) in supportedLanguages\">\n                                <button :key=\"'suported-language-button-' + cIndex\" type=\"button\" :class=\"['dropdown-item', {'text-success': supportedLanguage.value === currentLanguage}]\" @click=\"setLanguage(supportedLanguage.value)\">\n                                    <!-- <i class=\"fas fa-check text-light\" :class=\"{'text-dark': pageConfigs.layout === 'grid'}\"></i>  -->\n                                    <!-- {{ $t('meeting.grid_layout') }} -->\n                                    {{supportedLanguage.text}}\n                                </button>\n                            </template>\n                        </base-dropdown>\n\n                        <base-dropdown v-if=\"recordedFilesToUpload && recordedFilesToUpload.length\" tag=\"div\" class=\"more-actions d-none d-md-inline-block\" direction=\"up\" size=\"md\" menu-classes=\"show-dropdown-up p-0 max-height-500px\" position=\"right\" has-scroll>\n\n                            <button slot=\"title\" type=\"button\" class=\"btn action grid-toggle-btn d-none d-md-inline-block\"><i class=\"fas fa-cloud-upload-alt\"></i></button>\n\n                            <card shadow class=\"upload-widget\" body-classes=\"p-0\" header-classes=\"p-2\">\n                                <template #header>\n                                    <h5 class=\"m-0 p-1\">{{ $t('meeting.meeting_recordings') }}</h5>\n                                </template>\n\n                                <div class=\"widget-wrapper\">\n                                    <div class=\"widget-body file-uploader\">\n                                        <div class=\"files-list-wrapper\">\n                                            <ul class=\"files-list\">\n                                                <li v-for=\"fileObj in recordedFilesToUpload\" :key=\"fileObj.uuid\" class=\"file-details-row\">\n\n                                                    <div class=\"file-details\">\n                                                        <h6 v-if=\"!fileObj.chunk\" class=\"pointer\" @click=\"fileObj.download(fileObj.blob)\">{{ fileObj.file.name }}</h6>\n                                                        <h6 v-else class=\"pointer\">{{ fileObj.name }}</h6>\n\n                                                        <p class=\"text-danger\" v-if=\"fileObj.error\">\n                                                            {{ fileObj.error }}\n                                                        </p>\n\n                                                        <template v-else>\n                                                            <p class=\"text-muted\">\n                                                                {{ fileObj.status }}\n                                                            </p>\n                                                            <p>\n                                                                <span v-if=\"!fileObj.chunk\"><span class=\"font-weight-700\">{{ $t('upload.size') }}</span>: {{ (fileObj.file.size / 1024) | decimal(0) }} KB</span>\n                                                            </p>\n                                                        </template>\n                                                    </div>\n\n                                                    <div :class=\"['status-wrapper', {'actions-wrapper': fileObj.status === 'uploaded'}]\">\n\n                                                        <transition appear tag=\"div\" name=\"actions\" class=\"transition-wrapper\" mode=\"out-in\">\n                                                            <div class=\"status-uploading-wrapper\" v-if=\"fileObj.status === 'uploading'\">\n                                                                <label v-if=\"!fileObj.chunk\" class=\"status-action\" @click=\"fileObj.cancel\">{{ $t('upload.cancel') }}</label>\n\n                                                                <progress-ring :value=\"fileObj.progress\" :stroke-color=\"vars.loaderColor\" :radius=\"18\" :stroke-width=\"2\" percent-size=\"sm\" />\n                                                            </div>\n\n                                                            <div class=\"status-cancelled-wrapper\" v-else-if=\"fileObj.status === 'cancelled'\">\n                                                                <label class=\"status-text text-danger\">{{ $t('upload.cancelled') }}</label>\n                                                                <span class=\"status-icon text-danger\"><i class=\"fas fa-times\"></i></span>\n                                                            </div>\n\n                                                            <div class=\"status-error-wrapper\" v-else-if=\"fileObj.status === 'error'\">\n                                                                <label class=\"status-text text-danger\">{{ $t('upload.error') }}</label>\n                                                                <span class=\"status-icon text-danger\"><i class=\"fas fa-exclamation-triangle\"></i></span>\n                                                            </div>\n                                                        </transition>\n                                                    </div>\n                                                </li>\n                                            </ul>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </card>\n                        </base-dropdown>\n\n\n\n                        <base-dropdown v-if=\"entity.status && videoList.length && !(pageConfigs.enableWhiteboard && showWhiteboard)\" tag=\"div\" class=\"more-actions d-none d-md-inline-block\" direction=\"up\" menu-classes=\"show-dropdown-up\" position=\"right\">\n                            <button slot=\"title\" type=\"button\" class=\"btn action grid-toggle-btn d-none d-md-inline-block\" v-b-tooltip.hover.d500 :title=\"$t('meeting.change_layout')\"><i class=\"fas fa-th-large\"></i></button>\n\n                            <button type=\"button\" class=\"dropdown-item d-flex justify-content-between align-items-center\" @click=\"toggleLayout('grid')\">{{ $t('meeting.grid_layout') }} <i class=\"fas fa-check min-width-auto text-light\" :class=\"{'text-dark': pageConfigs.layout === 'grid'}\"></i></button>\n\n                            <button type=\"button\" class=\"dropdown-item d-flex justify-content-between align-items-center\" @click=\"toggleLayout('gallery')\">{{ $t('meeting.gallery_layout') }} <i class=\"fas fa-check min-width-auto text-light\" :class=\"{'text-dark': pageConfigs.layout === 'gallery'}\"></i></button>\n\n                            <button v-if=\"pageConfigs.hasAgenda || (pageConfigs.enableWhiteboard && showWhiteboard)\" type=\"button\" class=\"dropdown-item d-flex justify-content-between align-items-center\" @click=\"toggleLayout('presentation')\">{{ $t('meeting.presentation_layout') }} <i class=\"fas fa-check min-width-auto text-light\" :class=\"{'text-dark': pageConfigs.layout === 'presentation'}\"></i></button>\n\n                            <button type=\"button\" class=\"dropdown-item d-flex justify-content-between align-items-center\" @click=\"toggleLayout('fullpage')\">{{ $t('meeting.fullpage_layout') }} <i v-if=\"pageConfigs.layout === 'fullpage'\" class=\"fas fa-check min-width-auto text-light\" :class=\"{'text-dark': pageConfigs.layout === 'fullpage'}\"></i></button>\n                        </base-dropdown>\n\n                        <button v-if=\"pageConfigs.enableChat && configs.chat && configs.chat.enabled && subscriptions && subscriptions.userPrivate && !entity.isBlocked\" type=\"button\" :class=\"['btn action chats-toggle-btn', {'pulse': totalUnreadMessages && totalUnreadMessages > 0 && !isChatBoxShown}]\" @click=\"toggleChatBox\" v-b-tooltip.hover.d500 :title=\"$t((isChatBoxShown ? 'global.hide' : 'global.show'), { attribute: $t('chat.chats')})\">\n                            <i :class=\"[isChatBoxShown ? 'fas fa-comment-slash' : 'far fa-comment']\"></i>\n\n                            <span v-if=\"totalUnreadMessages && totalUnreadMessages > 0\" class=\"text-success unread-count\">{{ totalUnreadMessages }}</span>\n\n                        </button>\n                    </template>\n\n                    <base-dropdown tag=\"div\" class=\"more-actions\" direction=\"up\" menu-classes=\"show-dropdown-up\" position=\"right\">\n                        <button slot=\"title\" type=\"button\" class=\"btn action more-actions-btn\"><i class=\"fas fa-ellipsis-v\"></i></button>\n\n                        <button v-if=\"!(entity && entity.status && videoList.length)\" type=\"button\" class=\"dropdown-item\" @click=\"$router.push({ name: fallBackRoute})\"><i class=\"fas fa-chevron-left\"></i> {{ $t('general.back') }}</button>\n                        <button v-else type=\"button\" class=\"dropdown-item\" @click=\"getOffline\"><i class=\"fas fa-phone-slash\"></i> {{ $t('meeting.leave_meeting') }}</button>\n\n                        <button v-if=\"entity && entity.status && entity.canModerate && entity.status==='live'\" type=\"button\" class=\"dropdown-item\" @click=\"endMeeting\"><i class=\"fas fa-calendar-times\"></i> {{ $t('meeting.end_meeting') }}</button>\n\n                        <div role=\"separator\" class=\"dropdown-divider my-1\"></div>\n\n                        <button v-if=\"pageConfigs.hasAgenda\" type=\"button\" class=\"dropdown-item agenda-toggle-btn\" @click=\"toggleAgenda\"><i class=\"fas fa-quote-left\"></i> {{ $t((showAgenda ? 'global.hide' : 'global.show'), { attribute: $t('general.agenda')}) }}</button>\n\n                        <button type=\"button\" class=\"dropdown-item d-none d-md-block\" @click=\"toggleFooterAutoHide\"><i class=\"fas fa-hourglass-start\"></i> {{ $t((pageConfigs.footerAutoHide ? 'meeting.toggle_autohide_off' : 'meeting.toggle_autohide_on')) }}</button>\n\n                        <button v-if=\"uiConfigs.fullScreen\" type=\"button\" class=\"dropdown-item d-none d-md-block\" @click=\"toggleFullScreen(false)\"><i class=\"fas fa-compress\"></i> {{ $t('config.ui.toggle_fullscreen') }}</button>\n                        <button v-else type=\"button\" class=\"dropdown-item d-none d-md-block\" @click=\"toggleFullScreen(true)\"><i class=\"fas fa-expand\"></i> {{ $t('config.ui.toggle_fullscreen') }}</button>\n\n                        <button v-if=\"pageConfigs.enableMeetingInfo && videoList.length\" type=\"button\" class=\"dropdown-item\" @click=\"toggleMeetingInfo\"><i class=\"fas fa-info\"></i> {{ $t('meeting.toggle_meeting_info') }}</button>\n\n                        <div role=\"separator\" class=\"dropdown-divider d-md-none my-1\"></div>\n\n                        <button type=\"button\" class=\"dropdown-item d-md-none\" @click=\"toggleLayout('grid')\"><i class=\"fas fa-check text-light\" :class=\"{'text-dark': pageConfigs.layout === 'grid'}\"></i> {{ $t('meeting.grid_layout') }}</button>\n\n                        <button type=\"button\" class=\"dropdown-item d-md-none\" @click=\"toggleLayout('fullpage')\"><i class=\"fas fa-check text-light\" :class=\"{'text-dark': pageConfigs.layout === 'fullpage'}\"></i> {{ $t('meeting.fullpage_layout') }}</button>\n\n                        <div role=\"separator\" class=\"dropdown-divider my-1\"></div>\n\n                        <button v-if=\"pageConfigs.showDeviceConfig\" type=\"button\" class=\"dropdown-item show-devices-btn\" @click=\"toggleDevicesModal\"><i class=\"fas fa-cogs\"></i> {{ $t('meeting.media_devices.setup') }}</button>\n\n                        <template v-if=\"entity\">\n                            <a v-if=\"entity.canModerate\" target=\"_blank\" class=\"dropdown-item\" :href=\"configPageUrl()\"><i class=\"fas fa-cog\"></i> {{ $t('global.config', {attribute: $t('meeting.meeting')}) }}</a>\n\n                            <a v-if=\"pageConfigs.enableSnapshot && entity.hasSnapshots\" target=\"_blank\" class=\"dropdown-item\" :href=\"snapshotsPageUrl()\"><i class=\"fas fa-image\"></i> {{ $t('global.view', {attribute: $t('meeting.snapshots')}) }}</a>\n\n                            <a v-if=\"pageConfigs.enableRecording && (entity.hasChunkRecordings || entity.hasRecordings)\" target=\"_blank\" class=\"dropdown-item\" :href=\"recordingsPageUrl()\"><i class=\"fas fa-photo-video\"></i> {{ $t('global.view', {attribute: $t('meeting.recordings')}) }}</a>\n                        </template>\n\n                        <template v-if=\"entity && entity.status && videoList.length\">\n                            <button v-if=\"pageConfigs.enableFileSharing\" type=\"button\" class=\"dropdown-item file-sharing-btn\" @click=\"toggleFileSharing\"><i class=\"fas fa-upload\"></i> {{ $t('upload.share_files') }}</button>\n\n                            <template v-if=\"pageConfigs.enableScreenSharing\">\n                                <button v-if=\"localScreenStreamid\" type=\"button\" class=\"dropdown-item d-none d-md-block\" @click=\"stopSharingScreen\"><i class=\"fas fa-minus-square\"></i> {{ $t('meeting.stop_sharing_screen') }}</button>\n                                <button v-else type=\"button\" class=\"dropdown-item d-none d-md-block\" @click=\"shareScreen\"><i class=\"fas fa-desktop\"></i> {{ $t('meeting.share_screen') }}</button>\n                            </template>\n                        </template>\n\n                        <button v-if=\"pageConfigs.enableLinkSharing\" type=\"button\" class=\"dropdown-item\" @click=\"shareURL\"><i class=\"fas fa-share-alt\"></i> {{ $t('general.share_url') }}</button>\n                        <button v-if=\"pageConfigs.enableLinkSharing && hasNativeShare\" type=\"button\" class=\"dropdown-item\" @click=\"share\"><i class=\"fas fa-share-alt\"></i> {{ $t('general.share') }}</button>\n                        <button type=\"button\" class=\"dropdown-item\" @click=\"toggleVoiceToText()\" :title=\"$t('meeting.recognize_text_title')\" >\n                            <i class=\"fas fa-language\"></i>\n                            {{ $t(( (g_enableV2T || enableV2T) ? 'meeting.enable_recognize_text' : 'meeting.disable_recognize_text')) }}\n                        </button>\n                        <button type=\"button\" class=\"dropdown-item\" @click=\"toggleVoiceToVoice()\" :title=\"$t('meeting.recognize_voice_title')\">\n                            <i class=\"fas fa-microphone\"></i>\n                            {{ $t(( (g_enableV2V || enableV2V) ? 'meeting.enable_recognize_voice' : 'meeting.disable_recognize_voice')) }}\n                        </button>\n                    </base-dropdown>\n\n                    <base-dropdown tag=\"div\" class=\"more-actions\" direction=\"up\" menu-classes=\"show-dropdown-up\" position=\"right\">\n\n\n                        <button slot=\"title\" type=\"button\" class=\"btn action grid-toggle-btn d-none d-md-inline-block px-1\">\n                            <user-avatar v-if=\"loggedInUser\" :user=\"loggedInUser\" :size=\"40\" :color=\"vars.colors[uiConfigs.topNavbarColor]\" />\n                        </button>\n\n                        <h6 class=\"dropdown-header\">{{ $t('general.greeting') + ', ' + loggedInUser.name }}</h6>\n\n                        <router-link v-if=\"loggedInUser\" :to=\"{ name: 'appProfileView' }\" class=\"dropdown-item\">\n                            <i class=\"fas fa-user\"></i> {{ $t('user.your_profile') }}\n                        </router-link>\n\n                        <router-link v-if=\"!hasPermission('access-config')\" :to=\"{ name: 'appUserPreference' }\" class=\"dropdown-item\">\n                            <i class=\"fas fa-user-cog\"></i> {{ $t('user.user_preference') }}\n                        </router-link>\n\n                        <router-link :to=\"{ name: 'appUserChangePassword' }\" class=\"dropdown-item\">\n                            <i class=\"fas fa-key\"></i> {{ $t('auth.password.change_password') }}\n                        </router-link>\n\n                    </base-dropdown>\n                </div>\n            </div>\n\n\n            <div :class=\"['agenda-streams-container', {'has-agenda': pageConfigs.hasAgenda || (hasVideos && pageConfigs.enableWhiteboard)}, {'agenda-visible': showAgenda || (hasVideos && showWhiteboard)}, {'has-cover-image': entity && entity.cover && hasVideos} ]\" :style=\"coverPageStyles\">\n\n                <template v-if=\"entity && !entity.isBlocked\">\n                    <template v-if=\"pageConfigs.hasAgenda && !showWhiteboard\">\n                        <card shadow class=\"agenda-container\" body-classes=\"agenda-wrapper\">\n\n                            <div class=\"meeting-agenda-container\">\n                                <vue-scroll ref=\"vue-scroll-agenda\" id=\"vue-scroll-agenda\">\n                                    <template v-if=\"entity\">\n                                        <h4 class=\"meeting-title\" v-once>{{ entity.title }}</h4>\n\n                                        <div class=\"text-muted mt-3\">\n                                            <span v-once>{{ $t('meeting.props.type') }}: {{ entity.type.name }},</span>\n                                            <span v-once>{{ $t('meeting.meeting_category.category') }}: {{ entity.category.name }}</span>\n                                        </div>\n\n                                        <view-paragraph class=\"mt-3\" :label=\"$t('meeting.props.agenda')\" :value=\"entity.agenda\" />\n\n                                        <view-paragraph v-if=\"entity.description\" class=\"mt-3\" :label=\"$t('meeting.props.description')\" :value=\"entity.description\" html />\n\n                                        <view-uploads v-if=\"entity.attachments\" :class=\"['mt-3', uiConfigs.colorSchemeType]\" :label=\"$t('upload.attachments')\" :name-label=\"$t('upload.attachment')\" :value=\"entity.attachments\" download-button-classes=\"text-gray\" :url-prefix=\"`/meetings/${uuid}/downloads`\" />\n                                    </template>\n                                </vue-scroll>\n                            </div>\n\n                        </card>\n                    </template>\n\n                    <template v-if=\"hasVideos && pageConfigs.enableWhiteboard && !showAgenda\">\n                        <card shadow class=\"whiteboard-container\" body-classes=\"whiteboard-wrapper\">\n\n                            <div class=\"meeting-whiteboard-container\">\n                                <vue-scroll ref=\"vue-scroll-whiteboard\" id=\"vue-scroll-whiteboard\">\n                                    <div id=\"whiteboard\" class=\"whiteboard\" ref=\"whiteboard\"></div>\n                                </vue-scroll>\n                            </div>\n\n                        </card>\n                    </template>\n                </template>\n\n                <div :class=\"['voice-text']\">\n                    <template v-if=\"textResult\">\n                        <template v-for=\"(item) in videoList\">\n                            <div v-if=\"pageConfigs.enableUserAvatar && !item.local\" class=\"text-left align-content-start text-md-left d-flex align-items-center mb-1\">\n                                <user-avatar :user=\"item.extra ? item.extra : {name: item.name}\" :size=\"40\" class=\"mr-2\" has-shadow />\n                                <span class=\"text-light\">{{textResult}}</span>\n                            </div>\n                        </template>\n                    </template>\n                    <template v-else>\n                        <template v-for=\"(conversation, cIndex) in conversations\">\n                            <template v-for=\"(item, i) in videoList\">\n                                <template v-if=\"conversation.translations[myLanguage] && conversation.user == item.uuid\">\n                                    <div v-if=\"pageConfigs.enableUserAvatar && !item.local\" :key=\"`voice-text-list-${cIndex}-${i}`\" class=\"text-left align-content-start text-md-left d-flex align-items-center mb-1\">\n                                        <user-avatar :user=\"item.extra ? item.extra : {name: item.name}\" :size=\"40\" class=\"mr-2\" has-shadow />\n                                        <span :key=\"cIndex\" class=\"text-light\">{{conversation.translations[myLanguage]}}</span>\n                                    </div>\n                                </template>\n                            </template>\n                        </template>\n                    </template>\n                </div>\n\n                <div :class=\"['streams-container', hasVideos ? `stream-${pageConfigs.layout}-layout` : '']\">\n\n                    <div :class=\"['video-list', hasVideosClasses]\" ref=\"videoListEle\">\n\n                        <template v-if=\"hasVideos\">\n                            <template v-for=\"(item, itemIndex) in videoList\">\n                                <div :key=\"`${item.uuid}${item.id}`\" :class=\"['video-item video-card', {'maximized': item.maximized}, {'local': item.local}, {'screen': item.screen}, {'whiteboard': item.whiteboard}, {'fullscreen-item': item.id === fullScreenItemId}, {'hand-up': item.isHandUp}, {'user-speaking': item.speaking}, {'audio-muted': item.audioMuted}, {'video-muted': item.videoMuted || !item.hasVideo }, {'no-stream': !item.status}, {'disable-mirror': item.disableMirror}, {'has-full-user-avatar': pageConfigs.enableUserAvatar && pageConfigs.enableFullUserAvatar && item.extra && (item.extra.cover || item.extra.avatar) && (item.videoMuted || !item.hasVideo)}]\" @dblclick=\"changeFocus(item)\">\n                                    <div class=\"video-wrapper\">\n\n                                        <video autoplay playsinline ref=\"videos\" :muted=\"item.muted\" :id=\"item.id\" :poster=\"item.status  ? null : '/images/video/no-stream.jpg'\" :class=\"[{'no-poster': item.status && !item.videoMuted}]\"></video>\n\n                                        <div v-if=\"pageConfigs.enableUserAvatar && pageConfigs.enableFullUserAvatar && item.extra && (item.extra.cover || item.extra.avatar) && (item.videoMuted || !item.hasVideo)\" class=\"full-user-avatar\" :style=\"`background-image: url(${ item.extra.cover || item.extra.avatar })`\"></div>\n\n                                        <div class=\"caption\">\n                                            <template v-if=\"pageConfigs.enableUserAvatar && !item.local\">\n                                                <user-avatar :user=\"item.extra ? item.extra : {name: item.name}\" :size=\"40\" class=\"mr-1\" has-shadow />\n                                            </template>\n\n                                            <h6>\n                                                <span :class=\"['text-xs mr-1', {'text-success': item.status}, {'text-danger': !item.status}]\"><i class=\"fas fa-circle\"></i></span>\n\n                                                <template v-if=\"item.local\">\n                                                    {{ item.screen ? $t('meeting.your_screen') : (item.whiteboard ? $t('meeting.your_whiteboard') : $t('meeting.you')) }}\n                                                </template>\n\n                                                <template v-else>\n                                                    {{ item.screen ? `${item.name}${$t('meeting.screen')}` : (item.whiteboard ? `${item.name}${$t('meeting.whiteboard')}` : item.name) }}\n                                                </template>\n\n                                                <span v-if=\"!item.status\" class=\"bracketed text-danger\">{{ $t('meeting.left') }}</span>\n                                            </h6>\n                                        </div>\n\n                                        <div class=\"highlight-border\"></div>\n                                    </div>\n\n\n                                    <div v-if=\"!item.local\" class=\"custom-controls-wrapper\">\n                                        <div class=\"custom-controls\">\n                                            <div v-if=\"item.extra.isHost\" class=\"status-icon\" v-b-tooltip.hover.d500 :title=\"$t('meeting.host')\">\n                                                <i class=\"fas fa-user-tie enabled-text\"></i>\n                                            </div>\n                                            <div v-else-if=\"item.extra.canModerate\" class=\"status-icon\" v-b-tooltip.hover.d500 :title=\"$t('meeting.moderator')\">\n                                                <i class=\"fas fa-user-cog enabled-text\"></i>\n                                            </div>\n\n                                            <div class=\"status-icon\" v-if=\"!item.whiteboard && !item.screen && item.isHandUp\">\n                                                <i class=\"fas fa-hand-paper enabled-text\"></i>\n                                            </div>\n\n                                            <div class=\"status-icon\" v-if=\"item.audioMuted\">\n                                                <i class=\"fas fa-microphone-slash disabled-text\"></i>\n                                            </div>\n\n                                            <template v-if=\"pageConfigs.layout === 'fullpage' && !item.maximized\">\n                                                <button @click=\"toggleRemoteAudio(item, itemIndex)\" v-b-tooltip.hover.d500 :title=\"$t('meeting.mute_for_me')\" class=\"controls-btn\">\n                                                    <i :class=\"['fas', {'fa-volume-up enabled-text': item.muted}, {'fa-volume-off disabled-text': !item.muted}]\"></i>\n                                                </button>\n\n                                                <button @click=\"changeFocus(item)\" v-b-tooltip.hover.d500 :title=\"$t('meeting.maximize')\" class=\"controls-btn\">\n                                                    <i class=\"fas fa-expand enabled-text\"></i>\n                                                </button>\n\n                                                <button v-if=\"pageConfigs.enableSnapshot && (pageConfigs.anyoneCanTakeSnapshot || entity.canModerate)\" @click=\"takeSnapshotOfStream(item, itemIndex)\" v-b-tooltip.hover.d500 :title=\"$t('meeting.take_snapshot')\" class=\"controls-btn\">\n                                                    <i class=\"fas fa-image enabled-text\"></i>\n                                                </button>\n\n                                                <template v-if=\"entity.canModerate\">\n                                                    <button @click=\"kickRemoteUser(item, itemIndex)\" v-b-tooltip.hover.d500 :title=\"$t('meeting.kick_ban_participant')\" class=\"controls-btn\">\n                                                        <i class=\"fas fa-ban enabled-text\"></i>\n                                                    </button>\n\n                                                    <button @click=\"toggleRemoteAudioSource(item, itemIndex)\" v-b-tooltip.hover.d500 :title=\"$t('meeting.mute_for_everyone')\" class=\"controls-btn\">\n                                                        <i :class=\"['fas', {'fa-microphone enabled-text': item.audioMuted}, {'fa-microphone-slash disabled-text': !item.audioMuted}]\"></i>\n                                                    </button>\n                                                </template>\n                                            </template>\n\n                                            <base-dropdown v-else tag=\"div\" class=\"custom-control-dropdown\" position=\"right\">\n                                                <button slot=\"title\" type=\"button\" class=\"btn action custom-control-dropdown-btn btn-sm\"><i class=\"fas fa-ellipsis-v\"></i></button>\n\n\n                                                <button type=\"button\" class=\"dropdown-item btn-sm\" @click=\"disableMirror(item, itemIndex)\">\n                                                    <i class=\"fas fa-exchange-alt enabled-text\"></i> {{ $t('meeting.mirror_flip') }}\n                                                </button>\n\n                                                <button v-if=\"pageConfigs.layout === 'fullpage' && !item.maximized\" type=\"button\" class=\"dropdown-item btn-sm\" @click=\"changeFocus(item)\">\n                                                    <i class=\"fas fa-expand enabled-text\"></i> {{ $t('meeting.maximize') }}\n                                                </button>\n\n                                                <button type=\"button\" class=\"dropdown-item btn-sm\" @click=\"toggleRemoteAudio(item, itemIndex)\">\n                                                    <template v-if=\"item.muted\">\n                                                        <i class=\"fas fa-volume-up enabled-text\"></i> {{ $t('meeting.unmute_for_me') }}\n                                                    </template>\n                                                    <template v-else>\n                                                        <i class=\"fas fa-volume-off disabled-text\"></i> {{ $t('meeting.mute_for_me') }}\n                                                    </template>\n                                                </button>\n\n                                                <button v-if=\"pageConfigs.enableSnapshot && (pageConfigs.anyoneCanTakeSnapshot || entity.canModerate)\" type=\"button\" class=\"dropdown-item btn-sm\" @click=\"takeSnapshotOfStream(item, itemIndex)\">\n                                                    <i class=\"fas fa-image enabled-text\"></i> {{ $t('meeting.take_snapshot') }}\n                                                </button>\n\n                                                <template v-if=\"entity.canModerate\">\n                                                    <button type=\"button\" class=\"dropdown-item btn-sm\" @click=\"kickRemoteUser(item, itemIndex)\">\n                                                        <i class=\"fas fa-ban enabled-text\"></i> {{ $t('meeting.kick_ban') }}\n                                                    </button>\n\n                                                    <button type=\"button\" class=\"dropdown-item btn-sm\" @click=\"toggleRemoteAudioSource(item, itemIndex)\">\n                                                        <template v-if=\"item.audioMuted\">\n                                                            <i class=\"fas fa-microphone enabled-text\"></i> {{ $t('meeting.unmute_for_everyone') }}\n                                                        </template>\n                                                        <template v-else>\n                                                            <i class=\"fas fa-microphone-slash disabled-text\"></i> {{ $t('meeting.mute_for_everyone') }}\n                                                        </template>\n                                                    </button>\n                                                </template>\n\n                                            </base-dropdown>\n                                        </div>\n                                    </div>\n\n                                    <div v-else-if=\"item.local\" class=\"custom-controls-wrapper\">\n                                        <div class=\"custom-controls\">\n                                            <div v-if=\"item.extra.isHost\" class=\"status-icon\" v-b-tooltip.hover.d500 :title=\"$t('meeting.host')\">\n                                                <i class=\"fas fa-user-tie text-info\"></i>\n                                            </div>\n\n                                            <div v-else-if=\"item.extra.canModerate\" class=\"status-icon\" v-b-tooltip.hover.d500 :title=\"$t('meeting.moderator')\">\n                                                <i class=\"fas fa-user-cog text-info\"></i>\n                                            </div>\n\n                                            <button @click=\"changeFocus(item)\" v-b-tooltip.hover.d500 :title=\"$t('meeting.maximize')\" class=\"controls-btn\">\n                                                <i class=\"fas fa-expand enabled-text\"></i>\n                                            </button>\n\n                                            <div v-if=\"item.isHandUp\" class=\"status-icon\">\n                                                <i class=\"fas fa-hand-paper enabled-text\"></i>\n                                            </div>\n\n                                            <button v-if=\"pageConfigs.enableSnapshot && (pageConfigs.anyoneCanTakeSnapshot || entity.canModerate)\" @click=\"takeSnapshotOfStream(item, itemIndex)\" v-b-tooltip.hover.d500 :title=\"$t('meeting.take_snapshot')\" class=\"controls-btn\">\n                                                <i class=\"fas fa-image enabled-text\"></i>\n                                            </button>\n                                        </div>\n                                    </div>\n\n\n                                </div>\n                            </template>\n                        </template>\n\n\n                        <card v-else shadow class=\"video-item wait-box maximized\">\n                            <template v-if=\"entity && !entity.isBlocked\">\n\n                                <template v-if=\"entity.status === 'scheduled' || entity.status === 'live'\">\n                                    <div class=\"green-room text-center mt-3\">\n                                        <video autoplay playsinline ref=\"greenRoomVideo\" muted id=\"greenRoomVideo\"></video>\n                                        <br>\n                                        <canvas id=\"greenRoomAudio\" ref=\"greenRoomAudio\" width=\"250\" height=\"15\" :data-val=\"micVolumeActivity\" style=\"margin: 0 auto;\">No canvas</canvas>\n                                    </div>\n                                </template>\n\n                                <template v-if=\"entity.status === 'scheduled'\">\n\n                                    <flip-countdown class=\"my-3\" v-if=\"startDateTimeIsFuture\" :deadline=\"entity.startDateTime\" />\n\n                                    <template v-else>\n                                        <template v-if=\"entity.canModerate\">\n                                            <h5 class=\"text-muted text-center my-3\">\n                                                {{ $t('meeting.waiting_for_you_to_start') }}\n                                            </h5>\n\n                                            <div class=\"d-flex justify-content-center flex-wrap my-3\">\n                                                <base-button type=\"button\" design=\"primary\" size=\"lg\" @click=\"getOnline\">{{ $t('global.click_to', { attribute: $t('meeting.get_live') }) }}</base-button>\n\n                                                <base-button v-if=\"!isLoading\" type=\"button\" design=\"light\" size=\"lg\" @click=\"$router.push({ name: fallBackRoute})\">{{ $t('global.click_to', { attribute: $t('general.go_back') }) }}</base-button>\n                                            </div>\n                                        </template>\n\n                                        <template v-else>\n                                            <h5 class=\"text-muted text-center my-3\">\n                                                {{ $t('meeting.starting_any_time_now') }}\n                                            </h5>\n\n                                            <div v-if=\"!isLoading\" class=\"d-flex justify-content-center\">\n                                                <base-button type=\"button\" design=\"light\" size=\"lg\" @click=\"$router.push({ name: fallBackRoute})\">{{ $t('global.click_to', { attribute: $t('general.go_back') }) }}</base-button>\n                                            </div>\n                                        </template>\n                                    </template>\n\n                                    <div class=\"text-center my-3\">\n                                        <span class=\"text-muted\">{{ $t('meeting.scheduled_for') }}</span><span class=\"text-muted-lg m-l-5\" v-b-tooltip.hover.d500 :title=\"entity.startDateTime | momentDateTime\">{{ entity.startDateTime | momentCalendar({ sameElse: vars.defaultDateTimeFormat }) }}</span>\n                                    </div>\n\n                                    <div v-if=\"liveMembersCount > 0\" class=\"text-muted text-center my-3\">\n                                        <span class=\"text-xs text-success mr-1\"><i class=\"fas fa-circle\"></i></span>\n                                        <animated-number :number=\"liveMembersCount\" :delay=\"100\" />\n                                        <span v-if=\"liveMembersCount>1\">{{ $t('meeting.members_online') }}</span>\n                                        <span v-else>{{ $t('meeting.member_online') }}</span>\n                                    </div>\n\n                                    <template v-if=\"entity.canModerate\">\n                                        <div class=\"d-flex justify-content-center my-3\">\n                                            <base-button type=\"button\" design=\"gray-darker\" size=\"sm\" @click=\"cancelMeeting\">\n                                                <i class=\"fas fa-times m-r-5\"></i> {{ $t('meeting.cancel') }}</base-button>\n\n                                            <base-dropdown tag=\"div\" size=\"sm\" direction=\"up\">\n                                                <base-button slot=\"title\" type=\"button\" design=\"gray-darker\" size=\"sm\" data-toggle=\"dropdown\" role=\"button\">\n                                                    <i class=\"far fa-clock m-r-5\"></i>\n                                                    <span class=\"nav-link-inner--text\">{{ $t('meeting.snooze') }}</span>\n                                                    <i class=\"fas fa-chevron-up m-l-5\"></i>\n                                                </base-button>\n\n                                                <template>\n                                                    <button type=\"button\" class=\"dropdown-item\" v-for=\"opt in snoozeOpts\" :key=\"opt.uuid\" @click=\"snoozeMeeting(opt.uuid)\">{{ opt.name }} {{ $t(`list.general.durations.${opt.type}`) }}</button>\n                                                </template>\n                                            </base-dropdown>\n                                        </div>\n                                    </template>\n\n                                </template>\n\n\n                                <template v-else-if=\"entity.status === 'live'\">\n                                    <template v-if=\"roomIdAlive\">\n                                        <h5 class=\"text-muted text-center my-3\">\n                                            {{ $t('meeting.is_live_now') }}\n                                        </h5>\n\n                                        <div class=\"d-flex justify-content-center flex-wrap my-3\">\n                                            <base-button type=\"button\" design=\"primary\" size=\"lg\" @click=\"getOnline\">{{ $t('global.click_to', { attribute: $t('meeting.get_live') }) }}</base-button>\n\n                                            <base-button v-if=\"!isLoading\" type=\"button\" design=\"light\" size=\"lg\" @click=\"$router.push({ name: fallBackRoute})\">{{ $t('global.click_to', { attribute: $t('general.go_back') }) }}</base-button>\n                                        </div>\n                                    </template>\n\n                                    <template v-else>\n                                        <template v-if=\"entity.canModerate\">\n                                            <h5 class=\"text-muted text-center my-3\">\n                                                {{ $t('meeting.waiting_for_you_to_start') }}\n                                            </h5>\n\n                                            <div class=\"d-flex justify-content-center flex-wrap my-3\">\n                                                <base-button type=\"button\" design=\"primary\" size=\"lg\" @click=\"getOnline\">{{ $t('global.click_to', { attribute: $t('meeting.get_live') }) }}</base-button>\n\n                                                <base-button v-if=\"!isLoading\" type=\"button\" design=\"light\" size=\"lg\" @click=\"$router.push({ name: fallBackRoute})\">{{ $t('global.click_to', { attribute: $t('general.go_back') }) }}</base-button>\n                                            </div>\n                                        </template>\n\n                                        <template v-else>\n                                            <h5 class=\"text-muted text-center my-3\">\n                                                {{ $t('meeting.starting_any_time_now') }}\n                                            </h5>\n\n                                            <div v-if=\"!isLoading\" class=\"d-flex justify-content-center\">\n                                                <base-button type=\"button\" design=\"light\" size=\"lg\" @click=\"$router.push({ name: fallBackRoute})\">{{ $t('global.click_to', { attribute: $t('general.go_back') }) }}</base-button>\n                                            </div>\n                                        </template>\n                                    </template>\n\n                                    <div v-if=\"liveMembersCount > 0\" class=\"text-muted text-center my-3\">\n                                        <span class=\"text-xs text-success mr-1\"><i class=\"fas fa-circle\"></i></span>\n                                        <animated-number :number=\"liveMembersCount\" :delay=\"100\" />\n                                        <span v-if=\"liveMembersCount>1\">{{ $t('meeting.members_online') }}</span>\n                                        <span v-else>{{ $t('meeting.member_online') }}</span>\n                                    </div>\n                                </template>\n\n\n                                <template v-else-if=\"entity.status === 'cancelled'\">\n                                    <h4 class=\"text-muted text-center my-3\">\n                                        {{ $t('meeting.meeting_cancelled') }}\n                                    </h4>\n\n                                    <div v-if=\"!isLoading\" class=\"d-flex justify-content-center\">\n                                        <base-button type=\"button\" design=\"light\" size=\"lg\" @click=\"$router.push({ name: fallBackRoute})\">{{ $t('global.click_to', { attribute: $t('general.go_back') }) }}</base-button>\n                                    </div>\n                                </template>\n\n                                <template v-else-if=\"entity.status === 'ended'\">\n                                    <h4 class=\"text-muted text-center my-3\">\n                                        {{ $t('meeting.meeting_ended') }}\n                                    </h4>\n\n                                    <div v-if=\"!isLoading\" class=\"d-flex justify-content-center\">\n                                        <base-button type=\"button\" design=\"light\" size=\"lg\" @click=\"$router.push({ name: fallBackRoute})\">{{ $t('global.click_to', { attribute: $t('general.go_back') }) }}</base-button>\n                                    </div>\n                                </template>\n\n                            </template>\n\n                            <template v-else>\n                                <h3 v-if=\"entity\" class=\"text-center text-danger my-3\">\n                                    {{ $t('meeting.not_allowed') }}\n                                </h3>\n\n                                <div v-if=\"!isLoading\" class=\"d-flex justify-content-center\">\n                                    <base-button type=\"button\" design=\"light\" size=\"lg\" @click=\"$router.push({ name: fallBackRoute})\">{{ $t('global.click_to', { attribute: $t('general.go_back') }) }}</base-button>\n                                </div>\n                            </template>\n                        </card>\n\n\n                    </div>\n\n                </div>\n            </div>\n\n            <div v-if=\"pageConfigs.enableMeetingInfo && rtcmConnection && videoList.length && showMeetingInfo\" class=\"meeting-info-container\">\n                <div class=\"meeting-info\"><span class=\"info-label\">{{ $t('meeting.total_participants') }}</span>: <span class=\"info-value\">{{ participantCount }}</span></div>\n                <div class=\"meeting-info\"><span class=\"info-label\">{{ $t('meeting.started_at') }}</span>: <span class=\"info-value\">{{ entity.startedAt | moment(vars.defaultDateTimeFormat) }}</span></div>\n                <div class=\"meeting-info\"><span class=\"info-label\">{{ $t('meeting.meeting_live_since') }}</span>: <span class=\"info-value\">{{ meetingDuration }}</span></div>\n                <div class=\"meeting-info\"><span class=\"info-label\">{{ $t('meeting.props.estimated_end_time') }}</span>: <span class=\"info-value\">{{ entity.estimatedEndTime | moment(vars.defaultDateTimeFormat) }}</span></div>\n            </div>\n\n\n            <div class=\"chat-box-container\" v-if=\"pageConfigs.enableChat && configs.chat && configs.chat.enabled && entity && !entity.isBlocked\">\n                <chat-box v-if=\"isChatBoxShown\" :box-visibility=\"isChatBoxShown\" :meeting=\"entity\" :channel=\"subscriptions.userPrivate\" @boxHidden=\"isChatBoxShown = false\" @boxShown=\"isChatBoxShown = true\" />\n            </div>\n\n\n            <b-modal size=\"md\" centered lazy :busy=\"isLoading\" id=\"devicesModal\" v-model=\"showDevicesModal\" no-close-on-backdrop no-close-on-esc @ok=\"onDevicesModalOK\" @cancel=\"onDevicesModalCancel\">\n                <template slot=\"modal-header\">\n                    <h5 class=\"modal-title\">{{ $t('meeting.media_devices.video_and_audio_devices') }}</h5>\n                </template>\n                <div>\n                    <base-select :options=\"mediaDevices.audioInput\" v-model=\"mediaConfigFormData.selectedAudioInput\" :label=\"$t('meeting.media_devices.audio_input')\" :allow-empty=\"false\" preselect-first />\n\n                    <base-select :options=\"mediaDevices.videoInput\" v-model=\"mediaConfigFormData.selectedVideoInput\" :label=\"$t('meeting.media_devices.video_input')\" :allow-empty=\"false\" preselect-first />\n\n                    <div class=\"row\">\n                        <div class=\"col-12 col-md-4\">\n                            <base-select :options=\"mediaDevices.resolutions\" v-model=\"mediaConfigFormData.selectedResolution\" :label=\"$t('meeting.media_devices.video_resolution')\" :allow-empty=\"false\" preselect-first simple track-by=\"label\" show-by=\"label\" />\n                        </div>\n                        <div class=\"col-12 col-md-4\">\n                            <base-select :options=\"mediaDevices.frameRates\" v-model=\"mediaConfigFormData.frameRate\" :label=\"$t('meeting.media_devices.frame_rate')\" :allow-empty=\"false\" preselect-first simple track-by=\"uuid\" show-by=\"label\" />\n                        </div>\n                        <div class=\"col-12 col-md-4\">\n                            <base-select :options=\"mediaDevices.facingModes\" v-model=\"mediaConfigFormData.facingMode\" :label=\"$t('meeting.media_devices.facing_mode')\" :allow-empty=\"false\" preselect-first simple track-by=\"uuid\" show-by=\"label\" />\n                        </div>\n\n                        <div class=\"col-12\"><h6 class=\"mt-2 pb-1\">{{ $t('meeting.media_devices.bandwidth') }}</h6></div>\n\n                        <div class=\"col-12 col-sm-4\">\n                            <base-select :options=\"audioBandwidthOpts\" v-model=\"mediaConfigFormData.bandwidth.audio\" :label=\"$t('meeting.media_devices.audio')\" :allow-empty=\"false\" preselect-first simple track-by=\"uuid\" show-by=\"label\" />\n                        </div>\n\n                        <div class=\"col-12 col-sm-4\">\n                            <base-select :options=\"videoBandwidthOpts\" v-model=\"mediaConfigFormData.bandwidth.video\" :label=\"$t('meeting.media_devices.video')\" :allow-empty=\"false\" preselect-first simple track-by=\"uuid\" show-by=\"label\" />\n                        </div>\n\n                        <div class=\"col-12 col-sm-4\">\n                            <base-select :options=\"screenBandwidthOpts\" v-model=\"mediaConfigFormData.bandwidth.screen\" :label=\"$t('meeting.media_devices.screen')\" :allow-empty=\"false\" preselect-first simple track-by=\"uuid\" show-by=\"label\" />\n                        </div>\n                    </div>\n                </div>\n            </b-modal>\n\n\n            <div v-if=\"pageConfigs.enableFileSharing\" :class=\"['files-sharing-box d-none', {'d-flex': showFileSharing}]\">\n                <card shadow class=\"files-container\" body-classes=\"files-wrapper\">\n                    <file-sharer :connection=\"fileSharingConnection\" :allow-sharing=\"pageConfigs.enableFileSharing\" :options=\"fileSharerOptions\" @hide=\"showFileSharing=false\" @show=\"showFileSharing=true\" />\n                </card>\n            </div>\n\n        </template>\n\n        <card v-else shadow class=\"duplicate-tab d-flex justify-content-center align-items-center min-height-90vh\">\n            <h2>{{ $t('meeting.duplicate_tab') }}</h2>\n        </card>\n    </base-container>\n</template>\n\n<script>\n    import user from '@mixins/user-dropdown'\n    import meeting from '@mixins/meeting'\n    import live from '@mixins/live'\n    import azureSpeech from '@mixins/azure-speech'\n    import googleSpeech from '@mixins/google-speech'\n\n    import AppLogo from '@components/AppLogo'\n    import AnimatedNumber from '@core/components/AnimatedNumber'\n    import FlipCountdown from 'vue2-flip-countdown'\n    import FileSharer from '@components/FileSharer'\n    // import VideoItem from './video-item'\n\n    export default {\n        mixins: [live, meeting, user, azureSpeech, googleSpeech],\n        components: {\n            AppLogo,\n            AnimatedNumber,\n            FlipCountdown,\n            FileSharer,\n        },\n        computed: {\n            fileSharerOptions() {\n                 return {\n                     allowedExtensions: this.configs.system.allowedFileExtensions,\n                     maxNoOfFiles: 20,\n                     allowedMaxFileSize: null,\n                 }\n            }\n        },\n        watch: {\n            locked(newVal, oldVal) {\n                if(newVal) {\n                    const toPath = this.$route.fullPath\n                    this.$router.push({ name: 'authLock', query: { ref: toPath } })\n                }\n            }\n        },\n        methods: {\n            toggleVoiceToText() {\n                console.log(\"currentLanguage:\", this.currentLanguage);\n                if (this.autoTranslate === \"Google Translate\") {\n                    this.google_toggleVoiceToText({ language: this.currentLanguage, V2V: false });\n                } else if (this.autoTranslate === \"Microsoft Azure\" || this.autoTranslate === null) {\n                    this.azure_toggleVoiceToText();\n                }\n            },\n            toggleVoiceToVoice () {\n                if (this.autoTranslate === \"Google Translate\") {\n                    this.google_toggleVoiceToText({ language: this.currentLanguage, V2V: true });\n                } else if (this.autoTranslate === \"Microsoft Azure\" || this.autoTranslate === null) {\n                    this.azure_toggleVoiceToVoice();\n                }\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    @import '~@js/core/assets/scss/imports.scss';\n    @import '~@js/core/assets/scss/partials/_palettes.scss';\n\n    .files-sharing-box {\n        position: relative;\n        width: 100vw;\n        min-height: 30vh;\n\n        .files-container {\n            width: 100%;\n            height: 100%;\n            background-color: rgba(255,255,255);\n\n            .files-wrapper {\n                display: flex;\n                flex-direction: column;\n                justify-content: space-between;\n                padding: .5rem;\n            }\n        }\n    }\n\n    .agenda-streams-container {\n        .voice-text {\n            background-color: #00000017;\n            position: absolute;\n            z-index: 100;\n            top: 50%;\n            left: 50%;\n            transform: translateX(-50%) translateY(calc(-50% - 20px));\n        }\n    }\n\n    @include media-breakpoint-up(sm) {\n\n        .files-sharing-box {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 35vw;\n            height: 100vh;\n            z-index: 1;\n\n            .files-container {\n                width: 100%;\n                height: 100%;\n                background-color: rgba(255,255,255,0.85);\n                padding-bottom: 60px;\n                opacity: 0.85;\n\n                .files-wrapper {\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: space-between;\n                    padding: 1.5rem;\n                }\n            }\n\n            &:hover {\n                .files-container {\n                    opacity: 1;\n                }\n            }\n        }\n    }\n</style>\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Muli:300,400,600,700,800,900);\", \"\"]);\n\n// module\nexports.push([module.id, \".files-sharing-box {\\n  position: relative;\\n  width: 100vw;\\n  min-height: 30vh;\\n}\\n.files-sharing-box .files-container {\\n  width: 100%;\\n  height: 100%;\\n  background-color: white;\\n}\\n.files-sharing-box .files-container .files-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  padding: 0.5rem;\\n}\\n.agenda-streams-container .voice-text {\\n  background-color: #00000017;\\n  position: absolute;\\n  z-index: 100;\\n  top: 50%;\\n  left: 50%;\\n  transform: translateX(-50%) translateY(calc(-50% - 20px));\\n}\\n@media (min-width: 576px) {\\n.files-sharing-box {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 35vw;\\n    height: 100vh;\\n    z-index: 1;\\n}\\n.files-sharing-box .files-container {\\n    width: 100%;\\n    height: 100%;\\n    background-color: rgba(255, 255, 255, 0.85);\\n    padding-bottom: 60px;\\n    opacity: 0.85;\\n}\\n.files-sharing-box .files-container .files-wrapper {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-between;\\n    padding: 1.5rem;\\n}\\n.files-sharing-box:hover .files-container {\\n    opacity: 1;\\n}\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./live.vue?vue&type=style&index=0&lang=scss&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./live.vue?vue&type=style&index=0&lang=scss&\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./live.vue?vue&type=style&index=0&lang=scss&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"sm-uploader file-uploader file-sharer\" }, [\n    _c(\"div\", { class: [\"files-list-wrapper\"] }, [\n      _vm.incomingRequest.show\n        ? _c(\"div\", { staticClass: \"file-incoming-request\" }, [\n            _c(\"div\", { staticClass: \"alert fade show alert-white\" }, [\n              _c(\"div\", { staticClass: \"alert-content\" }, [\n                _c(\"h6\", [\n                  _c(\"strong\", [\n                    _vm._v(_vm._s(_vm.incomingRequest.sender.name))\n                  ]),\n                  _c(\"span\", { staticClass: \"text-muted mx-1\" }, [\n                    _vm._v(_vm._s(_vm.$t(\"upload.wants_to_share_file\")))\n                  ]),\n                  _c(\"strong\", [_vm._v(_vm._s(_vm.incomingRequest.fileId))])\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"d-flex justify-content-start mt-3\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-sm btn-danger flex-grow\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.rejectIncomingFile }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"upload.reject\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-sm btn-success flex-grow\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.acceptIncomingFile }\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"upload.accept\")))]\n                )\n              ])\n            ])\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.sharingFiles.length\n        ? _c(\n            \"ul\",\n            { staticClass: \"files-list\" },\n            _vm._l(_vm.sharingFiles, function(fileObj, index) {\n              return _c(\n                \"li\",\n                { key: fileObj.fileId, staticClass: \"file-details-row\" },\n                [\n                  _c(\"div\", { staticClass: \"file-details-wrapper\" }, [\n                    _c(\"div\", { staticClass: \"file-icon\" }, [\n                      _c(\"span\", [\n                        _c(\"i\", {\n                          class: [\"far\", _vm.getFileIcon(fileObj.type)]\n                        })\n                      ])\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"file-details\" }, [\n                      _c(\"h6\", [_vm._v(_vm._s(fileObj.name))]),\n                      _vm._v(\" \"),\n                      _c(\"p\", [\n                        _c(\"span\", [\n                          _c(\"span\", { staticClass: \"font-weight-700\" }, [\n                            _vm._v(_vm._s(_vm.$t(\"upload.type\")))\n                          ]),\n                          _vm._v(\n                            \": \" +\n                              _vm._s(_vm.mimeTypes[fileObj.type] || \"Unknown\")\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"ml-1\" }, [\n                          _c(\"span\", { staticClass: \"font-weight-700\" }, [\n                            _vm._v(_vm._s(_vm.$t(\"upload.size\")))\n                          ]),\n                          _vm._v(\": \" + _vm._s(fileObj.humanSize))\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      fileObj.sendingTo\n                        ? _c(\n                            \"div\",\n                            { staticClass: \"sharing-details-wrapper\" },\n                            _vm._l(fileObj.sendingTo, function(to) {\n                              return _c(\n                                \"div\",\n                                {\n                                  key: to.userid,\n                                  staticClass: \"sharing-row mt-2\"\n                                },\n                                [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"sharing-details small\" },\n                                    [\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"flex-grow text-muted\" },\n                                        [\n                                          _vm._v(\n                                            \"\\n                                        Sending to: \" +\n                                              _vm._s(to.userid) +\n                                              \"\\n                                    \"\n                                          )\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\"div\", [\n                                        _c(\n                                          \"span\",\n                                          {\n                                            class: [\n                                              \"badge badge-sm badge-pill\",\n                                              {\n                                                \"badge-success\":\n                                                  to.progress.status === \"sent\"\n                                              },\n                                              {\n                                                \"badge-info\":\n                                                  to.progress.status !== \"sent\"\n                                              }\n                                            ]\n                                          },\n                                          [_vm._v(_vm._s(to.progress.status))]\n                                        )\n                                      ])\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\"b-progress\", {\n                                    staticClass: \"mt-2 mb-0\",\n                                    attrs: {\n                                      value: to.progress.percent,\n                                      max: 100\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            }),\n                            0\n                          )\n                        : fileObj.receivingFrom\n                        ? _c(\n                            \"div\",\n                            { staticClass: \"sharing-row mt-2\" },\n                            [\n                              _c(\n                                \"div\",\n                                { staticClass: \"sharing-details small\" },\n                                [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"flex-grow text-muted\" },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                    Receiving From: \" +\n                                          _vm._s(fileObj.receivingFrom) +\n                                          \"\\n                                \"\n                                      )\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\"div\", [\n                                    _c(\n                                      \"span\",\n                                      {\n                                        class: [\n                                          \"badge badge-sm badge-pill\",\n                                          {\n                                            \"badge-success\":\n                                              fileObj.progress.status ===\n                                              \"received\"\n                                          },\n                                          {\n                                            \"badge-info\":\n                                              fileObj.progress.status !==\n                                              \"received\"\n                                          }\n                                        ]\n                                      },\n                                      [_vm._v(_vm._s(fileObj.progress.status))]\n                                    )\n                                  ])\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"b-progress\", {\n                                staticClass: \"mt-2 mb-0\",\n                                attrs: {\n                                  value: fileObj.progress.percent,\n                                  max: 100\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        : _vm._e()\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"status-wrapper\" }, [\n                      !fileObj.receivingFrom ||\n                      fileObj.progress.status === \"received\"\n                        ? _c(\n                            \"a\",\n                            {\n                              staticClass: \"status-action\",\n                              attrs: {\n                                href: fileObj.url,\n                                target: \"_blank\",\n                                download: fileObj.name\n                              }\n                            },\n                            [_vm._m(0, true)]\n                          )\n                        : _vm._e()\n                    ])\n                  ])\n                ]\n              )\n            }),\n            0\n          )\n        : _vm._e()\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"file-uploader-form\" }, [\n      _c(\n        \"div\",\n        { class: [\"file-selector d-flex\", _vm.buttonWrapperClasses] },\n        [\n          _vm.showCloseButton\n            ? _c(\n                \"button\",\n                {\n                  class: [\"btn\", _vm.closeButtonClasses],\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.$emit(\"hide\")\n                    }\n                  }\n                },\n                [\n                  _vm._m(1),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"button-label\" }, [\n                    _vm._v(_vm._s(_vm.$t(_vm.closeButtonLabel)))\n                  ])\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.allowSharing\n            ? [\n                _c(\n                  \"label\",\n                  {\n                    class: [\"btn\", \"btn-\" + _vm.buttonDesign, _vm.buttonClasses]\n                  },\n                  [\n                    _c(\"input\", {\n                      ref: \"filesInput\",\n                      staticClass: \"selector-input\",\n                      attrs: {\n                        name: \"filesInput\",\n                        type: \"file\",\n                        id: \"filesInput\",\n                        multiple: _vm.multiple\n                      },\n                      on: { change: _vm.generateFilesList }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"button-icon\" }, [\n                      _c(\"i\", { class: _vm.buttonIcon })\n                    ]),\n                    _vm._v(\" \"),\n                    !_vm.hideButtonLabel\n                      ? _c(\"span\", { staticClass: \"button-label\" }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.$t(_vm.actionLabel, {\n                                attribute: _vm.$t(_vm.namesLabel)\n                              })\n                            )\n                          )\n                        ])\n                      : _vm._e()\n                  ]\n                )\n              ]\n            : _vm._e()\n        ],\n        2\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", [_c(\"i\", { staticClass: \"fas fa-download\" })])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", { staticClass: \"button-icon\" }, [\n      _c(\"i\", { staticClass: \"fas fa-times\" })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"base-container\",\n    {\n      class: [\n        \"meeting-page\",\n        { \"auto-hide-footer\": _vm.pageConfigs.footerAutoHide && _vm.hasVideos },\n        { pulse: _vm.recording },\n        {\n          \"mirrored-video\":\n            _vm.configs.meeting && _vm.configs.meeting.mirroredVideo\n        }\n      ],\n      attrs: {\n        \"with-loader\": \"\",\n        \"is-loading\": _vm.isLoading,\n        \"loader-color\": _vm.vars.loaderColor,\n        \"overlay-color\": _vm.uiConfigs.pageColorSchemeType,\n        \"loader-size\": \"screen\",\n        \"data-page-background-color\": _vm.uiConfigs.pageBackgroundColor,\n        \"data-card-background-color\": _vm.uiConfigs.pageContainerBackgroundColor\n      }\n    },\n    [\n      !_vm.duplicateTab\n        ? [\n            _c(\n              \"div\",\n              {\n                class: [\"meeting-footer\", { \"has-videos\": _vm.hasVideos }],\n                attrs: {\n                  \"data-footer-background-color\": _vm.uiConfigs.leftSidebarColor\n                }\n              },\n              [\n                _c(\n                  \"div\",\n                  { staticClass: \"logo-wrapper\" },\n                  [\n                    _c(\"app-logo\", {\n                      attrs: { place: \"sidebar\", size: \"sm\", tag: \"span\" }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _vm.entity && _vm.entity.status\n                  ? _c(\n                      \"div\",\n                      { staticClass: \"meeting-actions meeting-actions-center\" },\n                      [\n                        _vm.pageConfigs.showEnableAudioBtn\n                          ? [\n                              _vm.pageConfigs.enableAudio\n                                ? _c(\n                                    \"button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"b-tooltip\",\n                                          rawName: \"v-b-tooltip.hover.d500\",\n                                          modifiers: { hover: true, d500: true }\n                                        }\n                                      ],\n                                      staticClass: \"btn action\",\n                                      attrs: {\n                                        type: \"button\",\n                                        title: _vm.$t(\"meeting.mute_audio\")\n                                      },\n                                      on: {\n                                        click: function($event) {\n                                          _vm.toggleAudio()\n                                          _vm.toggleRecognition()\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass: \"fas fa-microphone\"\n                                      })\n                                    ]\n                                  )\n                                : _c(\n                                    \"button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"b-tooltip\",\n                                          rawName: \"v-b-tooltip.hover.d500\",\n                                          modifiers: { hover: true, d500: true }\n                                        }\n                                      ],\n                                      staticClass: \"btn action disabled-text\",\n                                      attrs: {\n                                        type: \"button\",\n                                        title: _vm.$t(\"meeting.unmute_audio\")\n                                      },\n                                      on: {\n                                        click: function($event) {\n                                          _vm.toggleAudio()\n                                          _vm.toggleRecognition()\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass: \"fas fa-microphone-slash\"\n                                      })\n                                    ]\n                                  )\n                            ]\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.pageConfigs.showEnableVideoBtn\n                          ? [\n                              _vm.pageConfigs.enableVideo\n                                ? _c(\n                                    \"button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"b-tooltip\",\n                                          rawName: \"v-b-tooltip.hover.d500\",\n                                          modifiers: { hover: true, d500: true }\n                                        }\n                                      ],\n                                      staticClass: \"btn action\",\n                                      attrs: {\n                                        type: \"button\",\n                                        title: _vm.$t(\"meeting.mute_video\")\n                                      },\n                                      on: { click: _vm.toggleVideo }\n                                    },\n                                    [_c(\"i\", { staticClass: \"fas fa-video\" })]\n                                  )\n                                : _c(\n                                    \"button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"b-tooltip\",\n                                          rawName: \"v-b-tooltip.hover.d500\",\n                                          modifiers: { hover: true, d500: true }\n                                        }\n                                      ],\n                                      staticClass: \"btn action disabled-text\",\n                                      attrs: {\n                                        type: \"button\",\n                                        title: _vm.$t(\"meeting.unmute_video\")\n                                      },\n                                      on: { click: _vm.toggleVideo }\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass: \"fas fa-video-slash\"\n                                      })\n                                    ]\n                                  )\n                            ]\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.pageConfigs.showDeviceConfig\n                          ? _c(\n                              \"button\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"b-tooltip\",\n                                    rawName: \"v-b-tooltip.hover.d500\",\n                                    modifiers: { hover: true, d500: true }\n                                  }\n                                ],\n                                staticClass:\n                                  \"btn action d-sm-none d-md-inline-block\",\n                                attrs: {\n                                  type: \"button\",\n                                  title: _vm.$t(\"meeting.media_devices.setup\")\n                                },\n                                on: { click: _vm.toggleDevicesModal }\n                              },\n                              [_c(\"i\", { staticClass: \"fas fa-cogs\" })]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.videoList.length\n                          ? [\n                              _vm.pageConfigs.enableFileSharing\n                                ? _c(\n                                    \"button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"b-tooltip\",\n                                          rawName: \"v-b-tooltip.hover.d500\",\n                                          modifiers: { hover: true, d500: true }\n                                        }\n                                      ],\n                                      class: [\n                                        \"btn action d-none d-lg-inline-block\",\n                                        { \"disabled-text\": _vm.showFileSharing }\n                                      ],\n                                      attrs: {\n                                        type: \"button\",\n                                        title: _vm.$t(\"upload.share_files\")\n                                      },\n                                      on: { click: _vm.toggleFileSharing }\n                                    },\n                                    [_c(\"i\", { staticClass: \"fas fa-upload\" })]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _c(\n                                \"button\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"b-tooltip\",\n                                      rawName: \"v-b-tooltip.hover.d500\",\n                                      modifiers: { hover: true, d500: true }\n                                    }\n                                  ],\n                                  staticClass: \"btn action danger-text\",\n                                  attrs: {\n                                    type: \"button\",\n                                    title: _vm.$t(\"meeting.leave_meeting\")\n                                  },\n                                  on: { click: _vm.getOffline }\n                                },\n                                [_c(\"i\", { staticClass: \"fas fa-phone-slash\" })]\n                              ),\n                              _vm._v(\" \"),\n                              _vm.pageConfigs.enableScreenSharing\n                                ? [\n                                    _vm.localScreenStreamid\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"b-tooltip\",\n                                                rawName:\n                                                  \"v-b-tooltip.hover.d500\",\n                                                modifiers: {\n                                                  hover: true,\n                                                  d500: true\n                                                }\n                                              }\n                                            ],\n                                            staticClass:\n                                              \"btn action disabled-text d-none d-lg-inline-block\",\n                                            attrs: {\n                                              type: \"button\",\n                                              title: _vm.$t(\n                                                \"meeting.stop_sharing_screen\"\n                                              )\n                                            },\n                                            on: { click: _vm.stopSharingScreen }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-minus-square\"\n                                            })\n                                          ]\n                                        )\n                                      : _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"b-tooltip\",\n                                                rawName:\n                                                  \"v-b-tooltip.hover.d500\",\n                                                modifiers: {\n                                                  hover: true,\n                                                  d500: true\n                                                }\n                                              }\n                                            ],\n                                            staticClass:\n                                              \"btn action d-none d-lg-inline-block\",\n                                            attrs: {\n                                              type: \"button\",\n                                              title: _vm.$t(\n                                                \"meeting.share_screen\"\n                                              )\n                                            },\n                                            on: { click: _vm.shareScreen }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-desktop\"\n                                            })\n                                          ]\n                                        )\n                                  ]\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.pageConfigs.enableRecording &&\n                              _vm.entity.canModerate\n                                ? [\n                                    _vm.recording\n                                      ? [\n                                          _vm.pageConfigs.enableAutoRecording &&\n                                          !_vm.pageConfigs.canStopAutoRecording\n                                            ? [\n                                                _c(\n                                                  \"button\",\n                                                  {\n                                                    staticClass:\n                                                      \"btn action danger-text d-none d-md-inline-block\",\n                                                    attrs: { type: \"button\" }\n                                                  },\n                                                  [\n                                                    _c(\"i\", {\n                                                      staticClass:\n                                                        \"fas fa-circle\"\n                                                    }),\n                                                    _vm._v(\" \"),\n                                                    _c(\n                                                      \"span\",\n                                                      {\n                                                        staticClass:\n                                                          \"recording_time\"\n                                                      },\n                                                      [\n                                                        _vm._v(\n                                                          _vm._s(\n                                                            _vm.recordingDuration\n                                                          )\n                                                        )\n                                                      ]\n                                                    )\n                                                  ]\n                                                )\n                                              ]\n                                            : [\n                                                _vm.recordingPaused\n                                                  ? _c(\n                                                      \"button\",\n                                                      {\n                                                        directives: [\n                                                          {\n                                                            name: \"b-tooltip\",\n                                                            rawName:\n                                                              \"v-b-tooltip.hover.d500\",\n                                                            modifiers: {\n                                                              hover: true,\n                                                              d500: true\n                                                            }\n                                                          }\n                                                        ],\n                                                        staticClass:\n                                                          \"btn action success-text d-none d-md-inline-block\",\n                                                        attrs: {\n                                                          type: \"button\",\n                                                          title: _vm.$t(\n                                                            \"meeting.resume_recording\"\n                                                          )\n                                                        },\n                                                        on: {\n                                                          click:\n                                                            _vm.resumeRecording\n                                                        }\n                                                      },\n                                                      [\n                                                        _c(\"i\", {\n                                                          staticClass:\n                                                            \"fas fa-circle\"\n                                                        })\n                                                      ]\n                                                    )\n                                                  : _c(\n                                                      \"button\",\n                                                      {\n                                                        directives: [\n                                                          {\n                                                            name: \"b-tooltip\",\n                                                            rawName:\n                                                              \"v-b-tooltip.hover.d500\",\n                                                            modifiers: {\n                                                              hover: true,\n                                                              d500: true\n                                                            }\n                                                          }\n                                                        ],\n                                                        staticClass:\n                                                          \"btn action danger-text d-none d-md-inline-block\",\n                                                        attrs: {\n                                                          type: \"button\",\n                                                          title: _vm.$t(\n                                                            \"meeting.pause_recording\"\n                                                          )\n                                                        },\n                                                        on: {\n                                                          click:\n                                                            _vm.pauseRecording\n                                                        }\n                                                      },\n                                                      [\n                                                        _c(\"i\", {\n                                                          staticClass:\n                                                            \"fas fa-pause\"\n                                                        })\n                                                      ]\n                                                    ),\n                                                _vm._v(\" \"),\n                                                _c(\n                                                  \"button\",\n                                                  {\n                                                    directives: [\n                                                      {\n                                                        name: \"b-tooltip\",\n                                                        rawName:\n                                                          \"v-b-tooltip.hover.d500\",\n                                                        modifiers: {\n                                                          hover: true,\n                                                          d500: true\n                                                        }\n                                                      }\n                                                    ],\n                                                    staticClass:\n                                                      \"btn action danger-text d-none d-md-inline-block\",\n                                                    attrs: {\n                                                      type: \"button\",\n                                                      title: _vm.$t(\n                                                        \"meeting.stop_recording\"\n                                                      )\n                                                    },\n                                                    on: {\n                                                      click: _vm.stopRecording\n                                                    }\n                                                  },\n                                                  [\n                                                    _c(\"i\", {\n                                                      staticClass: \"fas fa-stop\"\n                                                    }),\n                                                    _vm._v(\" \"),\n                                                    _c(\n                                                      \"span\",\n                                                      {\n                                                        staticClass:\n                                                          \"recording_time\"\n                                                      },\n                                                      [\n                                                        _vm._v(\n                                                          _vm._s(\n                                                            _vm.recordingDuration\n                                                          )\n                                                        )\n                                                      ]\n                                                    )\n                                                  ]\n                                                )\n                                              ]\n                                        ]\n                                      : _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"b-tooltip\",\n                                                rawName:\n                                                  \"v-b-tooltip.hover.d500\",\n                                                modifiers: {\n                                                  hover: true,\n                                                  d500: true\n                                                }\n                                              }\n                                            ],\n                                            staticClass:\n                                              \"btn action d-none d-md-inline-block\",\n                                            attrs: {\n                                              type: \"button\",\n                                              title: _vm.$t(\n                                                \"meeting.start_recording\"\n                                              )\n                                            },\n                                            on: { click: _vm.startRecording }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-circle\"\n                                            })\n                                          ]\n                                        )\n                                  ]\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.pageConfigs.enableWhiteboard\n                                ? [\n                                    _vm.showWhiteboard\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"b-tooltip\",\n                                                rawName:\n                                                  \"v-b-tooltip.hover.d500\",\n                                                modifiers: {\n                                                  hover: true,\n                                                  d500: true\n                                                }\n                                              }\n                                            ],\n                                            staticClass:\n                                              \"btn action danger-text d-none d-md-inline-block\",\n                                            attrs: {\n                                              type: \"button\",\n                                              title: _vm.$t(\n                                                \"meeting.hide_whiteboard\"\n                                              )\n                                            },\n                                            on: { click: _vm.toggleWhiteboard }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass:\n                                                \"fas fa-chalkboard-teacher\"\n                                            })\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.showWhiteboard\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"b-tooltip\",\n                                                rawName:\n                                                  \"v-b-tooltip.hover.d500\",\n                                                modifiers: {\n                                                  hover: true,\n                                                  d500: true\n                                                }\n                                              }\n                                            ],\n                                            staticClass:\n                                              \"btn action danger-text d-none d-md-inline-block\",\n                                            attrs: {\n                                              type: \"button\",\n                                              title: _vm.$t(\n                                                \"meeting.clear_hide_whiteboard\"\n                                              )\n                                            },\n                                            on: {\n                                              click:\n                                                _vm.hideAndDestroyWhiteboard\n                                            }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass:\n                                                \"fas fa-chalkboard-teacher mr-0\"\n                                            }),\n                                            _c(\"i\", {\n                                              staticClass:\n                                                \"fas fa-times font-size-xs ml-1 font-size-xs text-danger\"\n                                            })\n                                          ]\n                                        )\n                                      : _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"b-tooltip\",\n                                                rawName:\n                                                  \"v-b-tooltip.hover.d500\",\n                                                modifiers: {\n                                                  hover: true,\n                                                  d500: true\n                                                }\n                                              }\n                                            ],\n                                            staticClass:\n                                              \"btn action d-none d-md-inline-block\",\n                                            attrs: {\n                                              type: \"button\",\n                                              title: _vm.$t(\n                                                \"meeting.show_whiteboard\"\n                                              )\n                                            },\n                                            on: { click: _vm.toggleWhiteboard }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass:\n                                                \"fas fa-chalkboard-teacher\"\n                                            })\n                                          ]\n                                        )\n                                  ]\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.pageConfigs.enableHandGesture\n                                ? [\n                                    _vm.isHandUp\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"b-tooltip\",\n                                                rawName:\n                                                  \"v-b-tooltip.hover.d500\",\n                                                modifiers: {\n                                                  hover: true,\n                                                  d500: true\n                                                }\n                                              }\n                                            ],\n                                            staticClass:\n                                              \"btn action success-text\",\n                                            attrs: {\n                                              type: \"button\",\n                                              title: _vm.$t(\n                                                \"meeting.lower_hand\"\n                                              )\n                                            },\n                                            on: { click: _vm.toggleHandUp }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"far fa-hand-paper\"\n                                            })\n                                          ]\n                                        )\n                                      : _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"b-tooltip\",\n                                                rawName:\n                                                  \"v-b-tooltip.hover.d500\",\n                                                modifiers: {\n                                                  hover: true,\n                                                  d500: true\n                                                }\n                                              }\n                                            ],\n                                            staticClass: \"btn action\",\n                                            attrs: {\n                                              type: \"button\",\n                                              title: _vm.$t(\n                                                \"meeting.raise_hand\"\n                                              )\n                                            },\n                                            on: { click: _vm.toggleHandUp }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-hand-paper\"\n                                            })\n                                          ]\n                                        )\n                                  ]\n                                : _vm._e()\n                            ]\n                          : _vm._e()\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"meeting-actions meeting-actions-right\" },\n                  [\n                    _vm.entity\n                      ? [\n                          _c(\n                            \"base-dropdown\",\n                            {\n                              staticClass: \"more-actions\",\n                              attrs: {\n                                tag: \"div\",\n                                direction: \"up\",\n                                \"menu-classes\": \"show-dropdown-up\",\n                                position: \"right\"\n                              }\n                            },\n                            [\n                              _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn action more-actions-btn\",\n                                  attrs: { slot: \"title\", type: \"button\" },\n                                  slot: \"title\"\n                                },\n                                [_c(\"i\", { staticClass: \"fas fa-globe\" })]\n                              ),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.supportedLanguages, function(\n                                supportedLanguage,\n                                cIndex\n                              ) {\n                                return [\n                                  _c(\n                                    \"button\",\n                                    {\n                                      key: \"suported-language-button-\" + cIndex,\n                                      class: [\n                                        \"dropdown-item\",\n                                        {\n                                          \"text-success\":\n                                            supportedLanguage.value ===\n                                            _vm.currentLanguage\n                                        }\n                                      ],\n                                      attrs: { type: \"button\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.setLanguage(\n                                            supportedLanguage.value\n                                          )\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                \" +\n                                          _vm._s(supportedLanguage.text) +\n                                          \"\\n                            \"\n                                      )\n                                    ]\n                                  )\n                                ]\n                              })\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _vm.recordedFilesToUpload &&\n                          _vm.recordedFilesToUpload.length\n                            ? _c(\n                                \"base-dropdown\",\n                                {\n                                  staticClass:\n                                    \"more-actions d-none d-md-inline-block\",\n                                  attrs: {\n                                    tag: \"div\",\n                                    direction: \"up\",\n                                    size: \"md\",\n                                    \"menu-classes\":\n                                      \"show-dropdown-up p-0 max-height-500px\",\n                                    position: \"right\",\n                                    \"has-scroll\": \"\"\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"button\",\n                                    {\n                                      staticClass:\n                                        \"btn action grid-toggle-btn d-none d-md-inline-block\",\n                                      attrs: { slot: \"title\", type: \"button\" },\n                                      slot: \"title\"\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass: \"fas fa-cloud-upload-alt\"\n                                      })\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"card\",\n                                    {\n                                      staticClass: \"upload-widget\",\n                                      attrs: {\n                                        shadow: \"\",\n                                        \"body-classes\": \"p-0\",\n                                        \"header-classes\": \"p-2\"\n                                      },\n                                      scopedSlots: _vm._u(\n                                        [\n                                          {\n                                            key: \"header\",\n                                            fn: function() {\n                                              return [\n                                                _c(\n                                                  \"h5\",\n                                                  { staticClass: \"m-0 p-1\" },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.$t(\n                                                          \"meeting.meeting_recordings\"\n                                                        )\n                                                      )\n                                                    )\n                                                  ]\n                                                )\n                                              ]\n                                            },\n                                            proxy: true\n                                          }\n                                        ],\n                                        null,\n                                        false,\n                                        2909934337\n                                      )\n                                    },\n                                    [\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"widget-wrapper\" },\n                                        [\n                                          _c(\n                                            \"div\",\n                                            {\n                                              staticClass:\n                                                \"widget-body file-uploader\"\n                                            },\n                                            [\n                                              _c(\n                                                \"div\",\n                                                {\n                                                  staticClass:\n                                                    \"files-list-wrapper\"\n                                                },\n                                                [\n                                                  _c(\n                                                    \"ul\",\n                                                    {\n                                                      staticClass: \"files-list\"\n                                                    },\n                                                    _vm._l(\n                                                      _vm.recordedFilesToUpload,\n                                                      function(fileObj) {\n                                                        return _c(\n                                                          \"li\",\n                                                          {\n                                                            key: fileObj.uuid,\n                                                            staticClass:\n                                                              \"file-details-row\"\n                                                          },\n                                                          [\n                                                            _c(\n                                                              \"div\",\n                                                              {\n                                                                staticClass:\n                                                                  \"file-details\"\n                                                              },\n                                                              [\n                                                                !fileObj.chunk\n                                                                  ? _c(\n                                                                      \"h6\",\n                                                                      {\n                                                                        staticClass:\n                                                                          \"pointer\",\n                                                                        on: {\n                                                                          click: function(\n                                                                            $event\n                                                                          ) {\n                                                                            return fileObj.download(\n                                                                              fileObj.blob\n                                                                            )\n                                                                          }\n                                                                        }\n                                                                      },\n                                                                      [\n                                                                        _vm._v(\n                                                                          _vm._s(\n                                                                            fileObj\n                                                                              .file\n                                                                              .name\n                                                                          )\n                                                                        )\n                                                                      ]\n                                                                    )\n                                                                  : _c(\n                                                                      \"h6\",\n                                                                      {\n                                                                        staticClass:\n                                                                          \"pointer\"\n                                                                      },\n                                                                      [\n                                                                        _vm._v(\n                                                                          _vm._s(\n                                                                            fileObj.name\n                                                                          )\n                                                                        )\n                                                                      ]\n                                                                    ),\n                                                                _vm._v(\" \"),\n                                                                fileObj.error\n                                                                  ? _c(\n                                                                      \"p\",\n                                                                      {\n                                                                        staticClass:\n                                                                          \"text-danger\"\n                                                                      },\n                                                                      [\n                                                                        _vm._v(\n                                                                          \"\\n                                                        \" +\n                                                                            _vm._s(\n                                                                              fileObj.error\n                                                                            ) +\n                                                                            \"\\n                                                    \"\n                                                                        )\n                                                                      ]\n                                                                    )\n                                                                  : [\n                                                                      _c(\n                                                                        \"p\",\n                                                                        {\n                                                                          staticClass:\n                                                                            \"text-muted\"\n                                                                        },\n                                                                        [\n                                                                          _vm._v(\n                                                                            \"\\n                                                            \" +\n                                                                              _vm._s(\n                                                                                fileObj.status\n                                                                              ) +\n                                                                              \"\\n                                                        \"\n                                                                          )\n                                                                        ]\n                                                                      ),\n                                                                      _vm._v(\n                                                                        \" \"\n                                                                      ),\n                                                                      _c(\"p\", [\n                                                                        !fileObj.chunk\n                                                                          ? _c(\n                                                                              \"span\",\n                                                                              [\n                                                                                _c(\n                                                                                  \"span\",\n                                                                                  {\n                                                                                    staticClass:\n                                                                                      \"font-weight-700\"\n                                                                                  },\n                                                                                  [\n                                                                                    _vm._v(\n                                                                                      _vm._s(\n                                                                                        _vm.$t(\n                                                                                          \"upload.size\"\n                                                                                        )\n                                                                                      )\n                                                                                    )\n                                                                                  ]\n                                                                                ),\n                                                                                _vm._v(\n                                                                                  \": \" +\n                                                                                    _vm._s(\n                                                                                      _vm._f(\n                                                                                        \"decimal\"\n                                                                                      )(\n                                                                                        fileObj\n                                                                                          .file\n                                                                                          .size /\n                                                                                          1024,\n                                                                                        0\n                                                                                      )\n                                                                                    ) +\n                                                                                    \" KB\"\n                                                                                )\n                                                                              ]\n                                                                            )\n                                                                          : _vm._e()\n                                                                      ])\n                                                                    ]\n                                                              ],\n                                                              2\n                                                            ),\n                                                            _vm._v(\" \"),\n                                                            _c(\n                                                              \"div\",\n                                                              {\n                                                                class: [\n                                                                  \"status-wrapper\",\n                                                                  {\n                                                                    \"actions-wrapper\":\n                                                                      fileObj.status ===\n                                                                      \"uploaded\"\n                                                                  }\n                                                                ]\n                                                              },\n                                                              [\n                                                                _c(\n                                                                  \"transition\",\n                                                                  {\n                                                                    staticClass:\n                                                                      \"transition-wrapper\",\n                                                                    attrs: {\n                                                                      appear:\n                                                                        \"\",\n                                                                      tag:\n                                                                        \"div\",\n                                                                      name:\n                                                                        \"actions\",\n                                                                      mode:\n                                                                        \"out-in\"\n                                                                    }\n                                                                  },\n                                                                  [\n                                                                    fileObj.status ===\n                                                                    \"uploading\"\n                                                                      ? _c(\n                                                                          \"div\",\n                                                                          {\n                                                                            staticClass:\n                                                                              \"status-uploading-wrapper\"\n                                                                          },\n                                                                          [\n                                                                            !fileObj.chunk\n                                                                              ? _c(\n                                                                                  \"label\",\n                                                                                  {\n                                                                                    staticClass:\n                                                                                      \"status-action\",\n                                                                                    on: {\n                                                                                      click:\n                                                                                        fileObj.cancel\n                                                                                    }\n                                                                                  },\n                                                                                  [\n                                                                                    _vm._v(\n                                                                                      _vm._s(\n                                                                                        _vm.$t(\n                                                                                          \"upload.cancel\"\n                                                                                        )\n                                                                                      )\n                                                                                    )\n                                                                                  ]\n                                                                                )\n                                                                              : _vm._e(),\n                                                                            _vm._v(\n                                                                              \" \"\n                                                                            ),\n                                                                            _c(\n                                                                              \"progress-ring\",\n                                                                              {\n                                                                                attrs: {\n                                                                                  value:\n                                                                                    fileObj.progress,\n                                                                                  \"stroke-color\":\n                                                                                    _vm\n                                                                                      .vars\n                                                                                      .loaderColor,\n                                                                                  radius: 18,\n                                                                                  \"stroke-width\": 2,\n                                                                                  \"percent-size\":\n                                                                                    \"sm\"\n                                                                                }\n                                                                              }\n                                                                            )\n                                                                          ],\n                                                                          1\n                                                                        )\n                                                                      : fileObj.status ===\n                                                                        \"cancelled\"\n                                                                      ? _c(\n                                                                          \"div\",\n                                                                          {\n                                                                            staticClass:\n                                                                              \"status-cancelled-wrapper\"\n                                                                          },\n                                                                          [\n                                                                            _c(\n                                                                              \"label\",\n                                                                              {\n                                                                                staticClass:\n                                                                                  \"status-text text-danger\"\n                                                                              },\n                                                                              [\n                                                                                _vm._v(\n                                                                                  _vm._s(\n                                                                                    _vm.$t(\n                                                                                      \"upload.cancelled\"\n                                                                                    )\n                                                                                  )\n                                                                                )\n                                                                              ]\n                                                                            ),\n                                                                            _vm._v(\n                                                                              \" \"\n                                                                            ),\n                                                                            _c(\n                                                                              \"span\",\n                                                                              {\n                                                                                staticClass:\n                                                                                  \"status-icon text-danger\"\n                                                                              },\n                                                                              [\n                                                                                _c(\n                                                                                  \"i\",\n                                                                                  {\n                                                                                    staticClass:\n                                                                                      \"fas fa-times\"\n                                                                                  }\n                                                                                )\n                                                                              ]\n                                                                            )\n                                                                          ]\n                                                                        )\n                                                                      : fileObj.status ===\n                                                                        \"error\"\n                                                                      ? _c(\n                                                                          \"div\",\n                                                                          {\n                                                                            staticClass:\n                                                                              \"status-error-wrapper\"\n                                                                          },\n                                                                          [\n                                                                            _c(\n                                                                              \"label\",\n                                                                              {\n                                                                                staticClass:\n                                                                                  \"status-text text-danger\"\n                                                                              },\n                                                                              [\n                                                                                _vm._v(\n                                                                                  _vm._s(\n                                                                                    _vm.$t(\n                                                                                      \"upload.error\"\n                                                                                    )\n                                                                                  )\n                                                                                )\n                                                                              ]\n                                                                            ),\n                                                                            _vm._v(\n                                                                              \" \"\n                                                                            ),\n                                                                            _c(\n                                                                              \"span\",\n                                                                              {\n                                                                                staticClass:\n                                                                                  \"status-icon text-danger\"\n                                                                              },\n                                                                              [\n                                                                                _c(\n                                                                                  \"i\",\n                                                                                  {\n                                                                                    staticClass:\n                                                                                      \"fas fa-exclamation-triangle\"\n                                                                                  }\n                                                                                )\n                                                                              ]\n                                                                            )\n                                                                          ]\n                                                                        )\n                                                                      : _vm._e()\n                                                                  ]\n                                                                )\n                                                              ],\n                                                              1\n                                                            )\n                                                          ]\n                                                        )\n                                                      }\n                                                    ),\n                                                    0\n                                                  )\n                                                ]\n                                              )\n                                            ]\n                                          )\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                ],\n                                1\n                              )\n                            : _vm._e(),\n                          _vm._v(\" \"),\n                          _vm.entity.status &&\n                          _vm.videoList.length &&\n                          !(\n                            _vm.pageConfigs.enableWhiteboard &&\n                            _vm.showWhiteboard\n                          )\n                            ? _c(\n                                \"base-dropdown\",\n                                {\n                                  staticClass:\n                                    \"more-actions d-none d-md-inline-block\",\n                                  attrs: {\n                                    tag: \"div\",\n                                    direction: \"up\",\n                                    \"menu-classes\": \"show-dropdown-up\",\n                                    position: \"right\"\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"b-tooltip\",\n                                          rawName: \"v-b-tooltip.hover.d500\",\n                                          modifiers: { hover: true, d500: true }\n                                        }\n                                      ],\n                                      staticClass:\n                                        \"btn action grid-toggle-btn d-none d-md-inline-block\",\n                                      attrs: {\n                                        slot: \"title\",\n                                        type: \"button\",\n                                        title: _vm.$t(\"meeting.change_layout\")\n                                      },\n                                      slot: \"title\"\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass: \"fas fa-th-large\"\n                                      })\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"button\",\n                                    {\n                                      staticClass:\n                                        \"dropdown-item d-flex justify-content-between align-items-center\",\n                                      attrs: { type: \"button\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.toggleLayout(\"grid\")\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(_vm.$t(\"meeting.grid_layout\")) +\n                                          \" \"\n                                      ),\n                                      _c(\"i\", {\n                                        staticClass:\n                                          \"fas fa-check min-width-auto text-light\",\n                                        class: {\n                                          \"text-dark\":\n                                            _vm.pageConfigs.layout === \"grid\"\n                                        }\n                                      })\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"button\",\n                                    {\n                                      staticClass:\n                                        \"dropdown-item d-flex justify-content-between align-items-center\",\n                                      attrs: { type: \"button\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.toggleLayout(\"gallery\")\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.$t(\"meeting.gallery_layout\")\n                                        ) + \" \"\n                                      ),\n                                      _c(\"i\", {\n                                        staticClass:\n                                          \"fas fa-check min-width-auto text-light\",\n                                        class: {\n                                          \"text-dark\":\n                                            _vm.pageConfigs.layout === \"gallery\"\n                                        }\n                                      })\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _vm.pageConfigs.hasAgenda ||\n                                  (_vm.pageConfigs.enableWhiteboard &&\n                                    _vm.showWhiteboard)\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          staticClass:\n                                            \"dropdown-item d-flex justify-content-between align-items-center\",\n                                          attrs: { type: \"button\" },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.toggleLayout(\n                                                \"presentation\"\n                                              )\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.$t(\n                                                \"meeting.presentation_layout\"\n                                              )\n                                            ) + \" \"\n                                          ),\n                                          _c(\"i\", {\n                                            staticClass:\n                                              \"fas fa-check min-width-auto text-light\",\n                                            class: {\n                                              \"text-dark\":\n                                                _vm.pageConfigs.layout ===\n                                                \"presentation\"\n                                            }\n                                          })\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"button\",\n                                    {\n                                      staticClass:\n                                        \"dropdown-item d-flex justify-content-between align-items-center\",\n                                      attrs: { type: \"button\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.toggleLayout(\"fullpage\")\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.$t(\"meeting.fullpage_layout\")\n                                        ) + \" \"\n                                      ),\n                                      _vm.pageConfigs.layout === \"fullpage\"\n                                        ? _c(\"i\", {\n                                            staticClass:\n                                              \"fas fa-check min-width-auto text-light\",\n                                            class: {\n                                              \"text-dark\":\n                                                _vm.pageConfigs.layout ===\n                                                \"fullpage\"\n                                            }\n                                          })\n                                        : _vm._e()\n                                    ]\n                                  )\n                                ]\n                              )\n                            : _vm._e(),\n                          _vm._v(\" \"),\n                          _vm.pageConfigs.enableChat &&\n                          _vm.configs.chat &&\n                          _vm.configs.chat.enabled &&\n                          _vm.subscriptions &&\n                          _vm.subscriptions.userPrivate &&\n                          !_vm.entity.isBlocked\n                            ? _c(\n                                \"button\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"b-tooltip\",\n                                      rawName: \"v-b-tooltip.hover.d500\",\n                                      modifiers: { hover: true, d500: true }\n                                    }\n                                  ],\n                                  class: [\n                                    \"btn action chats-toggle-btn\",\n                                    {\n                                      pulse:\n                                        _vm.totalUnreadMessages &&\n                                        _vm.totalUnreadMessages > 0 &&\n                                        !_vm.isChatBoxShown\n                                    }\n                                  ],\n                                  attrs: {\n                                    type: \"button\",\n                                    title: _vm.$t(\n                                      _vm.isChatBoxShown\n                                        ? \"global.hide\"\n                                        : \"global.show\",\n                                      { attribute: _vm.$t(\"chat.chats\") }\n                                    )\n                                  },\n                                  on: { click: _vm.toggleChatBox }\n                                },\n                                [\n                                  _c(\"i\", {\n                                    class: [\n                                      _vm.isChatBoxShown\n                                        ? \"fas fa-comment-slash\"\n                                        : \"far fa-comment\"\n                                    ]\n                                  }),\n                                  _vm._v(\" \"),\n                                  _vm.totalUnreadMessages &&\n                                  _vm.totalUnreadMessages > 0\n                                    ? _c(\n                                        \"span\",\n                                        {\n                                          staticClass:\n                                            \"text-success unread-count\"\n                                        },\n                                        [\n                                          _vm._v(\n                                            _vm._s(_vm.totalUnreadMessages)\n                                          )\n                                        ]\n                                      )\n                                    : _vm._e()\n                                ]\n                              )\n                            : _vm._e()\n                        ]\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"base-dropdown\",\n                      {\n                        staticClass: \"more-actions\",\n                        attrs: {\n                          tag: \"div\",\n                          direction: \"up\",\n                          \"menu-classes\": \"show-dropdown-up\",\n                          position: \"right\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn action more-actions-btn\",\n                            attrs: { slot: \"title\", type: \"button\" },\n                            slot: \"title\"\n                          },\n                          [_c(\"i\", { staticClass: \"fas fa-ellipsis-v\" })]\n                        ),\n                        _vm._v(\" \"),\n                        !(\n                          _vm.entity &&\n                          _vm.entity.status &&\n                          _vm.videoList.length\n                        )\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item\",\n                                attrs: { type: \"button\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.$router.push({\n                                      name: _vm.fallBackRoute\n                                    })\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-chevron-left\" }),\n                                _vm._v(\" \" + _vm._s(_vm.$t(\"general.back\")))\n                              ]\n                            )\n                          : _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item\",\n                                attrs: { type: \"button\" },\n                                on: { click: _vm.getOffline }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-phone-slash\" }),\n                                _vm._v(\n                                  \" \" + _vm._s(_vm.$t(\"meeting.leave_meeting\"))\n                                )\n                              ]\n                            ),\n                        _vm._v(\" \"),\n                        _vm.entity &&\n                        _vm.entity.status &&\n                        _vm.entity.canModerate &&\n                        _vm.entity.status === \"live\"\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item\",\n                                attrs: { type: \"button\" },\n                                on: { click: _vm.endMeeting }\n                              },\n                              [\n                                _c(\"i\", {\n                                  staticClass: \"fas fa-calendar-times\"\n                                }),\n                                _vm._v(\n                                  \" \" + _vm._s(_vm.$t(\"meeting.end_meeting\"))\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\"div\", {\n                          staticClass: \"dropdown-divider my-1\",\n                          attrs: { role: \"separator\" }\n                        }),\n                        _vm._v(\" \"),\n                        _vm.pageConfigs.hasAgenda\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item agenda-toggle-btn\",\n                                attrs: { type: \"button\" },\n                                on: { click: _vm.toggleAgenda }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-quote-left\" }),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(\n                                      _vm.$t(\n                                        _vm.showAgenda\n                                          ? \"global.hide\"\n                                          : \"global.show\",\n                                        { attribute: _vm.$t(\"general.agenda\") }\n                                      )\n                                    )\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"dropdown-item d-none d-md-block\",\n                            attrs: { type: \"button\" },\n                            on: { click: _vm.toggleFooterAutoHide }\n                          },\n                          [\n                            _c(\"i\", { staticClass: \"fas fa-hourglass-start\" }),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(\n                                  _vm.$t(\n                                    _vm.pageConfigs.footerAutoHide\n                                      ? \"meeting.toggle_autohide_off\"\n                                      : \"meeting.toggle_autohide_on\"\n                                  )\n                                )\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _vm.uiConfigs.fullScreen\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item d-none d-md-block\",\n                                attrs: { type: \"button\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.toggleFullScreen(false)\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-compress\" }),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(\n                                      _vm.$t(\"config.ui.toggle_fullscreen\")\n                                    )\n                                )\n                              ]\n                            )\n                          : _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item d-none d-md-block\",\n                                attrs: { type: \"button\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.toggleFullScreen(true)\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-expand\" }),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(\n                                      _vm.$t(\"config.ui.toggle_fullscreen\")\n                                    )\n                                )\n                              ]\n                            ),\n                        _vm._v(\" \"),\n                        _vm.pageConfigs.enableMeetingInfo &&\n                        _vm.videoList.length\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item\",\n                                attrs: { type: \"button\" },\n                                on: { click: _vm.toggleMeetingInfo }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-info\" }),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(\n                                      _vm.$t(\"meeting.toggle_meeting_info\")\n                                    )\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\"div\", {\n                          staticClass: \"dropdown-divider d-md-none my-1\",\n                          attrs: { role: \"separator\" }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"dropdown-item d-md-none\",\n                            attrs: { type: \"button\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.toggleLayout(\"grid\")\n                              }\n                            }\n                          },\n                          [\n                            _c(\"i\", {\n                              staticClass: \"fas fa-check text-light\",\n                              class: {\n                                \"text-dark\": _vm.pageConfigs.layout === \"grid\"\n                              }\n                            }),\n                            _vm._v(\" \" + _vm._s(_vm.$t(\"meeting.grid_layout\")))\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"dropdown-item d-md-none\",\n                            attrs: { type: \"button\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.toggleLayout(\"fullpage\")\n                              }\n                            }\n                          },\n                          [\n                            _c(\"i\", {\n                              staticClass: \"fas fa-check text-light\",\n                              class: {\n                                \"text-dark\":\n                                  _vm.pageConfigs.layout === \"fullpage\"\n                              }\n                            }),\n                            _vm._v(\n                              \" \" + _vm._s(_vm.$t(\"meeting.fullpage_layout\"))\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"div\", {\n                          staticClass: \"dropdown-divider my-1\",\n                          attrs: { role: \"separator\" }\n                        }),\n                        _vm._v(\" \"),\n                        _vm.pageConfigs.showDeviceConfig\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item show-devices-btn\",\n                                attrs: { type: \"button\" },\n                                on: { click: _vm.toggleDevicesModal }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-cogs\" }),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(\n                                      _vm.$t(\"meeting.media_devices.setup\")\n                                    )\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.entity\n                          ? [\n                              _vm.entity.canModerate\n                                ? _c(\n                                    \"a\",\n                                    {\n                                      staticClass: \"dropdown-item\",\n                                      attrs: {\n                                        target: \"_blank\",\n                                        href: _vm.configPageUrl()\n                                      }\n                                    },\n                                    [\n                                      _c(\"i\", { staticClass: \"fas fa-cog\" }),\n                                      _vm._v(\n                                        \" \" +\n                                          _vm._s(\n                                            _vm.$t(\"global.config\", {\n                                              attribute: _vm.$t(\n                                                \"meeting.meeting\"\n                                              )\n                                            })\n                                          )\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.pageConfigs.enableSnapshot &&\n                              _vm.entity.hasSnapshots\n                                ? _c(\n                                    \"a\",\n                                    {\n                                      staticClass: \"dropdown-item\",\n                                      attrs: {\n                                        target: \"_blank\",\n                                        href: _vm.snapshotsPageUrl()\n                                      }\n                                    },\n                                    [\n                                      _c(\"i\", { staticClass: \"fas fa-image\" }),\n                                      _vm._v(\n                                        \" \" +\n                                          _vm._s(\n                                            _vm.$t(\"global.view\", {\n                                              attribute: _vm.$t(\n                                                \"meeting.snapshots\"\n                                              )\n                                            })\n                                          )\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.pageConfigs.enableRecording &&\n                              (_vm.entity.hasChunkRecordings ||\n                                _vm.entity.hasRecordings)\n                                ? _c(\n                                    \"a\",\n                                    {\n                                      staticClass: \"dropdown-item\",\n                                      attrs: {\n                                        target: \"_blank\",\n                                        href: _vm.recordingsPageUrl()\n                                      }\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass: \"fas fa-photo-video\"\n                                      }),\n                                      _vm._v(\n                                        \" \" +\n                                          _vm._s(\n                                            _vm.$t(\"global.view\", {\n                                              attribute: _vm.$t(\n                                                \"meeting.recordings\"\n                                              )\n                                            })\n                                          )\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ]\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.entity && _vm.entity.status && _vm.videoList.length\n                          ? [\n                              _vm.pageConfigs.enableFileSharing\n                                ? _c(\n                                    \"button\",\n                                    {\n                                      staticClass:\n                                        \"dropdown-item file-sharing-btn\",\n                                      attrs: { type: \"button\" },\n                                      on: { click: _vm.toggleFileSharing }\n                                    },\n                                    [\n                                      _c(\"i\", { staticClass: \"fas fa-upload\" }),\n                                      _vm._v(\n                                        \" \" +\n                                          _vm._s(_vm.$t(\"upload.share_files\"))\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.pageConfigs.enableScreenSharing\n                                ? [\n                                    _vm.localScreenStreamid\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            staticClass:\n                                              \"dropdown-item d-none d-md-block\",\n                                            attrs: { type: \"button\" },\n                                            on: { click: _vm.stopSharingScreen }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-minus-square\"\n                                            }),\n                                            _vm._v(\n                                              \" \" +\n                                                _vm._s(\n                                                  _vm.$t(\n                                                    \"meeting.stop_sharing_screen\"\n                                                  )\n                                                )\n                                            )\n                                          ]\n                                        )\n                                      : _c(\n                                          \"button\",\n                                          {\n                                            staticClass:\n                                              \"dropdown-item d-none d-md-block\",\n                                            attrs: { type: \"button\" },\n                                            on: { click: _vm.shareScreen }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-desktop\"\n                                            }),\n                                            _vm._v(\n                                              \" \" +\n                                                _vm._s(\n                                                  _vm.$t(\"meeting.share_screen\")\n                                                )\n                                            )\n                                          ]\n                                        )\n                                  ]\n                                : _vm._e()\n                            ]\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.pageConfigs.enableLinkSharing\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item\",\n                                attrs: { type: \"button\" },\n                                on: { click: _vm.shareURL }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-share-alt\" }),\n                                _vm._v(\n                                  \" \" + _vm._s(_vm.$t(\"general.share_url\"))\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.pageConfigs.enableLinkSharing && _vm.hasNativeShare\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item\",\n                                attrs: { type: \"button\" },\n                                on: { click: _vm.share }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-share-alt\" }),\n                                _vm._v(\" \" + _vm._s(_vm.$t(\"general.share\")))\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              type: \"button\",\n                              title: _vm.$t(\"meeting.recognize_text_title\")\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.toggleVoiceToText()\n                              }\n                            }\n                          },\n                          [\n                            _c(\"i\", { staticClass: \"fas fa-language\" }),\n                            _vm._v(\n                              \"\\n                        \" +\n                                _vm._s(\n                                  _vm.$t(\n                                    _vm.g_enableV2T || _vm.enableV2T\n                                      ? \"meeting.enable_recognize_text\"\n                                      : \"meeting.disable_recognize_text\"\n                                  )\n                                ) +\n                                \"\\n                    \"\n                            )\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: {\n                              type: \"button\",\n                              title: _vm.$t(\"meeting.recognize_voice_title\")\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.toggleVoiceToVoice()\n                              }\n                            }\n                          },\n                          [\n                            _c(\"i\", { staticClass: \"fas fa-microphone\" }),\n                            _vm._v(\n                              \"\\n                        \" +\n                                _vm._s(\n                                  _vm.$t(\n                                    _vm.g_enableV2V || _vm.enableV2V\n                                      ? \"meeting.enable_recognize_voice\"\n                                      : \"meeting.disable_recognize_voice\"\n                                  )\n                                ) +\n                                \"\\n                    \"\n                            )\n                          ]\n                        )\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"base-dropdown\",\n                      {\n                        staticClass: \"more-actions\",\n                        attrs: {\n                          tag: \"div\",\n                          direction: \"up\",\n                          \"menu-classes\": \"show-dropdown-up\",\n                          position: \"right\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"btn action grid-toggle-btn d-none d-md-inline-block px-1\",\n                            attrs: { slot: \"title\", type: \"button\" },\n                            slot: \"title\"\n                          },\n                          [\n                            _vm.loggedInUser\n                              ? _c(\"user-avatar\", {\n                                  attrs: {\n                                    user: _vm.loggedInUser,\n                                    size: 40,\n                                    color:\n                                      _vm.vars.colors[\n                                        _vm.uiConfigs.topNavbarColor\n                                      ]\n                                  }\n                                })\n                              : _vm._e()\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"h6\", { staticClass: \"dropdown-header\" }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.$t(\"general.greeting\") +\n                                \", \" +\n                                _vm.loggedInUser.name\n                            )\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _vm.loggedInUser\n                          ? _c(\n                              \"router-link\",\n                              {\n                                staticClass: \"dropdown-item\",\n                                attrs: { to: { name: \"appProfileView\" } }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-user\" }),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(_vm.$t(\"user.your_profile\")) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.hasPermission(\"access-config\")\n                          ? _c(\n                              \"router-link\",\n                              {\n                                staticClass: \"dropdown-item\",\n                                attrs: { to: { name: \"appUserPreference\" } }\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-user-cog\" }),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(_vm.$t(\"user.user_preference\")) +\n                                    \"\\n                    \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\n                          \"router-link\",\n                          {\n                            staticClass: \"dropdown-item\",\n                            attrs: { to: { name: \"appUserChangePassword\" } }\n                          },\n                          [\n                            _c(\"i\", { staticClass: \"fas fa-key\" }),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(\n                                  _vm.$t(\"auth.password.change_password\")\n                                ) +\n                                \"\\n                    \"\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  2\n                )\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                class: [\n                  \"agenda-streams-container\",\n                  {\n                    \"has-agenda\":\n                      _vm.pageConfigs.hasAgenda ||\n                      (_vm.hasVideos && _vm.pageConfigs.enableWhiteboard)\n                  },\n                  {\n                    \"agenda-visible\":\n                      _vm.showAgenda || (_vm.hasVideos && _vm.showWhiteboard)\n                  },\n                  {\n                    \"has-cover-image\":\n                      _vm.entity && _vm.entity.cover && _vm.hasVideos\n                  }\n                ],\n                style: _vm.coverPageStyles\n              },\n              [\n                _vm.entity && !_vm.entity.isBlocked\n                  ? [\n                      _vm.pageConfigs.hasAgenda && !_vm.showWhiteboard\n                        ? [\n                            _c(\n                              \"card\",\n                              {\n                                staticClass: \"agenda-container\",\n                                attrs: {\n                                  shadow: \"\",\n                                  \"body-classes\": \"agenda-wrapper\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { staticClass: \"meeting-agenda-container\" },\n                                  [\n                                    _c(\n                                      \"vue-scroll\",\n                                      {\n                                        ref: \"vue-scroll-agenda\",\n                                        attrs: { id: \"vue-scroll-agenda\" }\n                                      },\n                                      [\n                                        _vm.entity\n                                          ? [\n                                              _vm._m(0),\n                                              _vm._v(\" \"),\n                                              _c(\n                                                \"div\",\n                                                {\n                                                  staticClass: \"text-muted mt-3\"\n                                                },\n                                                [\n                                                  _vm._m(1),\n                                                  _vm._v(\" \"),\n                                                  _vm._m(2)\n                                                ]\n                                              ),\n                                              _vm._v(\" \"),\n                                              _c(\"view-paragraph\", {\n                                                staticClass: \"mt-3\",\n                                                attrs: {\n                                                  label: _vm.$t(\n                                                    \"meeting.props.agenda\"\n                                                  ),\n                                                  value: _vm.entity.agenda\n                                                }\n                                              }),\n                                              _vm._v(\" \"),\n                                              _vm.entity.description\n                                                ? _c(\"view-paragraph\", {\n                                                    staticClass: \"mt-3\",\n                                                    attrs: {\n                                                      label: _vm.$t(\n                                                        \"meeting.props.description\"\n                                                      ),\n                                                      value:\n                                                        _vm.entity.description,\n                                                      html: \"\"\n                                                    }\n                                                  })\n                                                : _vm._e(),\n                                              _vm._v(\" \"),\n                                              _vm.entity.attachments\n                                                ? _c(\"view-uploads\", {\n                                                    class: [\n                                                      \"mt-3\",\n                                                      _vm.uiConfigs\n                                                        .colorSchemeType\n                                                    ],\n                                                    attrs: {\n                                                      label: _vm.$t(\n                                                        \"upload.attachments\"\n                                                      ),\n                                                      \"name-label\": _vm.$t(\n                                                        \"upload.attachment\"\n                                                      ),\n                                                      value:\n                                                        _vm.entity.attachments,\n                                                      \"download-button-classes\":\n                                                        \"text-gray\",\n                                                      \"url-prefix\":\n                                                        \"/meetings/\" +\n                                                        _vm.uuid +\n                                                        \"/downloads\"\n                                                    }\n                                                  })\n                                                : _vm._e()\n                                            ]\n                                          : _vm._e()\n                                      ],\n                                      2\n                                    )\n                                  ],\n                                  1\n                                )\n                              ]\n                            )\n                          ]\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _vm.hasVideos &&\n                      _vm.pageConfigs.enableWhiteboard &&\n                      !_vm.showAgenda\n                        ? [\n                            _c(\n                              \"card\",\n                              {\n                                staticClass: \"whiteboard-container\",\n                                attrs: {\n                                  shadow: \"\",\n                                  \"body-classes\": \"whiteboard-wrapper\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  {\n                                    staticClass: \"meeting-whiteboard-container\"\n                                  },\n                                  [\n                                    _c(\n                                      \"vue-scroll\",\n                                      {\n                                        ref: \"vue-scroll-whiteboard\",\n                                        attrs: { id: \"vue-scroll-whiteboard\" }\n                                      },\n                                      [\n                                        _c(\"div\", {\n                                          ref: \"whiteboard\",\n                                          staticClass: \"whiteboard\",\n                                          attrs: { id: \"whiteboard\" }\n                                        })\n                                      ]\n                                    )\n                                  ],\n                                  1\n                                )\n                              ]\n                            )\n                          ]\n                        : _vm._e()\n                    ]\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { class: [\"voice-text\"] },\n                  [\n                    _vm.textResult\n                      ? [\n                          _vm._l(_vm.videoList, function(item) {\n                            return [\n                              _vm.pageConfigs.enableUserAvatar && !item.local\n                                ? _c(\n                                    \"div\",\n                                    {\n                                      staticClass:\n                                        \"text-left align-content-start text-md-left d-flex align-items-center mb-1\"\n                                    },\n                                    [\n                                      _c(\"user-avatar\", {\n                                        staticClass: \"mr-2\",\n                                        attrs: {\n                                          user: item.extra\n                                            ? item.extra\n                                            : { name: item.name },\n                                          size: 40,\n                                          \"has-shadow\": \"\"\n                                        }\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"span\",\n                                        { staticClass: \"text-light\" },\n                                        [_vm._v(_vm._s(_vm.textResult))]\n                                      )\n                                    ],\n                                    1\n                                  )\n                                : _vm._e()\n                            ]\n                          })\n                        ]\n                      : [\n                          _vm._l(_vm.conversations, function(\n                            conversation,\n                            cIndex\n                          ) {\n                            return [\n                              _vm._l(_vm.videoList, function(item, i) {\n                                return [\n                                  conversation.translations[_vm.myLanguage] &&\n                                  conversation.user == item.uuid\n                                    ? [\n                                        _vm.pageConfigs.enableUserAvatar &&\n                                        !item.local\n                                          ? _c(\n                                              \"div\",\n                                              {\n                                                key:\n                                                  \"voice-text-list-\" +\n                                                  cIndex +\n                                                  \"-\" +\n                                                  i,\n                                                staticClass:\n                                                  \"text-left align-content-start text-md-left d-flex align-items-center mb-1\"\n                                              },\n                                              [\n                                                _c(\"user-avatar\", {\n                                                  staticClass: \"mr-2\",\n                                                  attrs: {\n                                                    user: item.extra\n                                                      ? item.extra\n                                                      : { name: item.name },\n                                                    size: 40,\n                                                    \"has-shadow\": \"\"\n                                                  }\n                                                }),\n                                                _vm._v(\" \"),\n                                                _c(\n                                                  \"span\",\n                                                  {\n                                                    key: cIndex,\n                                                    staticClass: \"text-light\"\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        conversation\n                                                          .translations[\n                                                          _vm.myLanguage\n                                                        ]\n                                                      )\n                                                    )\n                                                  ]\n                                                )\n                                              ],\n                                              1\n                                            )\n                                          : _vm._e()\n                                      ]\n                                    : _vm._e()\n                                ]\n                              })\n                            ]\n                          })\n                        ]\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    class: [\n                      \"streams-container\",\n                      _vm.hasVideos\n                        ? \"stream-\" + _vm.pageConfigs.layout + \"-layout\"\n                        : \"\"\n                    ]\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      {\n                        ref: \"videoListEle\",\n                        class: [\"video-list\", _vm.hasVideosClasses]\n                      },\n                      [\n                        _vm.hasVideos\n                          ? [\n                              _vm._l(_vm.videoList, function(item, itemIndex) {\n                                return [\n                                  _c(\n                                    \"div\",\n                                    {\n                                      key: \"\" + item.uuid + item.id,\n                                      class: [\n                                        \"video-item video-card\",\n                                        { maximized: item.maximized },\n                                        { local: item.local },\n                                        { screen: item.screen },\n                                        { whiteboard: item.whiteboard },\n                                        {\n                                          \"fullscreen-item\":\n                                            item.id === _vm.fullScreenItemId\n                                        },\n                                        { \"hand-up\": item.isHandUp },\n                                        { \"user-speaking\": item.speaking },\n                                        { \"audio-muted\": item.audioMuted },\n                                        {\n                                          \"video-muted\":\n                                            item.videoMuted || !item.hasVideo\n                                        },\n                                        { \"no-stream\": !item.status },\n                                        {\n                                          \"disable-mirror\": item.disableMirror\n                                        },\n                                        {\n                                          \"has-full-user-avatar\":\n                                            _vm.pageConfigs.enableUserAvatar &&\n                                            _vm.pageConfigs\n                                              .enableFullUserAvatar &&\n                                            item.extra &&\n                                            (item.extra.cover ||\n                                              item.extra.avatar) &&\n                                            (item.videoMuted || !item.hasVideo)\n                                        }\n                                      ],\n                                      on: {\n                                        dblclick: function($event) {\n                                          return _vm.changeFocus(item)\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"video-wrapper\" },\n                                        [\n                                          _c(\"video\", {\n                                            ref: \"videos\",\n                                            refInFor: true,\n                                            class: [\n                                              {\n                                                \"no-poster\":\n                                                  item.status &&\n                                                  !item.videoMuted\n                                              }\n                                            ],\n                                            attrs: {\n                                              autoplay: \"\",\n                                              playsinline: \"\",\n                                              id: item.id,\n                                              poster: item.status\n                                                ? null\n                                                : \"/images/video/no-stream.jpg\"\n                                            },\n                                            domProps: { muted: item.muted }\n                                          }),\n                                          _vm._v(\" \"),\n                                          _vm.pageConfigs.enableUserAvatar &&\n                                          _vm.pageConfigs\n                                            .enableFullUserAvatar &&\n                                          item.extra &&\n                                          (item.extra.cover ||\n                                            item.extra.avatar) &&\n                                          (item.videoMuted || !item.hasVideo)\n                                            ? _c(\"div\", {\n                                                staticClass: \"full-user-avatar\",\n                                                style:\n                                                  \"background-image: url(\" +\n                                                  (item.extra.cover ||\n                                                    item.extra.avatar) +\n                                                  \")\"\n                                              })\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"div\",\n                                            { staticClass: \"caption\" },\n                                            [\n                                              _vm.pageConfigs\n                                                .enableUserAvatar && !item.local\n                                                ? [\n                                                    _c(\"user-avatar\", {\n                                                      staticClass: \"mr-1\",\n                                                      attrs: {\n                                                        user: item.extra\n                                                          ? item.extra\n                                                          : { name: item.name },\n                                                        size: 40,\n                                                        \"has-shadow\": \"\"\n                                                      }\n                                                    })\n                                                  ]\n                                                : _vm._e(),\n                                              _vm._v(\" \"),\n                                              _c(\n                                                \"h6\",\n                                                [\n                                                  _c(\n                                                    \"span\",\n                                                    {\n                                                      class: [\n                                                        \"text-xs mr-1\",\n                                                        {\n                                                          \"text-success\":\n                                                            item.status\n                                                        },\n                                                        {\n                                                          \"text-danger\": !item.status\n                                                        }\n                                                      ]\n                                                    },\n                                                    [\n                                                      _c(\"i\", {\n                                                        staticClass:\n                                                          \"fas fa-circle\"\n                                                      })\n                                                    ]\n                                                  ),\n                                                  _vm._v(\" \"),\n                                                  item.local\n                                                    ? [\n                                                        _vm._v(\n                                                          \"\\n                                                \" +\n                                                            _vm._s(\n                                                              item.screen\n                                                                ? _vm.$t(\n                                                                    \"meeting.your_screen\"\n                                                                  )\n                                                                : item.whiteboard\n                                                                ? _vm.$t(\n                                                                    \"meeting.your_whiteboard\"\n                                                                  )\n                                                                : _vm.$t(\n                                                                    \"meeting.you\"\n                                                                  )\n                                                            ) +\n                                                            \"\\n                                            \"\n                                                        )\n                                                      ]\n                                                    : [\n                                                        _vm._v(\n                                                          \"\\n                                                \" +\n                                                            _vm._s(\n                                                              item.screen\n                                                                ? \"\" +\n                                                                    item.name +\n                                                                    _vm.$t(\n                                                                      \"meeting.screen\"\n                                                                    )\n                                                                : item.whiteboard\n                                                                ? \"\" +\n                                                                  item.name +\n                                                                  _vm.$t(\n                                                                    \"meeting.whiteboard\"\n                                                                  )\n                                                                : item.name\n                                                            ) +\n                                                            \"\\n                                            \"\n                                                        )\n                                                      ],\n                                                  _vm._v(\" \"),\n                                                  !item.status\n                                                    ? _c(\n                                                        \"span\",\n                                                        {\n                                                          staticClass:\n                                                            \"bracketed text-danger\"\n                                                        },\n                                                        [\n                                                          _vm._v(\n                                                            _vm._s(\n                                                              _vm.$t(\n                                                                \"meeting.left\"\n                                                              )\n                                                            )\n                                                          )\n                                                        ]\n                                                      )\n                                                    : _vm._e()\n                                                ],\n                                                2\n                                              )\n                                            ],\n                                            2\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\"div\", {\n                                            staticClass: \"highlight-border\"\n                                          })\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      !item.local\n                                        ? _c(\n                                            \"div\",\n                                            {\n                                              staticClass:\n                                                \"custom-controls-wrapper\"\n                                            },\n                                            [\n                                              _c(\n                                                \"div\",\n                                                {\n                                                  staticClass: \"custom-controls\"\n                                                },\n                                                [\n                                                  item.extra.isHost\n                                                    ? _c(\n                                                        \"div\",\n                                                        {\n                                                          directives: [\n                                                            {\n                                                              name: \"b-tooltip\",\n                                                              rawName:\n                                                                \"v-b-tooltip.hover.d500\",\n                                                              modifiers: {\n                                                                hover: true,\n                                                                d500: true\n                                                              }\n                                                            }\n                                                          ],\n                                                          staticClass:\n                                                            \"status-icon\",\n                                                          attrs: {\n                                                            title: _vm.$t(\n                                                              \"meeting.host\"\n                                                            )\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\"i\", {\n                                                            staticClass:\n                                                              \"fas fa-user-tie enabled-text\"\n                                                          })\n                                                        ]\n                                                      )\n                                                    : item.extra.canModerate\n                                                    ? _c(\n                                                        \"div\",\n                                                        {\n                                                          directives: [\n                                                            {\n                                                              name: \"b-tooltip\",\n                                                              rawName:\n                                                                \"v-b-tooltip.hover.d500\",\n                                                              modifiers: {\n                                                                hover: true,\n                                                                d500: true\n                                                              }\n                                                            }\n                                                          ],\n                                                          staticClass:\n                                                            \"status-icon\",\n                                                          attrs: {\n                                                            title: _vm.$t(\n                                                              \"meeting.moderator\"\n                                                            )\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\"i\", {\n                                                            staticClass:\n                                                              \"fas fa-user-cog enabled-text\"\n                                                          })\n                                                        ]\n                                                      )\n                                                    : _vm._e(),\n                                                  _vm._v(\" \"),\n                                                  !item.whiteboard &&\n                                                  !item.screen &&\n                                                  item.isHandUp\n                                                    ? _c(\n                                                        \"div\",\n                                                        {\n                                                          staticClass:\n                                                            \"status-icon\"\n                                                        },\n                                                        [\n                                                          _c(\"i\", {\n                                                            staticClass:\n                                                              \"fas fa-hand-paper enabled-text\"\n                                                          })\n                                                        ]\n                                                      )\n                                                    : _vm._e(),\n                                                  _vm._v(\" \"),\n                                                  item.audioMuted\n                                                    ? _c(\n                                                        \"div\",\n                                                        {\n                                                          staticClass:\n                                                            \"status-icon\"\n                                                        },\n                                                        [\n                                                          _c(\"i\", {\n                                                            staticClass:\n                                                              \"fas fa-microphone-slash disabled-text\"\n                                                          })\n                                                        ]\n                                                      )\n                                                    : _vm._e(),\n                                                  _vm._v(\" \"),\n                                                  _vm.pageConfigs.layout ===\n                                                    \"fullpage\" &&\n                                                  !item.maximized\n                                                    ? [\n                                                        _c(\n                                                          \"button\",\n                                                          {\n                                                            directives: [\n                                                              {\n                                                                name:\n                                                                  \"b-tooltip\",\n                                                                rawName:\n                                                                  \"v-b-tooltip.hover.d500\",\n                                                                modifiers: {\n                                                                  hover: true,\n                                                                  d500: true\n                                                                }\n                                                              }\n                                                            ],\n                                                            staticClass:\n                                                              \"controls-btn\",\n                                                            attrs: {\n                                                              title: _vm.$t(\n                                                                \"meeting.mute_for_me\"\n                                                              )\n                                                            },\n                                                            on: {\n                                                              click: function(\n                                                                $event\n                                                              ) {\n                                                                return _vm.toggleRemoteAudio(\n                                                                  item,\n                                                                  itemIndex\n                                                                )\n                                                              }\n                                                            }\n                                                          },\n                                                          [\n                                                            _c(\"i\", {\n                                                              class: [\n                                                                \"fas\",\n                                                                {\n                                                                  \"fa-volume-up enabled-text\":\n                                                                    item.muted\n                                                                },\n                                                                {\n                                                                  \"fa-volume-off disabled-text\": !item.muted\n                                                                }\n                                                              ]\n                                                            })\n                                                          ]\n                                                        ),\n                                                        _vm._v(\" \"),\n                                                        _c(\n                                                          \"button\",\n                                                          {\n                                                            directives: [\n                                                              {\n                                                                name:\n                                                                  \"b-tooltip\",\n                                                                rawName:\n                                                                  \"v-b-tooltip.hover.d500\",\n                                                                modifiers: {\n                                                                  hover: true,\n                                                                  d500: true\n                                                                }\n                                                              }\n                                                            ],\n                                                            staticClass:\n                                                              \"controls-btn\",\n                                                            attrs: {\n                                                              title: _vm.$t(\n                                                                \"meeting.maximize\"\n                                                              )\n                                                            },\n                                                            on: {\n                                                              click: function(\n                                                                $event\n                                                              ) {\n                                                                return _vm.changeFocus(\n                                                                  item\n                                                                )\n                                                              }\n                                                            }\n                                                          },\n                                                          [\n                                                            _c(\"i\", {\n                                                              staticClass:\n                                                                \"fas fa-expand enabled-text\"\n                                                            })\n                                                          ]\n                                                        ),\n                                                        _vm._v(\" \"),\n                                                        _vm.pageConfigs\n                                                          .enableSnapshot &&\n                                                        (_vm.pageConfigs\n                                                          .anyoneCanTakeSnapshot ||\n                                                          _vm.entity\n                                                            .canModerate)\n                                                          ? _c(\n                                                              \"button\",\n                                                              {\n                                                                directives: [\n                                                                  {\n                                                                    name:\n                                                                      \"b-tooltip\",\n                                                                    rawName:\n                                                                      \"v-b-tooltip.hover.d500\",\n                                                                    modifiers: {\n                                                                      hover: true,\n                                                                      d500: true\n                                                                    }\n                                                                  }\n                                                                ],\n                                                                staticClass:\n                                                                  \"controls-btn\",\n                                                                attrs: {\n                                                                  title: _vm.$t(\n                                                                    \"meeting.take_snapshot\"\n                                                                  )\n                                                                },\n                                                                on: {\n                                                                  click: function(\n                                                                    $event\n                                                                  ) {\n                                                                    return _vm.takeSnapshotOfStream(\n                                                                      item,\n                                                                      itemIndex\n                                                                    )\n                                                                  }\n                                                                }\n                                                              },\n                                                              [\n                                                                _c(\"i\", {\n                                                                  staticClass:\n                                                                    \"fas fa-image enabled-text\"\n                                                                })\n                                                              ]\n                                                            )\n                                                          : _vm._e(),\n                                                        _vm._v(\" \"),\n                                                        _vm.entity.canModerate\n                                                          ? [\n                                                              _c(\n                                                                \"button\",\n                                                                {\n                                                                  directives: [\n                                                                    {\n                                                                      name:\n                                                                        \"b-tooltip\",\n                                                                      rawName:\n                                                                        \"v-b-tooltip.hover.d500\",\n                                                                      modifiers: {\n                                                                        hover: true,\n                                                                        d500: true\n                                                                      }\n                                                                    }\n                                                                  ],\n                                                                  staticClass:\n                                                                    \"controls-btn\",\n                                                                  attrs: {\n                                                                    title: _vm.$t(\n                                                                      \"meeting.kick_ban_participant\"\n                                                                    )\n                                                                  },\n                                                                  on: {\n                                                                    click: function(\n                                                                      $event\n                                                                    ) {\n                                                                      return _vm.kickRemoteUser(\n                                                                        item,\n                                                                        itemIndex\n                                                                      )\n                                                                    }\n                                                                  }\n                                                                },\n                                                                [\n                                                                  _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-ban enabled-text\"\n                                                                  })\n                                                                ]\n                                                              ),\n                                                              _vm._v(\" \"),\n                                                              _c(\n                                                                \"button\",\n                                                                {\n                                                                  directives: [\n                                                                    {\n                                                                      name:\n                                                                        \"b-tooltip\",\n                                                                      rawName:\n                                                                        \"v-b-tooltip.hover.d500\",\n                                                                      modifiers: {\n                                                                        hover: true,\n                                                                        d500: true\n                                                                      }\n                                                                    }\n                                                                  ],\n                                                                  staticClass:\n                                                                    \"controls-btn\",\n                                                                  attrs: {\n                                                                    title: _vm.$t(\n                                                                      \"meeting.mute_for_everyone\"\n                                                                    )\n                                                                  },\n                                                                  on: {\n                                                                    click: function(\n                                                                      $event\n                                                                    ) {\n                                                                      return _vm.toggleRemoteAudioSource(\n                                                                        item,\n                                                                        itemIndex\n                                                                      )\n                                                                    }\n                                                                  }\n                                                                },\n                                                                [\n                                                                  _c(\"i\", {\n                                                                    class: [\n                                                                      \"fas\",\n                                                                      {\n                                                                        \"fa-microphone enabled-text\":\n                                                                          item.audioMuted\n                                                                      },\n                                                                      {\n                                                                        \"fa-microphone-slash disabled-text\": !item.audioMuted\n                                                                      }\n                                                                    ]\n                                                                  })\n                                                                ]\n                                                              )\n                                                            ]\n                                                          : _vm._e()\n                                                      ]\n                                                    : _c(\n                                                        \"base-dropdown\",\n                                                        {\n                                                          staticClass:\n                                                            \"custom-control-dropdown\",\n                                                          attrs: {\n                                                            tag: \"div\",\n                                                            position: \"right\"\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\n                                                            \"button\",\n                                                            {\n                                                              staticClass:\n                                                                \"btn action custom-control-dropdown-btn btn-sm\",\n                                                              attrs: {\n                                                                slot: \"title\",\n                                                                type: \"button\"\n                                                              },\n                                                              slot: \"title\"\n                                                            },\n                                                            [\n                                                              _c(\"i\", {\n                                                                staticClass:\n                                                                  \"fas fa-ellipsis-v\"\n                                                              })\n                                                            ]\n                                                          ),\n                                                          _vm._v(\" \"),\n                                                          _c(\n                                                            \"button\",\n                                                            {\n                                                              staticClass:\n                                                                \"dropdown-item btn-sm\",\n                                                              attrs: {\n                                                                type: \"button\"\n                                                              },\n                                                              on: {\n                                                                click: function(\n                                                                  $event\n                                                                ) {\n                                                                  return _vm.disableMirror(\n                                                                    item,\n                                                                    itemIndex\n                                                                  )\n                                                                }\n                                                              }\n                                                            },\n                                                            [\n                                                              _c(\"i\", {\n                                                                staticClass:\n                                                                  \"fas fa-exchange-alt enabled-text\"\n                                                              }),\n                                                              _vm._v(\n                                                                \" \" +\n                                                                  _vm._s(\n                                                                    _vm.$t(\n                                                                      \"meeting.mirror_flip\"\n                                                                    )\n                                                                  ) +\n                                                                  \"\\n                                            \"\n                                                              )\n                                                            ]\n                                                          ),\n                                                          _vm._v(\" \"),\n                                                          _vm.pageConfigs\n                                                            .layout ===\n                                                            \"fullpage\" &&\n                                                          !item.maximized\n                                                            ? _c(\n                                                                \"button\",\n                                                                {\n                                                                  staticClass:\n                                                                    \"dropdown-item btn-sm\",\n                                                                  attrs: {\n                                                                    type:\n                                                                      \"button\"\n                                                                  },\n                                                                  on: {\n                                                                    click: function(\n                                                                      $event\n                                                                    ) {\n                                                                      return _vm.changeFocus(\n                                                                        item\n                                                                      )\n                                                                    }\n                                                                  }\n                                                                },\n                                                                [\n                                                                  _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-expand enabled-text\"\n                                                                  }),\n                                                                  _vm._v(\n                                                                    \" \" +\n                                                                      _vm._s(\n                                                                        _vm.$t(\n                                                                          \"meeting.maximize\"\n                                                                        )\n                                                                      ) +\n                                                                      \"\\n                                            \"\n                                                                  )\n                                                                ]\n                                                              )\n                                                            : _vm._e(),\n                                                          _vm._v(\" \"),\n                                                          _c(\n                                                            \"button\",\n                                                            {\n                                                              staticClass:\n                                                                \"dropdown-item btn-sm\",\n                                                              attrs: {\n                                                                type: \"button\"\n                                                              },\n                                                              on: {\n                                                                click: function(\n                                                                  $event\n                                                                ) {\n                                                                  return _vm.toggleRemoteAudio(\n                                                                    item,\n                                                                    itemIndex\n                                                                  )\n                                                                }\n                                                              }\n                                                            },\n                                                            [\n                                                              item.muted\n                                                                ? [\n                                                                    _c(\"i\", {\n                                                                      staticClass:\n                                                                        \"fas fa-volume-up enabled-text\"\n                                                                    }),\n                                                                    _vm._v(\n                                                                      \" \" +\n                                                                        _vm._s(\n                                                                          _vm.$t(\n                                                                            \"meeting.unmute_for_me\"\n                                                                          )\n                                                                        ) +\n                                                                        \"\\n                                                \"\n                                                                    )\n                                                                  ]\n                                                                : [\n                                                                    _c(\"i\", {\n                                                                      staticClass:\n                                                                        \"fas fa-volume-off disabled-text\"\n                                                                    }),\n                                                                    _vm._v(\n                                                                      \" \" +\n                                                                        _vm._s(\n                                                                          _vm.$t(\n                                                                            \"meeting.mute_for_me\"\n                                                                          )\n                                                                        ) +\n                                                                        \"\\n                                                \"\n                                                                    )\n                                                                  ]\n                                                            ],\n                                                            2\n                                                          ),\n                                                          _vm._v(\" \"),\n                                                          _vm.pageConfigs\n                                                            .enableSnapshot &&\n                                                          (_vm.pageConfigs\n                                                            .anyoneCanTakeSnapshot ||\n                                                            _vm.entity\n                                                              .canModerate)\n                                                            ? _c(\n                                                                \"button\",\n                                                                {\n                                                                  staticClass:\n                                                                    \"dropdown-item btn-sm\",\n                                                                  attrs: {\n                                                                    type:\n                                                                      \"button\"\n                                                                  },\n                                                                  on: {\n                                                                    click: function(\n                                                                      $event\n                                                                    ) {\n                                                                      return _vm.takeSnapshotOfStream(\n                                                                        item,\n                                                                        itemIndex\n                                                                      )\n                                                                    }\n                                                                  }\n                                                                },\n                                                                [\n                                                                  _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-image enabled-text\"\n                                                                  }),\n                                                                  _vm._v(\n                                                                    \" \" +\n                                                                      _vm._s(\n                                                                        _vm.$t(\n                                                                          \"meeting.take_snapshot\"\n                                                                        )\n                                                                      ) +\n                                                                      \"\\n                                            \"\n                                                                  )\n                                                                ]\n                                                              )\n                                                            : _vm._e(),\n                                                          _vm._v(\" \"),\n                                                          _vm.entity.canModerate\n                                                            ? [\n                                                                _c(\n                                                                  \"button\",\n                                                                  {\n                                                                    staticClass:\n                                                                      \"dropdown-item btn-sm\",\n                                                                    attrs: {\n                                                                      type:\n                                                                        \"button\"\n                                                                    },\n                                                                    on: {\n                                                                      click: function(\n                                                                        $event\n                                                                      ) {\n                                                                        return _vm.kickRemoteUser(\n                                                                          item,\n                                                                          itemIndex\n                                                                        )\n                                                                      }\n                                                                    }\n                                                                  },\n                                                                  [\n                                                                    _c(\"i\", {\n                                                                      staticClass:\n                                                                        \"fas fa-ban enabled-text\"\n                                                                    }),\n                                                                    _vm._v(\n                                                                      \" \" +\n                                                                        _vm._s(\n                                                                          _vm.$t(\n                                                                            \"meeting.kick_ban\"\n                                                                          )\n                                                                        ) +\n                                                                        \"\\n                                                \"\n                                                                    )\n                                                                  ]\n                                                                ),\n                                                                _vm._v(\" \"),\n                                                                _c(\n                                                                  \"button\",\n                                                                  {\n                                                                    staticClass:\n                                                                      \"dropdown-item btn-sm\",\n                                                                    attrs: {\n                                                                      type:\n                                                                        \"button\"\n                                                                    },\n                                                                    on: {\n                                                                      click: function(\n                                                                        $event\n                                                                      ) {\n                                                                        return _vm.toggleRemoteAudioSource(\n                                                                          item,\n                                                                          itemIndex\n                                                                        )\n                                                                      }\n                                                                    }\n                                                                  },\n                                                                  [\n                                                                    item.audioMuted\n                                                                      ? [\n                                                                          _c(\n                                                                            \"i\",\n                                                                            {\n                                                                              staticClass:\n                                                                                \"fas fa-microphone enabled-text\"\n                                                                            }\n                                                                          ),\n                                                                          _vm._v(\n                                                                            \" \" +\n                                                                              _vm._s(\n                                                                                _vm.$t(\n                                                                                  \"meeting.unmute_for_everyone\"\n                                                                                )\n                                                                              ) +\n                                                                              \"\\n                                                    \"\n                                                                          )\n                                                                        ]\n                                                                      : [\n                                                                          _c(\n                                                                            \"i\",\n                                                                            {\n                                                                              staticClass:\n                                                                                \"fas fa-microphone-slash disabled-text\"\n                                                                            }\n                                                                          ),\n                                                                          _vm._v(\n                                                                            \" \" +\n                                                                              _vm._s(\n                                                                                _vm.$t(\n                                                                                  \"meeting.mute_for_everyone\"\n                                                                                )\n                                                                              ) +\n                                                                              \"\\n                                                    \"\n                                                                          )\n                                                                        ]\n                                                                  ],\n                                                                  2\n                                                                )\n                                                              ]\n                                                            : _vm._e()\n                                                        ],\n                                                        2\n                                                      )\n                                                ],\n                                                2\n                                              )\n                                            ]\n                                          )\n                                        : item.local\n                                        ? _c(\n                                            \"div\",\n                                            {\n                                              staticClass:\n                                                \"custom-controls-wrapper\"\n                                            },\n                                            [\n                                              _c(\n                                                \"div\",\n                                                {\n                                                  staticClass: \"custom-controls\"\n                                                },\n                                                [\n                                                  item.extra.isHost\n                                                    ? _c(\n                                                        \"div\",\n                                                        {\n                                                          directives: [\n                                                            {\n                                                              name: \"b-tooltip\",\n                                                              rawName:\n                                                                \"v-b-tooltip.hover.d500\",\n                                                              modifiers: {\n                                                                hover: true,\n                                                                d500: true\n                                                              }\n                                                            }\n                                                          ],\n                                                          staticClass:\n                                                            \"status-icon\",\n                                                          attrs: {\n                                                            title: _vm.$t(\n                                                              \"meeting.host\"\n                                                            )\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\"i\", {\n                                                            staticClass:\n                                                              \"fas fa-user-tie text-info\"\n                                                          })\n                                                        ]\n                                                      )\n                                                    : item.extra.canModerate\n                                                    ? _c(\n                                                        \"div\",\n                                                        {\n                                                          directives: [\n                                                            {\n                                                              name: \"b-tooltip\",\n                                                              rawName:\n                                                                \"v-b-tooltip.hover.d500\",\n                                                              modifiers: {\n                                                                hover: true,\n                                                                d500: true\n                                                              }\n                                                            }\n                                                          ],\n                                                          staticClass:\n                                                            \"status-icon\",\n                                                          attrs: {\n                                                            title: _vm.$t(\n                                                              \"meeting.moderator\"\n                                                            )\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\"i\", {\n                                                            staticClass:\n                                                              \"fas fa-user-cog text-info\"\n                                                          })\n                                                        ]\n                                                      )\n                                                    : _vm._e(),\n                                                  _vm._v(\" \"),\n                                                  _c(\n                                                    \"button\",\n                                                    {\n                                                      directives: [\n                                                        {\n                                                          name: \"b-tooltip\",\n                                                          rawName:\n                                                            \"v-b-tooltip.hover.d500\",\n                                                          modifiers: {\n                                                            hover: true,\n                                                            d500: true\n                                                          }\n                                                        }\n                                                      ],\n                                                      staticClass:\n                                                        \"controls-btn\",\n                                                      attrs: {\n                                                        title: _vm.$t(\n                                                          \"meeting.maximize\"\n                                                        )\n                                                      },\n                                                      on: {\n                                                        click: function(\n                                                          $event\n                                                        ) {\n                                                          return _vm.changeFocus(\n                                                            item\n                                                          )\n                                                        }\n                                                      }\n                                                    },\n                                                    [\n                                                      _c(\"i\", {\n                                                        staticClass:\n                                                          \"fas fa-expand enabled-text\"\n                                                      })\n                                                    ]\n                                                  ),\n                                                  _vm._v(\" \"),\n                                                  item.isHandUp\n                                                    ? _c(\n                                                        \"div\",\n                                                        {\n                                                          staticClass:\n                                                            \"status-icon\"\n                                                        },\n                                                        [\n                                                          _c(\"i\", {\n                                                            staticClass:\n                                                              \"fas fa-hand-paper enabled-text\"\n                                                          })\n                                                        ]\n                                                      )\n                                                    : _vm._e(),\n                                                  _vm._v(\" \"),\n                                                  _vm.pageConfigs\n                                                    .enableSnapshot &&\n                                                  (_vm.pageConfigs\n                                                    .anyoneCanTakeSnapshot ||\n                                                    _vm.entity.canModerate)\n                                                    ? _c(\n                                                        \"button\",\n                                                        {\n                                                          directives: [\n                                                            {\n                                                              name: \"b-tooltip\",\n                                                              rawName:\n                                                                \"v-b-tooltip.hover.d500\",\n                                                              modifiers: {\n                                                                hover: true,\n                                                                d500: true\n                                                              }\n                                                            }\n                                                          ],\n                                                          staticClass:\n                                                            \"controls-btn\",\n                                                          attrs: {\n                                                            title: _vm.$t(\n                                                              \"meeting.take_snapshot\"\n                                                            )\n                                                          },\n                                                          on: {\n                                                            click: function(\n                                                              $event\n                                                            ) {\n                                                              return _vm.takeSnapshotOfStream(\n                                                                item,\n                                                                itemIndex\n                                                              )\n                                                            }\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\"i\", {\n                                                            staticClass:\n                                                              \"fas fa-image enabled-text\"\n                                                          })\n                                                        ]\n                                                      )\n                                                    : _vm._e()\n                                                ]\n                                              )\n                                            ]\n                                          )\n                                        : _vm._e()\n                                    ]\n                                  )\n                                ]\n                              })\n                            ]\n                          : _c(\n                              \"card\",\n                              {\n                                staticClass: \"video-item wait-box maximized\",\n                                attrs: { shadow: \"\" }\n                              },\n                              [\n                                _vm.entity && !_vm.entity.isBlocked\n                                  ? [\n                                      _vm.entity.status === \"scheduled\" ||\n                                      _vm.entity.status === \"live\"\n                                        ? [\n                                            _c(\n                                              \"div\",\n                                              {\n                                                staticClass:\n                                                  \"green-room text-center mt-3\"\n                                              },\n                                              [\n                                                _c(\"video\", {\n                                                  ref: \"greenRoomVideo\",\n                                                  attrs: {\n                                                    autoplay: \"\",\n                                                    playsinline: \"\",\n                                                    muted: \"\",\n                                                    id: \"greenRoomVideo\"\n                                                  },\n                                                  domProps: { muted: true }\n                                                }),\n                                                _vm._v(\" \"),\n                                                _c(\"br\"),\n                                                _vm._v(\" \"),\n                                                _c(\n                                                  \"canvas\",\n                                                  {\n                                                    ref: \"greenRoomAudio\",\n                                                    staticStyle: {\n                                                      margin: \"0 auto\"\n                                                    },\n                                                    attrs: {\n                                                      id: \"greenRoomAudio\",\n                                                      width: \"250\",\n                                                      height: \"15\",\n                                                      \"data-val\":\n                                                        _vm.micVolumeActivity\n                                                    }\n                                                  },\n                                                  [_vm._v(\"No canvas\")]\n                                                )\n                                              ]\n                                            )\n                                          ]\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      _vm.entity.status === \"scheduled\"\n                                        ? [\n                                            _vm.startDateTimeIsFuture\n                                              ? _c(\"flip-countdown\", {\n                                                  staticClass: \"my-3\",\n                                                  attrs: {\n                                                    deadline:\n                                                      _vm.entity.startDateTime\n                                                  }\n                                                })\n                                              : [\n                                                  _vm.entity.canModerate\n                                                    ? [\n                                                        _c(\n                                                          \"h5\",\n                                                          {\n                                                            staticClass:\n                                                              \"text-muted text-center my-3\"\n                                                          },\n                                                          [\n                                                            _vm._v(\n                                                              \"\\n                                            \" +\n                                                                _vm._s(\n                                                                  _vm.$t(\n                                                                    \"meeting.waiting_for_you_to_start\"\n                                                                  )\n                                                                ) +\n                                                                \"\\n                                        \"\n                                                            )\n                                                          ]\n                                                        ),\n                                                        _vm._v(\" \"),\n                                                        _c(\n                                                          \"div\",\n                                                          {\n                                                            staticClass:\n                                                              \"d-flex justify-content-center flex-wrap my-3\"\n                                                          },\n                                                          [\n                                                            _c(\n                                                              \"base-button\",\n                                                              {\n                                                                attrs: {\n                                                                  type:\n                                                                    \"button\",\n                                                                  design:\n                                                                    \"primary\",\n                                                                  size: \"lg\"\n                                                                },\n                                                                on: {\n                                                                  click:\n                                                                    _vm.getOnline\n                                                                }\n                                                              },\n                                                              [\n                                                                _vm._v(\n                                                                  _vm._s(\n                                                                    _vm.$t(\n                                                                      \"global.click_to\",\n                                                                      {\n                                                                        attribute: _vm.$t(\n                                                                          \"meeting.get_live\"\n                                                                        )\n                                                                      }\n                                                                    )\n                                                                  )\n                                                                )\n                                                              ]\n                                                            ),\n                                                            _vm._v(\" \"),\n                                                            !_vm.isLoading\n                                                              ? _c(\n                                                                  \"base-button\",\n                                                                  {\n                                                                    attrs: {\n                                                                      type:\n                                                                        \"button\",\n                                                                      design:\n                                                                        \"light\",\n                                                                      size: \"lg\"\n                                                                    },\n                                                                    on: {\n                                                                      click: function(\n                                                                        $event\n                                                                      ) {\n                                                                        return _vm.$router.push(\n                                                                          {\n                                                                            name:\n                                                                              _vm.fallBackRoute\n                                                                          }\n                                                                        )\n                                                                      }\n                                                                    }\n                                                                  },\n                                                                  [\n                                                                    _vm._v(\n                                                                      _vm._s(\n                                                                        _vm.$t(\n                                                                          \"global.click_to\",\n                                                                          {\n                                                                            attribute: _vm.$t(\n                                                                              \"general.go_back\"\n                                                                            )\n                                                                          }\n                                                                        )\n                                                                      )\n                                                                    )\n                                                                  ]\n                                                                )\n                                                              : _vm._e()\n                                                          ],\n                                                          1\n                                                        )\n                                                      ]\n                                                    : [\n                                                        _c(\n                                                          \"h5\",\n                                                          {\n                                                            staticClass:\n                                                              \"text-muted text-center my-3\"\n                                                          },\n                                                          [\n                                                            _vm._v(\n                                                              \"\\n                                            \" +\n                                                                _vm._s(\n                                                                  _vm.$t(\n                                                                    \"meeting.starting_any_time_now\"\n                                                                  )\n                                                                ) +\n                                                                \"\\n                                        \"\n                                                            )\n                                                          ]\n                                                        ),\n                                                        _vm._v(\" \"),\n                                                        !_vm.isLoading\n                                                          ? _c(\n                                                              \"div\",\n                                                              {\n                                                                staticClass:\n                                                                  \"d-flex justify-content-center\"\n                                                              },\n                                                              [\n                                                                _c(\n                                                                  \"base-button\",\n                                                                  {\n                                                                    attrs: {\n                                                                      type:\n                                                                        \"button\",\n                                                                      design:\n                                                                        \"light\",\n                                                                      size: \"lg\"\n                                                                    },\n                                                                    on: {\n                                                                      click: function(\n                                                                        $event\n                                                                      ) {\n                                                                        return _vm.$router.push(\n                                                                          {\n                                                                            name:\n                                                                              _vm.fallBackRoute\n                                                                          }\n                                                                        )\n                                                                      }\n                                                                    }\n                                                                  },\n                                                                  [\n                                                                    _vm._v(\n                                                                      _vm._s(\n                                                                        _vm.$t(\n                                                                          \"global.click_to\",\n                                                                          {\n                                                                            attribute: _vm.$t(\n                                                                              \"general.go_back\"\n                                                                            )\n                                                                          }\n                                                                        )\n                                                                      )\n                                                                    )\n                                                                  ]\n                                                                )\n                                                              ],\n                                                              1\n                                                            )\n                                                          : _vm._e()\n                                                      ]\n                                                ],\n                                            _vm._v(\" \"),\n                                            _c(\n                                              \"div\",\n                                              {\n                                                staticClass: \"text-center my-3\"\n                                              },\n                                              [\n                                                _c(\n                                                  \"span\",\n                                                  { staticClass: \"text-muted\" },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.$t(\n                                                          \"meeting.scheduled_for\"\n                                                        )\n                                                      )\n                                                    )\n                                                  ]\n                                                ),\n                                                _c(\n                                                  \"span\",\n                                                  {\n                                                    directives: [\n                                                      {\n                                                        name: \"b-tooltip\",\n                                                        rawName:\n                                                          \"v-b-tooltip.hover.d500\",\n                                                        modifiers: {\n                                                          hover: true,\n                                                          d500: true\n                                                        }\n                                                      }\n                                                    ],\n                                                    staticClass:\n                                                      \"text-muted-lg m-l-5\",\n                                                    attrs: {\n                                                      title: _vm._f(\n                                                        \"momentDateTime\"\n                                                      )(\n                                                        _vm.entity.startDateTime\n                                                      )\n                                                    }\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm._f(\n                                                          \"momentCalendar\"\n                                                        )(\n                                                          _vm.entity\n                                                            .startDateTime,\n                                                          {\n                                                            sameElse:\n                                                              _vm.vars\n                                                                .defaultDateTimeFormat\n                                                          }\n                                                        )\n                                                      )\n                                                    )\n                                                  ]\n                                                )\n                                              ]\n                                            ),\n                                            _vm._v(\" \"),\n                                            _vm.liveMembersCount > 0\n                                              ? _c(\n                                                  \"div\",\n                                                  {\n                                                    staticClass:\n                                                      \"text-muted text-center my-3\"\n                                                  },\n                                                  [\n                                                    _c(\n                                                      \"span\",\n                                                      {\n                                                        staticClass:\n                                                          \"text-xs text-success mr-1\"\n                                                      },\n                                                      [\n                                                        _c(\"i\", {\n                                                          staticClass:\n                                                            \"fas fa-circle\"\n                                                        })\n                                                      ]\n                                                    ),\n                                                    _vm._v(\" \"),\n                                                    _c(\"animated-number\", {\n                                                      attrs: {\n                                                        number:\n                                                          _vm.liveMembersCount,\n                                                        delay: 100\n                                                      }\n                                                    }),\n                                                    _vm._v(\" \"),\n                                                    _vm.liveMembersCount > 1\n                                                      ? _c(\"span\", [\n                                                          _vm._v(\n                                                            _vm._s(\n                                                              _vm.$t(\n                                                                \"meeting.members_online\"\n                                                              )\n                                                            )\n                                                          )\n                                                        ])\n                                                      : _c(\"span\", [\n                                                          _vm._v(\n                                                            _vm._s(\n                                                              _vm.$t(\n                                                                \"meeting.member_online\"\n                                                              )\n                                                            )\n                                                          )\n                                                        ])\n                                                  ],\n                                                  1\n                                                )\n                                              : _vm._e(),\n                                            _vm._v(\" \"),\n                                            _vm.entity.canModerate\n                                              ? [\n                                                  _c(\n                                                    \"div\",\n                                                    {\n                                                      staticClass:\n                                                        \"d-flex justify-content-center my-3\"\n                                                    },\n                                                    [\n                                                      _c(\n                                                        \"base-button\",\n                                                        {\n                                                          attrs: {\n                                                            type: \"button\",\n                                                            design:\n                                                              \"gray-darker\",\n                                                            size: \"sm\"\n                                                          },\n                                                          on: {\n                                                            click:\n                                                              _vm.cancelMeeting\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\"i\", {\n                                                            staticClass:\n                                                              \"fas fa-times m-r-5\"\n                                                          }),\n                                                          _vm._v(\n                                                            \" \" +\n                                                              _vm._s(\n                                                                _vm.$t(\n                                                                  \"meeting.cancel\"\n                                                                )\n                                                              )\n                                                          )\n                                                        ]\n                                                      ),\n                                                      _vm._v(\" \"),\n                                                      _c(\n                                                        \"base-dropdown\",\n                                                        {\n                                                          attrs: {\n                                                            tag: \"div\",\n                                                            size: \"sm\",\n                                                            direction: \"up\"\n                                                          }\n                                                        },\n                                                        [\n                                                          _c(\n                                                            \"base-button\",\n                                                            {\n                                                              attrs: {\n                                                                slot: \"title\",\n                                                                type: \"button\",\n                                                                design:\n                                                                  \"gray-darker\",\n                                                                size: \"sm\",\n                                                                \"data-toggle\":\n                                                                  \"dropdown\",\n                                                                role: \"button\"\n                                                              },\n                                                              slot: \"title\"\n                                                            },\n                                                            [\n                                                              _c(\"i\", {\n                                                                staticClass:\n                                                                  \"far fa-clock m-r-5\"\n                                                              }),\n                                                              _vm._v(\" \"),\n                                                              _c(\n                                                                \"span\",\n                                                                {\n                                                                  staticClass:\n                                                                    \"nav-link-inner--text\"\n                                                                },\n                                                                [\n                                                                  _vm._v(\n                                                                    _vm._s(\n                                                                      _vm.$t(\n                                                                        \"meeting.snooze\"\n                                                                      )\n                                                                    )\n                                                                  )\n                                                                ]\n                                                              ),\n                                                              _vm._v(\" \"),\n                                                              _c(\"i\", {\n                                                                staticClass:\n                                                                  \"fas fa-chevron-up m-l-5\"\n                                                              })\n                                                            ]\n                                                          ),\n                                                          _vm._v(\" \"),\n                                                          _vm._l(\n                                                            _vm.snoozeOpts,\n                                                            function(opt) {\n                                                              return _c(\n                                                                \"button\",\n                                                                {\n                                                                  key: opt.uuid,\n                                                                  staticClass:\n                                                                    \"dropdown-item\",\n                                                                  attrs: {\n                                                                    type:\n                                                                      \"button\"\n                                                                  },\n                                                                  on: {\n                                                                    click: function(\n                                                                      $event\n                                                                    ) {\n                                                                      return _vm.snoozeMeeting(\n                                                                        opt.uuid\n                                                                      )\n                                                                    }\n                                                                  }\n                                                                },\n                                                                [\n                                                                  _vm._v(\n                                                                    _vm._s(\n                                                                      opt.name\n                                                                    ) +\n                                                                      \" \" +\n                                                                      _vm._s(\n                                                                        _vm.$t(\n                                                                          \"list.general.durations.\" +\n                                                                            opt.type\n                                                                        )\n                                                                      )\n                                                                  )\n                                                                ]\n                                                              )\n                                                            }\n                                                          )\n                                                        ],\n                                                        2\n                                                      )\n                                                    ],\n                                                    1\n                                                  )\n                                                ]\n                                              : _vm._e()\n                                          ]\n                                        : _vm.entity.status === \"live\"\n                                        ? [\n                                            _vm.roomIdAlive\n                                              ? [\n                                                  _c(\n                                                    \"h5\",\n                                                    {\n                                                      staticClass:\n                                                        \"text-muted text-center my-3\"\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        \"\\n                                        \" +\n                                                          _vm._s(\n                                                            _vm.$t(\n                                                              \"meeting.is_live_now\"\n                                                            )\n                                                          ) +\n                                                          \"\\n                                    \"\n                                                      )\n                                                    ]\n                                                  ),\n                                                  _vm._v(\" \"),\n                                                  _c(\n                                                    \"div\",\n                                                    {\n                                                      staticClass:\n                                                        \"d-flex justify-content-center flex-wrap my-3\"\n                                                    },\n                                                    [\n                                                      _c(\n                                                        \"base-button\",\n                                                        {\n                                                          attrs: {\n                                                            type: \"button\",\n                                                            design: \"primary\",\n                                                            size: \"lg\"\n                                                          },\n                                                          on: {\n                                                            click: _vm.getOnline\n                                                          }\n                                                        },\n                                                        [\n                                                          _vm._v(\n                                                            _vm._s(\n                                                              _vm.$t(\n                                                                \"global.click_to\",\n                                                                {\n                                                                  attribute: _vm.$t(\n                                                                    \"meeting.get_live\"\n                                                                  )\n                                                                }\n                                                              )\n                                                            )\n                                                          )\n                                                        ]\n                                                      ),\n                                                      _vm._v(\" \"),\n                                                      !_vm.isLoading\n                                                        ? _c(\n                                                            \"base-button\",\n                                                            {\n                                                              attrs: {\n                                                                type: \"button\",\n                                                                design: \"light\",\n                                                                size: \"lg\"\n                                                              },\n                                                              on: {\n                                                                click: function(\n                                                                  $event\n                                                                ) {\n                                                                  return _vm.$router.push(\n                                                                    {\n                                                                      name:\n                                                                        _vm.fallBackRoute\n                                                                    }\n                                                                  )\n                                                                }\n                                                              }\n                                                            },\n                                                            [\n                                                              _vm._v(\n                                                                _vm._s(\n                                                                  _vm.$t(\n                                                                    \"global.click_to\",\n                                                                    {\n                                                                      attribute: _vm.$t(\n                                                                        \"general.go_back\"\n                                                                      )\n                                                                    }\n                                                                  )\n                                                                )\n                                                              )\n                                                            ]\n                                                          )\n                                                        : _vm._e()\n                                                    ],\n                                                    1\n                                                  )\n                                                ]\n                                              : [\n                                                  _vm.entity.canModerate\n                                                    ? [\n                                                        _c(\n                                                          \"h5\",\n                                                          {\n                                                            staticClass:\n                                                              \"text-muted text-center my-3\"\n                                                          },\n                                                          [\n                                                            _vm._v(\n                                                              \"\\n                                            \" +\n                                                                _vm._s(\n                                                                  _vm.$t(\n                                                                    \"meeting.waiting_for_you_to_start\"\n                                                                  )\n                                                                ) +\n                                                                \"\\n                                        \"\n                                                            )\n                                                          ]\n                                                        ),\n                                                        _vm._v(\" \"),\n                                                        _c(\n                                                          \"div\",\n                                                          {\n                                                            staticClass:\n                                                              \"d-flex justify-content-center flex-wrap my-3\"\n                                                          },\n                                                          [\n                                                            _c(\n                                                              \"base-button\",\n                                                              {\n                                                                attrs: {\n                                                                  type:\n                                                                    \"button\",\n                                                                  design:\n                                                                    \"primary\",\n                                                                  size: \"lg\"\n                                                                },\n                                                                on: {\n                                                                  click:\n                                                                    _vm.getOnline\n                                                                }\n                                                              },\n                                                              [\n                                                                _vm._v(\n                                                                  _vm._s(\n                                                                    _vm.$t(\n                                                                      \"global.click_to\",\n                                                                      {\n                                                                        attribute: _vm.$t(\n                                                                          \"meeting.get_live\"\n                                                                        )\n                                                                      }\n                                                                    )\n                                                                  )\n                                                                )\n                                                              ]\n                                                            ),\n                                                            _vm._v(\" \"),\n                                                            !_vm.isLoading\n                                                              ? _c(\n                                                                  \"base-button\",\n                                                                  {\n                                                                    attrs: {\n                                                                      type:\n                                                                        \"button\",\n                                                                      design:\n                                                                        \"light\",\n                                                                      size: \"lg\"\n                                                                    },\n                                                                    on: {\n                                                                      click: function(\n                                                                        $event\n                                                                      ) {\n                                                                        return _vm.$router.push(\n                                                                          {\n                                                                            name:\n                                                                              _vm.fallBackRoute\n                                                                          }\n                                                                        )\n                                                                      }\n                                                                    }\n                                                                  },\n                                                                  [\n                                                                    _vm._v(\n                                                                      _vm._s(\n                                                                        _vm.$t(\n                                                                          \"global.click_to\",\n                                                                          {\n                                                                            attribute: _vm.$t(\n                                                                              \"general.go_back\"\n                                                                            )\n                                                                          }\n                                                                        )\n                                                                      )\n                                                                    )\n                                                                  ]\n                                                                )\n                                                              : _vm._e()\n                                                          ],\n                                                          1\n                                                        )\n                                                      ]\n                                                    : [\n                                                        _c(\n                                                          \"h5\",\n                                                          {\n                                                            staticClass:\n                                                              \"text-muted text-center my-3\"\n                                                          },\n                                                          [\n                                                            _vm._v(\n                                                              \"\\n                                            \" +\n                                                                _vm._s(\n                                                                  _vm.$t(\n                                                                    \"meeting.starting_any_time_now\"\n                                                                  )\n                                                                ) +\n                                                                \"\\n                                        \"\n                                                            )\n                                                          ]\n                                                        ),\n                                                        _vm._v(\" \"),\n                                                        !_vm.isLoading\n                                                          ? _c(\n                                                              \"div\",\n                                                              {\n                                                                staticClass:\n                                                                  \"d-flex justify-content-center\"\n                                                              },\n                                                              [\n                                                                _c(\n                                                                  \"base-button\",\n                                                                  {\n                                                                    attrs: {\n                                                                      type:\n                                                                        \"button\",\n                                                                      design:\n                                                                        \"light\",\n                                                                      size: \"lg\"\n                                                                    },\n                                                                    on: {\n                                                                      click: function(\n                                                                        $event\n                                                                      ) {\n                                                                        return _vm.$router.push(\n                                                                          {\n                                                                            name:\n                                                                              _vm.fallBackRoute\n                                                                          }\n                                                                        )\n                                                                      }\n                                                                    }\n                                                                  },\n                                                                  [\n                                                                    _vm._v(\n                                                                      _vm._s(\n                                                                        _vm.$t(\n                                                                          \"global.click_to\",\n                                                                          {\n                                                                            attribute: _vm.$t(\n                                                                              \"general.go_back\"\n                                                                            )\n                                                                          }\n                                                                        )\n                                                                      )\n                                                                    )\n                                                                  ]\n                                                                )\n                                                              ],\n                                                              1\n                                                            )\n                                                          : _vm._e()\n                                                      ]\n                                                ],\n                                            _vm._v(\" \"),\n                                            _vm.liveMembersCount > 0\n                                              ? _c(\n                                                  \"div\",\n                                                  {\n                                                    staticClass:\n                                                      \"text-muted text-center my-3\"\n                                                  },\n                                                  [\n                                                    _c(\n                                                      \"span\",\n                                                      {\n                                                        staticClass:\n                                                          \"text-xs text-success mr-1\"\n                                                      },\n                                                      [\n                                                        _c(\"i\", {\n                                                          staticClass:\n                                                            \"fas fa-circle\"\n                                                        })\n                                                      ]\n                                                    ),\n                                                    _vm._v(\" \"),\n                                                    _c(\"animated-number\", {\n                                                      attrs: {\n                                                        number:\n                                                          _vm.liveMembersCount,\n                                                        delay: 100\n                                                      }\n                                                    }),\n                                                    _vm._v(\" \"),\n                                                    _vm.liveMembersCount > 1\n                                                      ? _c(\"span\", [\n                                                          _vm._v(\n                                                            _vm._s(\n                                                              _vm.$t(\n                                                                \"meeting.members_online\"\n                                                              )\n                                                            )\n                                                          )\n                                                        ])\n                                                      : _c(\"span\", [\n                                                          _vm._v(\n                                                            _vm._s(\n                                                              _vm.$t(\n                                                                \"meeting.member_online\"\n                                                              )\n                                                            )\n                                                          )\n                                                        ])\n                                                  ],\n                                                  1\n                                                )\n                                              : _vm._e()\n                                          ]\n                                        : _vm.entity.status === \"cancelled\"\n                                        ? [\n                                            _c(\n                                              \"h4\",\n                                              {\n                                                staticClass:\n                                                  \"text-muted text-center my-3\"\n                                              },\n                                              [\n                                                _vm._v(\n                                                  \"\\n                                    \" +\n                                                    _vm._s(\n                                                      _vm.$t(\n                                                        \"meeting.meeting_cancelled\"\n                                                      )\n                                                    ) +\n                                                    \"\\n                                \"\n                                                )\n                                              ]\n                                            ),\n                                            _vm._v(\" \"),\n                                            !_vm.isLoading\n                                              ? _c(\n                                                  \"div\",\n                                                  {\n                                                    staticClass:\n                                                      \"d-flex justify-content-center\"\n                                                  },\n                                                  [\n                                                    _c(\n                                                      \"base-button\",\n                                                      {\n                                                        attrs: {\n                                                          type: \"button\",\n                                                          design: \"light\",\n                                                          size: \"lg\"\n                                                        },\n                                                        on: {\n                                                          click: function(\n                                                            $event\n                                                          ) {\n                                                            return _vm.$router.push(\n                                                              {\n                                                                name:\n                                                                  _vm.fallBackRoute\n                                                              }\n                                                            )\n                                                          }\n                                                        }\n                                                      },\n                                                      [\n                                                        _vm._v(\n                                                          _vm._s(\n                                                            _vm.$t(\n                                                              \"global.click_to\",\n                                                              {\n                                                                attribute: _vm.$t(\n                                                                  \"general.go_back\"\n                                                                )\n                                                              }\n                                                            )\n                                                          )\n                                                        )\n                                                      ]\n                                                    )\n                                                  ],\n                                                  1\n                                                )\n                                              : _vm._e()\n                                          ]\n                                        : _vm.entity.status === \"ended\"\n                                        ? [\n                                            _c(\n                                              \"h4\",\n                                              {\n                                                staticClass:\n                                                  \"text-muted text-center my-3\"\n                                              },\n                                              [\n                                                _vm._v(\n                                                  \"\\n                                    \" +\n                                                    _vm._s(\n                                                      _vm.$t(\n                                                        \"meeting.meeting_ended\"\n                                                      )\n                                                    ) +\n                                                    \"\\n                                \"\n                                                )\n                                              ]\n                                            ),\n                                            _vm._v(\" \"),\n                                            !_vm.isLoading\n                                              ? _c(\n                                                  \"div\",\n                                                  {\n                                                    staticClass:\n                                                      \"d-flex justify-content-center\"\n                                                  },\n                                                  [\n                                                    _c(\n                                                      \"base-button\",\n                                                      {\n                                                        attrs: {\n                                                          type: \"button\",\n                                                          design: \"light\",\n                                                          size: \"lg\"\n                                                        },\n                                                        on: {\n                                                          click: function(\n                                                            $event\n                                                          ) {\n                                                            return _vm.$router.push(\n                                                              {\n                                                                name:\n                                                                  _vm.fallBackRoute\n                                                              }\n                                                            )\n                                                          }\n                                                        }\n                                                      },\n                                                      [\n                                                        _vm._v(\n                                                          _vm._s(\n                                                            _vm.$t(\n                                                              \"global.click_to\",\n                                                              {\n                                                                attribute: _vm.$t(\n                                                                  \"general.go_back\"\n                                                                )\n                                                              }\n                                                            )\n                                                          )\n                                                        )\n                                                      ]\n                                                    )\n                                                  ],\n                                                  1\n                                                )\n                                              : _vm._e()\n                                          ]\n                                        : _vm._e()\n                                    ]\n                                  : [\n                                      _vm.entity\n                                        ? _c(\n                                            \"h3\",\n                                            {\n                                              staticClass:\n                                                \"text-center text-danger my-3\"\n                                            },\n                                            [\n                                              _vm._v(\n                                                \"\\n                                \" +\n                                                  _vm._s(\n                                                    _vm.$t(\n                                                      \"meeting.not_allowed\"\n                                                    )\n                                                  ) +\n                                                  \"\\n                            \"\n                                              )\n                                            ]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      !_vm.isLoading\n                                        ? _c(\n                                            \"div\",\n                                            {\n                                              staticClass:\n                                                \"d-flex justify-content-center\"\n                                            },\n                                            [\n                                              _c(\n                                                \"base-button\",\n                                                {\n                                                  attrs: {\n                                                    type: \"button\",\n                                                    design: \"light\",\n                                                    size: \"lg\"\n                                                  },\n                                                  on: {\n                                                    click: function($event) {\n                                                      return _vm.$router.push({\n                                                        name: _vm.fallBackRoute\n                                                      })\n                                                    }\n                                                  }\n                                                },\n                                                [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      _vm.$t(\n                                                        \"global.click_to\",\n                                                        {\n                                                          attribute: _vm.$t(\n                                                            \"general.go_back\"\n                                                          )\n                                                        }\n                                                      )\n                                                    )\n                                                  )\n                                                ]\n                                              )\n                                            ],\n                                            1\n                                          )\n                                        : _vm._e()\n                                    ]\n                              ],\n                              2\n                            )\n                      ],\n                      2\n                    )\n                  ]\n                )\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _vm.pageConfigs.enableMeetingInfo &&\n            _vm.rtcmConnection &&\n            _vm.videoList.length &&\n            _vm.showMeetingInfo\n              ? _c(\"div\", { staticClass: \"meeting-info-container\" }, [\n                  _c(\"div\", { staticClass: \"meeting-info\" }, [\n                    _c(\"span\", { staticClass: \"info-label\" }, [\n                      _vm._v(_vm._s(_vm.$t(\"meeting.total_participants\")))\n                    ]),\n                    _vm._v(\": \"),\n                    _c(\"span\", { staticClass: \"info-value\" }, [\n                      _vm._v(_vm._s(_vm.participantCount))\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"meeting-info\" }, [\n                    _c(\"span\", { staticClass: \"info-label\" }, [\n                      _vm._v(_vm._s(_vm.$t(\"meeting.started_at\")))\n                    ]),\n                    _vm._v(\": \"),\n                    _c(\"span\", { staticClass: \"info-value\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm._f(\"moment\")(\n                            _vm.entity.startedAt,\n                            _vm.vars.defaultDateTimeFormat\n                          )\n                        )\n                      )\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"meeting-info\" }, [\n                    _c(\"span\", { staticClass: \"info-label\" }, [\n                      _vm._v(_vm._s(_vm.$t(\"meeting.meeting_live_since\")))\n                    ]),\n                    _vm._v(\": \"),\n                    _c(\"span\", { staticClass: \"info-value\" }, [\n                      _vm._v(_vm._s(_vm.meetingDuration))\n                    ])\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"meeting-info\" }, [\n                    _c(\"span\", { staticClass: \"info-label\" }, [\n                      _vm._v(_vm._s(_vm.$t(\"meeting.props.estimated_end_time\")))\n                    ]),\n                    _vm._v(\": \"),\n                    _c(\"span\", { staticClass: \"info-value\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm._f(\"moment\")(\n                            _vm.entity.estimatedEndTime,\n                            _vm.vars.defaultDateTimeFormat\n                          )\n                        )\n                      )\n                    ])\n                  ])\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.pageConfigs.enableChat &&\n            _vm.configs.chat &&\n            _vm.configs.chat.enabled &&\n            _vm.entity &&\n            !_vm.entity.isBlocked\n              ? _c(\n                  \"div\",\n                  { staticClass: \"chat-box-container\" },\n                  [\n                    _vm.isChatBoxShown\n                      ? _c(\"chat-box\", {\n                          attrs: {\n                            \"box-visibility\": _vm.isChatBoxShown,\n                            meeting: _vm.entity,\n                            channel: _vm.subscriptions.userPrivate\n                          },\n                          on: {\n                            boxHidden: function($event) {\n                              _vm.isChatBoxShown = false\n                            },\n                            boxShown: function($event) {\n                              _vm.isChatBoxShown = true\n                            }\n                          }\n                        })\n                      : _vm._e()\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"b-modal\",\n              {\n                attrs: {\n                  size: \"md\",\n                  centered: \"\",\n                  lazy: \"\",\n                  busy: _vm.isLoading,\n                  id: \"devicesModal\",\n                  \"no-close-on-backdrop\": \"\",\n                  \"no-close-on-esc\": \"\"\n                },\n                on: {\n                  ok: _vm.onDevicesModalOK,\n                  cancel: _vm.onDevicesModalCancel\n                },\n                model: {\n                  value: _vm.showDevicesModal,\n                  callback: function($$v) {\n                    _vm.showDevicesModal = $$v\n                  },\n                  expression: \"showDevicesModal\"\n                }\n              },\n              [\n                _c(\"template\", { slot: \"modal-header\" }, [\n                  _c(\"h5\", { staticClass: \"modal-title\" }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.$t(\"meeting.media_devices.video_and_audio_devices\")\n                      )\n                    )\n                  ])\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  [\n                    _c(\"base-select\", {\n                      attrs: {\n                        options: _vm.mediaDevices.audioInput,\n                        label: _vm.$t(\"meeting.media_devices.audio_input\"),\n                        \"allow-empty\": false,\n                        \"preselect-first\": \"\"\n                      },\n                      model: {\n                        value: _vm.mediaConfigFormData.selectedAudioInput,\n                        callback: function($$v) {\n                          _vm.$set(\n                            _vm.mediaConfigFormData,\n                            \"selectedAudioInput\",\n                            $$v\n                          )\n                        },\n                        expression: \"mediaConfigFormData.selectedAudioInput\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"base-select\", {\n                      attrs: {\n                        options: _vm.mediaDevices.videoInput,\n                        label: _vm.$t(\"meeting.media_devices.video_input\"),\n                        \"allow-empty\": false,\n                        \"preselect-first\": \"\"\n                      },\n                      model: {\n                        value: _vm.mediaConfigFormData.selectedVideoInput,\n                        callback: function($$v) {\n                          _vm.$set(\n                            _vm.mediaConfigFormData,\n                            \"selectedVideoInput\",\n                            $$v\n                          )\n                        },\n                        expression: \"mediaConfigFormData.selectedVideoInput\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-md-4\" },\n                        [\n                          _c(\"base-select\", {\n                            attrs: {\n                              options: _vm.mediaDevices.resolutions,\n                              label: _vm.$t(\n                                \"meeting.media_devices.video_resolution\"\n                              ),\n                              \"allow-empty\": false,\n                              \"preselect-first\": \"\",\n                              simple: \"\",\n                              \"track-by\": \"label\",\n                              \"show-by\": \"label\"\n                            },\n                            model: {\n                              value: _vm.mediaConfigFormData.selectedResolution,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.mediaConfigFormData,\n                                  \"selectedResolution\",\n                                  $$v\n                                )\n                              },\n                              expression:\n                                \"mediaConfigFormData.selectedResolution\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-md-4\" },\n                        [\n                          _c(\"base-select\", {\n                            attrs: {\n                              options: _vm.mediaDevices.frameRates,\n                              label: _vm.$t(\"meeting.media_devices.frame_rate\"),\n                              \"allow-empty\": false,\n                              \"preselect-first\": \"\",\n                              simple: \"\",\n                              \"track-by\": \"uuid\",\n                              \"show-by\": \"label\"\n                            },\n                            model: {\n                              value: _vm.mediaConfigFormData.frameRate,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.mediaConfigFormData,\n                                  \"frameRate\",\n                                  $$v\n                                )\n                              },\n                              expression: \"mediaConfigFormData.frameRate\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-md-4\" },\n                        [\n                          _c(\"base-select\", {\n                            attrs: {\n                              options: _vm.mediaDevices.facingModes,\n                              label: _vm.$t(\n                                \"meeting.media_devices.facing_mode\"\n                              ),\n                              \"allow-empty\": false,\n                              \"preselect-first\": \"\",\n                              simple: \"\",\n                              \"track-by\": \"uuid\",\n                              \"show-by\": \"label\"\n                            },\n                            model: {\n                              value: _vm.mediaConfigFormData.facingMode,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.mediaConfigFormData,\n                                  \"facingMode\",\n                                  $$v\n                                )\n                              },\n                              expression: \"mediaConfigFormData.facingMode\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12\" }, [\n                        _c(\"h6\", { staticClass: \"mt-2 pb-1\" }, [\n                          _vm._v(\n                            _vm._s(_vm.$t(\"meeting.media_devices.bandwidth\"))\n                          )\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-4\" },\n                        [\n                          _c(\"base-select\", {\n                            attrs: {\n                              options: _vm.audioBandwidthOpts,\n                              label: _vm.$t(\"meeting.media_devices.audio\"),\n                              \"allow-empty\": false,\n                              \"preselect-first\": \"\",\n                              simple: \"\",\n                              \"track-by\": \"uuid\",\n                              \"show-by\": \"label\"\n                            },\n                            model: {\n                              value: _vm.mediaConfigFormData.bandwidth.audio,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.mediaConfigFormData.bandwidth,\n                                  \"audio\",\n                                  $$v\n                                )\n                              },\n                              expression: \"mediaConfigFormData.bandwidth.audio\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-4\" },\n                        [\n                          _c(\"base-select\", {\n                            attrs: {\n                              options: _vm.videoBandwidthOpts,\n                              label: _vm.$t(\"meeting.media_devices.video\"),\n                              \"allow-empty\": false,\n                              \"preselect-first\": \"\",\n                              simple: \"\",\n                              \"track-by\": \"uuid\",\n                              \"show-by\": \"label\"\n                            },\n                            model: {\n                              value: _vm.mediaConfigFormData.bandwidth.video,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.mediaConfigFormData.bandwidth,\n                                  \"video\",\n                                  $$v\n                                )\n                              },\n                              expression: \"mediaConfigFormData.bandwidth.video\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-4\" },\n                        [\n                          _c(\"base-select\", {\n                            attrs: {\n                              options: _vm.screenBandwidthOpts,\n                              label: _vm.$t(\"meeting.media_devices.screen\"),\n                              \"allow-empty\": false,\n                              \"preselect-first\": \"\",\n                              simple: \"\",\n                              \"track-by\": \"uuid\",\n                              \"show-by\": \"label\"\n                            },\n                            model: {\n                              value: _vm.mediaConfigFormData.bandwidth.screen,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.mediaConfigFormData.bandwidth,\n                                  \"screen\",\n                                  $$v\n                                )\n                              },\n                              expression: \"mediaConfigFormData.bandwidth.screen\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ])\n                  ],\n                  1\n                )\n              ],\n              2\n            ),\n            _vm._v(\" \"),\n            _vm.pageConfigs.enableFileSharing\n              ? _c(\n                  \"div\",\n                  {\n                    class: [\n                      \"files-sharing-box d-none\",\n                      { \"d-flex\": _vm.showFileSharing }\n                    ]\n                  },\n                  [\n                    _c(\n                      \"card\",\n                      {\n                        staticClass: \"files-container\",\n                        attrs: { shadow: \"\", \"body-classes\": \"files-wrapper\" }\n                      },\n                      [\n                        _c(\"file-sharer\", {\n                          attrs: {\n                            connection: _vm.fileSharingConnection,\n                            \"allow-sharing\": _vm.pageConfigs.enableFileSharing,\n                            options: _vm.fileSharerOptions\n                          },\n                          on: {\n                            hide: function($event) {\n                              _vm.showFileSharing = false\n                            },\n                            show: function($event) {\n                              _vm.showFileSharing = true\n                            }\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              : _vm._e()\n          ]\n        : _c(\n            \"card\",\n            {\n              staticClass:\n                \"duplicate-tab d-flex justify-content-center align-items-center min-height-90vh\",\n              attrs: { shadow: \"\" }\n            },\n            [_c(\"h2\", [_vm._v(_vm._s(_vm.$t(\"meeting.duplicate_tab\")))])]\n          )\n    ],\n    2\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { staticClass: \"meeting-title\" }, [\n      _vm._v(_vm._s(_vm.entity.title))\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", [\n      _vm._v(\n        _vm._s(_vm.$t(\"meeting.props.type\")) +\n          \": \" +\n          _vm._s(_vm.entity.type.name) +\n          \",\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", [\n      _vm._v(\n        _vm._s(_vm.$t(\"meeting.meeting_category.category\")) +\n          \": \" +\n          _vm._s(_vm.entity.category.name)\n      )\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import axios from 'axios'\n// import request from '@core/utils/request'\n\n// axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n// axios.defaults.withCredentials = true;\n\nconst apiUrl = `${location.origin}:27017/api`\n\n\nexport function getToken() {\n\treturn axios.get(`${apiUrl}/get-speech-token`);\n}\n\n","import { render, staticRenderFns } from \"./FileSharer.vue?vue&type=template&id=68270e3a&\"\nimport script from \"./FileSharer.vue?vue&type=script&lang=js&\"\nexport * from \"./FileSharer.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('68270e3a')) {\n      api.createRecord('68270e3a', component.options)\n    } else {\n      api.reload('68270e3a', component.options)\n    }\n    module.hot.accept(\"./FileSharer.vue?vue&type=template&id=68270e3a&\", function () {\n      api.rerender('68270e3a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/FileSharer.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileSharer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileSharer.vue?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileSharer.vue?vue&type=template&id=68270e3a&\"","import { mapGetters } from 'vuex'\nimport * as AzureSpeechApi from '@api/azure-speech'\nimport Cookie from 'universal-cookie';\n// import io from 'socket.io-client';\n\n// import VueSocketIO from \"vue-socket.io\";\nimport {\n    SpeechSynthesizer,\n    TranslationRecognizer,\n    SpeechTranslationConfig,\n    AudioConfig,\n    ResultReason\n} from 'microsoft-cognitiveservices-speech-sdk';\nimport * as speechsdk from 'microsoft-cognitiveservices-speech-sdk';\n\n/**\n * \n * @param {String} text \n * @returns {Number} time in seconds\n */\nfunction getDelayTimeOfText(text) {\n    return `${text || \" \"}`.split(\" \").length / 3 * 1000 + 3000 // read speed 200 words for a min\n}\n\nexport default {\n    components: {},\n    data() {\n        return {\n            timer: null,\n            recognizer: null,\n            synthesizer: null,\n            conversations: [\n                /**\n                {\n                    user: UserId\n                    translates: {\n                        en: \"something is okay\"\n                    }\n                }\n                */\n            ],\n            errors: [],\n            displayText: 'INITIALIZED: ready to test speech...',\n            isRecognizing: false,\n            enableV2T: false, // enable voice to text\n            enableV2V: false, // enable voice to voice\n            languagesInRoom: [\n                \"en\", // default value\n                \"ja\",\n                \"vi\",\n                \"zh\",\n            ],\n            uuid: \"\", // room id for broadcast\n            myLanguage: 'en', // must be language code\n            // myLanguagePrefix: 'en', // commented at 2021-12-23  because we dont need to use this value\n            supportedLanguages: [\n                {\n                    value: \"en\",\n                    speechTransCode: \"en\",\n                    text2SpeechCode: \"en-US\",\n                    speech2TextCode: \"en-US\",\n                    voiceNames: {\n                        \"male\": \"en-US-GuyNeural\",\n                        \"female\": \"en-US-JennyNeural\"\n                    },\n                    // voiceName: \"en-US-AriaNeural\",\n                    text: \"English\",\n                },\n                {\n                    value: \"ja\",\n                    speechTransCode: \"ja\",\n                    text2SpeechCode: \"ja-JP\",\n                    speech2TextCode: \"ja-JP\",\n                    voiceNames: {\n                        \"male\": \"ja-JP-KeitaNeural\",\n                        \"female\": \"ja-JP-NanamiNeural\"\n                    },\n                    // voiceName: \"ja-JP-NanamiNeural\",\n                    text: \"Japanese\",\n                },\n                {\n                    value: \"vi\",\n                    speechTransCode: \"vi\",\n                    text2SpeechCode: \"vi-VN\",\n                    speech2TextCode: \"vi-VN\",\n                    voiceNames: {\n                        \"male\": \"vi-VN-NamMinhNeural\",\n                        \"female\": \"vi-VN-HoaiMyNeural\"\n                    },\n                    // voiceName: \"vi-VN-HoaiMyNeural\",\n                    text: \"Vietnamese\",\n                },\n                {\n                    value: \"zh\",\n                    speechTransCode: \"zh-Hans\",\n                    text2SpeechCode: \"zh-CN\",\n                    speech2TextCode: \"zh-CN\",\n                    voiceNames: {\n                        \"male\": \"zh-CN-YunxiNeural\",\n                        \"female\": \"zh-CN-XiaoruiNeural\"\n                    },\n                    // voiceName: \"zh-CN-XiaohanNeural\",\n                    text: \"Chinese\",\n                },\n            ],\n            isMuted: false\n        }\n    },\n    computed: {\n        ...mapGetters('user', {\n            getUserDetails: 'get',\n            hasRole: 'hasRole',\n            hasPermission: 'hasPermission',\n            loggedInUser: 'loggedInUser',\n            userUuid: 'uuid',\n            profile: 'profile',\n            username: 'username',\n            liveUsers: 'liveUsers',\n        }),\n        currentLanguage: {\n            get() {\n                return this.myLanguage;\n            },\n            set(newValue) {\n                this.myLanguage = newValue;\n                this.myLanguagePrefix = newValue.split('-')[0];\n                // console.log(\"this.myLanguage: \", this.myLanguage);\n                // console.log(\"newValue: \", newValue);\n                // this.myLanguage = newValue;\n                // this.myLanguagePrefix = newValue.split('-')[0];\n                // this.addLanguageToRoom(this.myLanguage)\n            }\n        }\n    },\n    watch: {\n        myLanguage() {\n            this.initContinuesSpeechToTextInMulti();\n        }\n    },\n    sockets: {\n        // socket event listeners\n        broadcast_conversation(conversation) {\n            // console.log(\"conversation from server: \", conversation)\n            if (conversation.owner !== this.userUuid) {\n                // let user = conversation.owner; // conversation.owner === UserId\n                // let translations = conversation.translations;\n\n                // let conversations = this.conversations.filter((value) => {\n                //     return value.user !== user\n                // });\n\n                let text = conversation.translations[this.myLanguage]\n\n                // console.log(\"conversation: \", text)\n\n                if (this.enableV2T) {\n                    this.conversations.push({ user: conversation.owner, translations: conversation.translations, messageId: conversation.messageId })\n                    // this.conversations = [...conversations, {user, translations}]\n                    // console.log(\"this.conversations: \", this.conversations)\n                }\n\n                if (this.enableV2V && text) {\n                    const user = this.liveUsers.find((user) => user.uuid === conversation.owner)\n                    let gender = user.gender.uuid || \"male\"\n\n                    // console.log(\"gender: \", gender)\n                    // console.log(\"user.gender.uuid: \", user.gender.uuid)\n\n                    const supportedLanguage = this.supportedLanguages.find((sl) => sl.value === this.myLanguage);\n                    this.textToSpeech(text, supportedLanguage.text2SpeechCode, supportedLanguage.voiceNames[gender]);\n                }\n            } else {\n                // console.log(\n                //     \"this.userUuid: \", this.userUuid,\n                //     \"conversation.owner: \", conversation.owner\n                // )\n            }\n        }\n    },\n    methods: {\n        /**\n         * \n         * @returns token\n         */\n        async getTokenOrRefresh() {\n            const cookie = new Cookie();\n            const speechToken = cookie.get('speech-token');\n\n            if (speechToken === undefined) {\n                try {\n                    const res = await AzureSpeechApi.getToken();\n                    const token = res.data.token;\n                    const region = res.data.region;\n                    cookie.set('speech-token', region + ':' + token, { maxAge: 540, path: '/' });\n\n                    // console.log('Token fetched from back-end: ' + token);\n                    return { authToken: token, region: region };\n                } catch (err) {\n                    // console.log(\"err.response.data: \", err);\n                    return { authToken: null, error: err };\n                }\n            }\n\n            // console.log('Token fetched from cookie: ' + speechToken);\n            const idx = speechToken.indexOf(':');\n            return { authToken: speechToken.slice(idx + 1), region: speechToken.slice(0, idx) };\n        },\n        /**\n         * \n         * @returns \n         */\n        async initContinuesSpeechToTextInMulti() {\n            if (this.recognizer) {\n                // console.log(\"stoping continuesSpeechToSpeech....\")\n                this.recognizer.stopContinuousRecognitionAsync();\n            }\n            // console.log(\"initing continuesSpeechToSpeech....\")\n            // console.log(\"this.languagesInRoom: \", this.languagesInRoom)\n            // console.log(\"this.myLanguage: \", this.myLanguage)\n\n            const tokenObj = await this.getTokenOrRefresh();\n            // const speechConfig = speechsdk.SpeechConfig.fromAuthorizationToken(tokenObj.authToken, tokenObj.region);\n            const speechTranslationConfig = SpeechTranslationConfig.fromAuthorizationToken(tokenObj.authToken, tokenObj.region);\n            let mySpeech2TextCode = this.supportedLanguages.find((sl) => sl.value === this.myLanguage)?.speech2TextCode;\n\n            // console.log(\"mySpeechTransCode: \", mySpeech2TextCode)\n            speechTranslationConfig.speechRecognitionLanguage = mySpeech2TextCode ? mySpeech2TextCode : \"en-US\"; // \"en-US\"\n\n            // add languages in the room\n            // speechTranslationConfig.addTargetLanguage(this.myLanguage);\n            this.languagesInRoom.forEach((language) => {\n                const supportedLanguage = this.supportedLanguages.find((sl) => sl.value === language)\n                // console.log(\"speechTransCode: \", speechTransCode)\n                if (supportedLanguage) {\n                    const speechTransCode = supportedLanguage.speechTransCode;\n                    speechTranslationConfig.addTargetLanguage(speechTransCode);\n                }\n            })\n\n            const audioConfig = AudioConfig.fromDefaultMicrophoneInput();\n            const recognizer = new TranslationRecognizer(speechTranslationConfig, audioConfig);\n\n            recognizer.recognizing = (s, e) => {\n                // console.log(`TRANSLATING: Text=${e.result.text}`);\n            };\n\n            recognizer.recognized = (s, e) => {\n\n                // console.log(\"e.result.reason: \", e.result.reason)\n                // console.log(e.result.reason != ResultReason.NoMatch);\n\n                if (e.result.reason != ResultReason.NoMatch) {\n                    let conversationResult = {\n                        owner: this.userUuid,\n                        resultReason: e.result.reason,\n                        translations: {}\n                    };\n\n\n                    this.languagesInRoom.forEach((language) => {\n                        const supportedLanguage = this.supportedLanguages.find((sl) => sl.value === language)\n                        if (supportedLanguage) {\n                            const speechTransCode = supportedLanguage.speechTransCode;\n                            conversationResult.translations[language] = e.result.translations.get(speechTransCode)\n                        }\n                    })\n                    // conversationResult.translations[this.myLanguage] = e.result.translations.get(this.myLanguage)\n\n                    // console.log(\"sending converstation...\", conversationResult)\n                    // send conversation to users in the room\n                    this.sendConversation(conversationResult)\n                } else {\n                    // console.log(\"Didnt recognized\");\n                }\n\n            };\n\n            recognizer.canceled = (s, e) => {\n                // console.log(`CANCELED: Reason=${e.reason}`);\n                if (e.reason == \"CancellationReason.Error\") {\n                    // console.log(`\"CANCELED: ErrorCode=${e.errorCode}`);\n                    // console.log(`\"CANCELED: ErrorDetails=${e.errorDetails}`);\n                    // console.log(\"CANCELED: Did you update the subscription info?\");\n                }\n                recognizer.stopContinuousRecognitionAsync();\n            };\n\n            recognizer.sessionStopped = (s, e) => {\n                // console.log(\"\\n    Session stopped event.\");\n                recognizer.stopContinuousRecognitionAsync();\n            };\n\n\n            recognizer.startContinuousRecognitionAsync((err) => {\n                if (err) {\n                    console.error(\"startContinuousRecognitionAsync: \", err)\n                }\n            });\n            this.recognizer = recognizer\n        },\n        /**\n         * \n         * @param {String} text \n         * @param {String} text2SpeechCode \n         * @param {String} voiceName // https://docs.microsoft.com/en-us/azure/cognitive-services/speech-service/language-support\n         */\n        async textToSpeech(text, text2SpeechCode, voiceName) {\n            const tokenObj = await this.getTokenOrRefresh();\n\n            const speechConfig = speechsdk.SpeechConfig.fromAuthorizationToken(tokenObj.authToken, tokenObj.region);\n            const audioConfig = speechsdk.AudioConfig.fromDefaultSpeakerOutput();\n\n            speechConfig.speechSynthesisLanguage = text2SpeechCode //supportedLanguage.text2SpeechCode; // e.g. \"de-DE\"\n            // The voice setting will overwrite language setting.\n            // The voice setting will not overwrite the voice element in input SSML.\n            speechConfig.speechSynthesisVoiceName = voiceName //supportedLanguage.voiceNames[gender];\n\n            const synthesizer = new SpeechSynthesizer(speechConfig, audioConfig);\n            synthesizer.speakTextAsync(\n                text,\n                result => {\n                    if (result) {\n                        synthesizer.close();\n                        return result.audioData;\n                    } else {\n                        console.error(\"Text to voice result: \", result)\n                    }\n                },\n                error => {\n                    console.error(error);\n                    synthesizer.close();\n                });\n            this.synthesizer = synthesizer\n        },\n        joinToRoom() {\n            this.$socket.emit('join', { room: this.uuid }, (err) => {\n                if (err) {\n                    return console.error(\"Join to room:\", err)\n                }\n                // console.log(\"joined room: \", this.uuid)\n            });\n        },\n        // addLanguageToRoom(language) {\n        //     this.$socket.emit('add_or_update_language_to_room', { room: this.uuid, language: language, userId: this.userUuid }, (err) => {\n        //         if (err) {\n        //             return console.error(\"add_language to room:\", err)\n        //         }\n        //     });\n        // },\n        sendConversation(conversationResult) {\n            this.$socket.emit('send_conversation', { conversationResult, room: this.uuid }, (err) => {\n                if (err) {\n                    console.error(\"send_conversation: \", err);\n                }\n                // console.log(\"sent_conversation: \", conversationResult)\n            });\n        },\n        _socketInit() {\n            this.joinToRoom();\n            this.$socket.on(\"connect_error\", (err) => {\n                // console.log(`connect_error due to ${err.message}`);\n                // console.log(`trying again`);\n                this.errors.push(\"connect_error: Could not connect to Socket Server for Traslations\")\n                // this.socket.close();\n                // this.socket.open();\n            });\n            this.$socket.on('disconnect', (reason) => {\n                // console.log(\"socket disconnect reason: \", reason);\n\n                if (reason === \"io server disconnect\") {\n                    // the disconnection was initiated by the server, you need to reconnect manually\n                    this.$socket.connect();\n                    this._socketInit();\n                }\n            });\n        },\n        toggleRecognition() {\n            this.isMuted = !this.isMuted\n            if (this.isMuted) {\n                this.recognizer.stopContinuousRecognitionAsync();\n            } else {\n                this.initContinuesSpeechToTextInMulti()\n            }\n        },\n        azure_toggleVoiceToText() {\n            this.enableV2T = !this.enableV2T\n            this.initContinuesSpeechToTextInMulti()\n\n            if (this.enableV2T) {\n                this.autoShiftConversations();\n            } else {\n                this.conversations = [];\n                clearTimeout(this.timer)\n            }\n        },\n        azure_toggleVoiceToVoice() {\n            this.enableV2V = !this.enableV2V\n            if (!this.enableV2V) {\n                try {\n                    this.synthesizer && this.synthesizer.close();\n                } catch (err) {\n                    console.error(\"err: \", err)\n                }\n            }\n        },\n        setLanguage(value) {\n            this.currentLanguage = value;\n            // this.myLanguagePrefix = newValue.split('-')[0];\n            // this.addLanguageToRoom(this.myLanguage)\n        },\n        autoShiftConversations() {\n            const conversation = this.conversations[0];\n            if (conversation) {\n                // console.log(\"removing...\")\n\n                const text = conversation && conversation.translations[this.myLanguage]\n                const delaySeconds = getDelayTimeOfText(text || \"\");\n                this.timer = setTimeout(() => {\n                    this.conversations.shift();\n                    this.autoShiftConversations();\n                }, delaySeconds)\n            } else {\n                // console.log(\"delaying...\")\n                this.timer = setTimeout(() => {\n                    this.autoShiftConversations();\n                }, 800);\n            }\n        },\n    },\n    mounted() {\n        if (this.$route.params.uuid) {\n            this.uuid = this.$route.params.uuid;\n\n            this._socketInit();\n            this.getTokenOrRefresh();\n            // this.addLanguageToRoom(this.myLanguage)\n            if (!this.isMuted) {\n                this.initContinuesSpeechToTextInMulti()\n            }\n        } else {\n            this.errors.push(\"Uuid does not exists. You are not able to use translation feature\")\n            console.error(\"uuid does not exists\");\n        }\n    },\n    beforeDestroy() {\n        try {\n            clearTimeout(this.timer)\n            this.recognizer.stopContinuousRecognitionAsync();\n            this.$socket.emit('remove_user_on_room', { room: this.uuid, userId: this.userUuid })\n        } catch (err) {\n            console.error(\"stopContinuousRecognitionAsync: \", err)\n        }\n        console.log(\"socket.close event\");\n        // this.socket.close()\n    }\n}\n","import { mapGetters, mapActions } from 'vuex'\nconst ss = require('socket.io-stream');\nvar socket = io.connect(`${location.origin}:27017`);\nvar ssStream = ss.createStream();\nvar audioContext;\nvar scriptNode;\n\nexport default {\n  data() {\n    return {\n      timer: null,\n      g_enableV2T: false, // enable voice to text\n      g_enableV2V: false, // enable voice to voice\n      uuid: \"\",\n      myLanguage: 'English',\n      resultError: false,\n      textResult: \"\",\n      errors: []\n    }\n  },\n  computed: {\n    ...mapGetters('user', {\n      loggedInUser: 'loggedInUser',\n      userUuid: 'uuid',\n      liveUsers: 'liveUsers',\n    }),\n    ...mapActions('user', {\n      GetAllUsers: 'GetAllUsers'\n    })\n  },\n  methods: {\n    async successCallback(stream) {\n      const vm = this;\n      audioContext = new AudioContext();\n      console.log(\"successCallback:....IN\");\n      var input = audioContext.createMediaStreamSource(stream);\n      var bufferSize = 2048;\n      scriptNode = audioContext.createScriptProcessor(bufferSize, 1, 1);\n      scriptNode.onaudioprocess = scriptNodeProcess;\n      input.connect(scriptNode);\n\n      async function scriptNodeProcess(audioProcessingEvent) {\n        var inputBuffer = audioProcessingEvent.inputBuffer;\n        var outputBuffer = audioProcessingEvent.outputBuffer;\n        var inputData = inputBuffer.getChannelData(0);\n        var outputData = outputBuffer.getChannelData(0);\n\n        // Loop through the 4096 samples\n        for (var sample = 0; sample < inputBuffer.length; sample++) {\n          outputData[sample] = inputData[sample];\n        }\n\n        try {\n          await ssStream.write(\n            new ss.Buffer(vm.downsampleBuffer(inputData, 44100, 16000))\n          );\n        } catch (error) {\n          console.log(\"ssStream writing error!\");\n        }\n      }\n    },\n    downsampleBuffer(buffer, sampleRate, outSampleRate) {\n      if (outSampleRate == sampleRate) {\n        return buffer;\n      }\n      if (outSampleRate > sampleRate) {\n        throw \"downsampling rate show be smaller than original sample rate\";\n      }\n      var sampleRateRatio = sampleRate / outSampleRate;\n      var newLength = Math.round(buffer.length / sampleRateRatio);\n      var result = new Int16Array(newLength);\n      var offsetResult = 0;\n      var offsetBuffer = 0;\n      while (offsetResult < result.length) {\n        var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n        var accum = 0,\n          count = 0;\n        for (\n          var i = offsetBuffer;\n          i < nextOffsetBuffer && i < buffer.length;\n          i++\n        ) {\n          accum += buffer[i];\n          count++;\n        }\n        result[offsetResult] = Math.min(1, accum / count) * 0x7fff;\n        offsetResult++;\n        offsetBuffer = nextOffsetBuffer;\n      }\n      return result.buffer;\n    },\n    async google_toggleVoiceToText(data) {\n      if (data.V2V) {\n        this.g_enableV2V = !this.g_enableV2V\n      } else {\n        this.g_enableV2T = !this.g_enableV2T\n      }\n\n      if (this.$route.params.uuid) {\n        this.uuid = this.$route.params.uuid;\n        if (this.g_enableV2T || this.g_enableV2V) {\n          this.myLanguage = data.language;\n          socket.emit(\"LANGUAGE_SPEECH\", { \n            myLanguage: this.myLanguage, \n            V2V: this.g_enableV2V, \n            liveUsers: this.liveUsers,\n            room: this.uuid \n          });\n          scriptNode.connect(audioContext.destination);\n          ss(socket).emit('START_SPEECH', ssStream);\n        } else {\n          clearTimeout(this.timer);\n          scriptNode.disconnect(audioContext.destination);\n          ssStream.end();\n          socket.emit(\"STOP_SPEECH\", {});\n        }\n      } else {\n        this.errors.push(\"Uuid does not exists. You are not able to use translation feature\")\n        console.error(\"uuid does not exists\");\n      }\n    },\n    errorCallback(error) {\n      console.log('errorCallback:', error);\n    },\n  },\n  created() {\n\n    const that = this;\n\n    if (that.$route.params.uuid) {\n\n      that.uuid = that.$route.params.uuid;\n\n      socket.emit(\"join\", { room: that.uuid }, (err) => {\n        if (err) {\n            return console.error(\"Join to room:\", err)\n        }\n      });\n\n      socket.on(\"SPEECH_RESULTS\", function (result_data) {\n        if (that.userUuid === result_data.uuid) {\n          that.textResult = result_data.text;\n          console.log(\"SPEECH2TEXT_RESULT:\", that.textResult);\n        }\n      });\n\n      socket.on(\"TEXT2SPEECH_RESULTS\", async function (result) {\n        if (that.userUuid === result.uuid) {\n          console.log(\"TEXT2SPEECH_RESULTS:\", result.data);\n          const audioContext = new AudioContext();\n          const audio = await audioContext.decodeAudioData(result.data);\n          const source = audioContext.createBufferSource();\n          source.buffer = audio;\n          source.connect(audioContext.destination);\n          source.start(0);\n        }\n      });\n\n      if (navigator.mediaDevices.getUserMedia) {\n        console.log(\"getUserMedia supported...\");\n        navigator.webkitGetUserMedia(\n          { audio: true },\n          async function (stream) {\n            try {\n              await that.successCallback(stream);\n            } catch (error) {\n              that.errorCallback(error);\n            }\n          },\n          function (error) {\n            console.log(\"Error-Callback:\", error);\n          }\n        );\n      } else {\n        console.log(\"getUserMedia not supported on your browser!\");\n      }\n    } else {\n      that.errors.push(\"Uuid does not exists. You are not able to use translation feature\")\n      console.error(\"uuid does not exists\");\n    }\n  },\n  beforeDestroy() {\n    scriptNode.disconnect(audioContext.destination);\n    ssStream.end();\n    socket.emit(\"STOP_SPEECH\", {});\n  },\n}","let ebml = document.createElement('script')\nebml.setAttribute('src', '/js/EBML.js')\ndocument.head.appendChild(ebml)\n\nimport { mapGetters, mapActions } from 'vuex'\n\nimport io from 'socket.io-client'\nimport RTCMultiConnection from 'rtcmulticonnection'\nimport * as RecordRTC from '@resources/public/js/recordrtc/RecordRTC.js'\n\nimport '@resources/public/js/adapter-latest.js'\nimport hark from 'hark/hark.bundle.js'\n\nimport 'fbr'\nimport screenfull from 'screenfull'\nimport axios from 'axios'\n\nimport { setupPusher } from '@js/echo-setup'\nimport { initMedia, showMediaPermissionError, playIncomingMessage, playScreenshot, share } from '@core/utils/media'\nimport { calculateTimeDuration, hmsToSeconds, loadScript } from '@core/utils'\nimport { clearStore } from '@core/utils/auth'\nimport { areEqual } from '@core/utils/form'\nimport * as MomentTz from '@core/filters/momentz'\nimport VuMeter from '@core/plugins/vumeter'\n\nimport '@core/plugins/detect-duplicate-tab'\nimport { swtToast, Swal } from '@core/configs/sweet-alert'\nimport * as UploaderAPI from '@api/uploader'\n\nwindow.io = io\nwindow.hark = hark\n\nexport default {\n    components: {\n        RTCMultiConnection,\n    },\n    data() {\n        return {\n            uuid: null,\n            entity: null,\n            entityDatesBackup: {},\n            isLoading: false,\n            prevRoute: null,\n\n            fullScreenItemId: null,\n            meetingRoomId: null,\n            initUrl: 'meetings',\n            fallBackRoute: 'appMeetingList',\n            newMessages: false,\n            roomIdAlive: false,\n            showFlipClock: true,\n            duplicateTab: false,\n            fullScreenInOn: false,\n            mediaDeviceIssue: false,\n            permissionRejected: false,\n            needStreamAddOrReplace: false,\n            membersLive: [],\n            videoList: [],\n            liveParticipants: [],\n            mediaConfigFormData: {},\n            mediaConfigurations: {\n                selectedAudioInput: null,\n                selectedAudioOutput: null,\n                selectedVideoInput: null,\n                activeAudioInput: null,\n                activeVideoInput: null,\n                activeFacingMode: null,\n                selectedResolution: 'Auto',\n                facingMode: 'auto',\n                frameRate: 'auto',\n                bandwidth: {\n                    audio: 'auto',\n                    video: 'auto',\n                    screen: 'auto',\n                    audioMin: 6,\n                    videoMin: 100,\n                    screenMin: 300,\n                },\n                recording: {\n                    type: 'video',\n                    mimeType: 'video/webm',\n                    timeSlice: 5000,\n                    disableLogs: false,\n                }\n            },\n            audioBandwidthOpts: [\n                { uuid: 'auto', label: 'Auto' },\n                { uuid: 64, label: '64 kbps' },\n                { uuid: 128, label: '128 kbps' },\n                { uuid: 256, label: '256 kbps' },\n                { uuid: 510, label: '512 kbps' },\n            ],\n            videoBandwidthOpts: [\n                { uuid: 'auto', label: 'Auto' },\n                { uuid: 128, label: '128 kbps' },\n                { uuid: 256, label: '256 kbps' },\n                { uuid: 512, label: '512 kbps' },\n                { uuid: 1024, label: '1 mbps' },\n                { uuid: 2000, label: '2 mbps' },\n            ],\n            screenBandwidthOpts: [\n                { uuid: 'auto', label: 'Auto' },\n                { uuid: 512, label: '512 kbps' },\n                { uuid: 1024, label: '1 mbps' },\n                { uuid: 2048, label: '2 mbps' },\n                { uuid: 3000, label: '3 mbps' },\n                { uuid: 4000, label: '4 mbps' },\n            ],\n            mediaDevices: {\n                audioInput: [\n                    { uuid: 'auto', name: 'Auto' },\n                ],\n                audioOutput: [\n                    { uuid: 'auto', name: 'Auto' },\n                ],\n                videoInput: [\n                    { uuid: 'auto', name: 'Auto' },\n                ],\n                resolutions: [\n                    { label: 'Auto', constraints: {} },\n                    { label: '240p', constraints: { width: { max: 320, ideal: 320 }, height: { max: 240, ideal: 240 } } },\n                    { label: '240p Wide', constraints: { width: { max: 426, ideal: 426 }, height: { max: 240, ideal: 240 } }, wide: true },\n                    { label: '360p', constraints: { width: { max: 640, ideal: 640 }, height: { max: 480, ideal: 480 } } },\n                    { label: '360p Wide', constraints: { width: { max: 640, ideal: 640 }, height: { max: 360, ideal: 360 } }, wide: true },\n                    { label: '720p', constraints: { width: { max: 960, ideal: 960 }, height: { max: 720, ideal: 720 } } },\n                    { label: '720p Wide', constraints: { width: { max: 1280, ideal: 1280 }, height: { max: 720, ideal: 720 } }, wide: true },\n                    { label: '1080p', constraints: { width: { max: 1920, ideal: 1920 }, height: { max: 1080, ideal: 1080 } } },\n                    { label: '4K', constraints: { width: { max: 4096, ideal: 4096 }, height: { max: 2160, ideal: 2160 } } },\n                ],\n                facingModes: [\n                    { uuid: 'auto', label: 'Auto' },\n                    { uuid: 'user', label: 'User' },\n                    { uuid: 'environment', label: 'Environment' },\n                ],\n                frameRates: [\n                    { uuid: 'auto', label: 'Auto' },\n                    { uuid: 30, label: '30 fps' },\n                    { uuid: 60, label: '60 fps' },\n                ],\n            },\n            socketURL: 'aHR0cHM6Ly9zaWduYWwua29kZW1pbnQuaW46OTAwMS8=',\n            // socketURL: 'aHR0cDovL2xvY2FsaG9zdDo5MDAxLw==',\n            rtcmConnection: null,\n            localVideo: null,\n            localScreenStreamid: null,\n            localWhiteboardStreamid: null,\n            localGreenRoomStream: null,\n            audioConstraints: {},\n            videoConstraints: {},\n            pageConfigs: {\n                hasAgenda: true,\n                enableChat: true,\n                enableAudio: true,\n                enableVideo: true,\n                showEnableAudioBtn: true,\n                showEnableVideoBtn: true,\n                showDeviceConfig: true,\n                enableScreenSharing: true,\n                enableRecording: true,\n                enableAutoRecording: false,\n                autoUploadRecording: false,\n                autoUploadRecorded: false,\n                canStopAutoRecording: false,\n                recordingTimeSlice: 5000,\n                enableHandGesture: true,\n                enableWhiteboard: false,\n                footerAutoHide: false,\n                disableScroll: false,\n                speechDetection: false,\n                muteParticipantsOnStart: false,\n                allowJoiningWithoutDevices: false,\n                enableFileSharing: true,\n                enableLinkSharing: true,\n                enableRecogText: true,\n                enableRecogVoice: true,\n                enableSnapshot: false,\n                anyoneCanTakeSnapshot: false,\n                enableSnapshotAlert: false,\n                snapshotAlertToUserOnly: false,\n                snapshotAlertToModerators: false,\n                askHostBeforeJoining: false,\n                preferRearCameraFirst: false,\n                enableUserAvatar: false,\n                enableFullUserAvatar: false,\n                enableMeetingInfo: false,\n                forceUpdateUsername: false,\n                autoEndMeeting: false,\n                alertBeforeAutoEnd: false,\n                canSnoozeAutoEnd: false,\n                canCancelAutoEnd: false,\n                alertBeforeAutoEndTime: 1,\n                endTimeSnoozePeriod: 1,\n                layout: 'fullpage',\n                lastLayout: 'fullpage',\n                maxParticipantCount: 1000,\n            },\n            meetingRulesHost: {\n                session: {\n                    audio: false,\n                    video: false,\n                    screen: false,\n                    data: false,\n                    oneway: false,\n                },\n                mediaConstraints: {\n                    audio: false,\n                    video: false,\n                    screen: false,\n                },\n                mandatory: {\n                    OfferToReceiveAudio: false,\n                    OfferToReceiveVideo: false,\n                },\n                autoCloseEntireSession: false,\n            },\n            meetingRulesGuest: {\n                session: {\n                    audio: false,\n                    video: false,\n                    screen: false,\n                    data: false,\n                    oneway: false,\n                },\n                mediaConstraints: {\n                    audio: false,\n                    video: false,\n                    screen: false,\n                },\n                mandatory: {\n                    OfferToReceiveAudio: false,\n                    OfferToReceiveVideo: false,\n                },\n                autoCloseEntireSession: false,\n            },\n            snoozeOpts: [\n                { uuid: 5, name: 5, type: 'm' },\n                { uuid: 10, name: 10, type: 'm' },\n                { uuid: 15, name: 15, type: 'm' },\n                { uuid: 30, name: 30, type: 'm' },\n                { uuid: 60, name: 1, type: 'h' },\n            ],\n            isHandUp: false,\n            recording: false,\n            recorded: false,\n            recordingPaused: false,\n            recordingDuration: null,\n            meetingDuration: null,\n            showDevicesModal: false,\n            showFileSharing: false,\n            showWhiteboard: false,\n            showMeetingInfo: true,\n            showAgenda: true,\n            fileSharingConnection: null,\n            canvasDesigner: null,\n            autoEndingToast: null,\n            stopNavigation: false,\n            hasNativeShare: !!navigator.share,\n            stopNavigationMessage: '',\n            recordedFilesToUpload: [],\n            micVolumeActivity: 20,\n            alreadyAcceptedParticipants: {},\n            autoTranslate: null,\n        }\n    },\n    computed: {\n        ...mapGetters('config', [\n            'configs',\n            'uiConfigs',\n            'vars',\n        ]),\n        user() {\n            return {\n                uuid: this.userUuid,\n                username: this.username,\n                name: this.profile.name,\n            }\n        },\n        hasVideos() {\n            return this.videoList && this.videoList.length > 0 ? this.videoList.length : 0\n        },\n        // videos() {\n        //     return this.videoList\n        // },\n        hasVideosClasses() {\n            if (!this.hasVideos) {\n                return 'has-no-video'\n            }\n            let toReturn = 'has-videos ' + (this.pageConfigs.disableScroll ? 'disable-scroll ' : '') + `has-${this.hasVideos}-videos `\n            const rows = this.hasVideos > 15 ? 4 : (this.hasVideos > 8 ? 3 : (this.hasVideos > 3 ? 2 : 1))\n            const itemPerRows = this.hasVideos > 20 ? 6 : (this.hasVideos === 16 ? 4 : (this.hasVideos > 12 ? 5 : (this.hasVideos > 9 ? 4 : (this.hasVideos === 9 ? 3 : (this.hasVideos > 6 ? 4 : (this.hasVideos > 4 ? 3 : (this.hasVideos === 4 ? 2 : this.hasVideos)))))))\n\n            return toReturn + (this.hasVideos > 20 ? 'has-gt-20-videos' : (this.hasVideos > 12 ? 'has-gt-12-videos' : (this.hasVideos > 4 ? 'has-gt-4-videos' : (this.hasVideos > 1 ? 'has-2-3-videos' : 'has-1-video')))) + ` has-${rows}-rows has-${itemPerRows}-per-row`\n        },\n        liveMembersCount() {\n            return this.membersLive.length - 1\n        },\n        startDateTimeIsFuture() {\n            const isInFuture = this.entity && this.showFlipClock && this.isStartDateTimeInFuture()\n            if (isInFuture) {\n                this.startCountDown()\n            } else {\n                if (window.countdownInterval) {\n                    clearInterval(window.countdownInterval)\n                }\n            }\n            return isInFuture\n        },\n        enableLogs() {\n            return (this.rtcmConnection && this.rtcmConnection.enableLogs) || this.configs.meeting.debugMode\n        },\n        participantCount() {\n            return this.liveParticipants.length + 1\n        },\n        coverPageStyles() {\n            return this.entity && this.entity.cover && this.hasVideos ? {\n                backgroundImage: 'url(' + this.entity.cover + ')',\n            } : {}\n        }\n    },\n    watch: {\n        liveMembersCount(newVal, oldVal) {\n            if (!window.isLiveMeetingDestroyed && newVal !== oldVal) {\n                this.meetingRoomCreated(this.entity)\n            }\n        },\n    },\n    methods: {\n        ...mapActions('config', [\n            'SetUiConfig',\n        ]),\n        ...mapActions('common', [\n            'Init',\n            'Get',\n            'Custom',\n            'GetPreRequisite',\n        ]),\n\n        stopAutoEndMeeting() {\n            if (window.autoEndMeetingTimeout) {\n                clearTimeout(window.autoEndMeetingTimeout)\n                window.autoEndMeetingTimeout = null\n            }\n            if (this.autoEndingToast && this.autoEndingToast.close && _.isFunction(this.autoEndingToast.close)) {\n                swtToast.close()\n                this.autoEndingToast = null\n            }\n        },\n        startAutoEndMeeting(toEndIn = 300) { //300 seconds\n            if (window.autoEndMeetingTimeout) {\n                clearTimeout(window.autoEndMeetingTimeout)\n                window.autoEndMeetingTimeout = null\n            }\n            window.autoEndMeetingTimeout = setTimeout(() => {\n                if (this.entity.canModerate) {\n                    this.endMeeting(false)\n                } else {\n                    this.getOffline()\n                }\n            }, 1000 * toEndIn) //1000*toEndIn\n        },\n        startMeetingTimer() {\n            if (window.meetingDurationInterval) {\n                this.meetingDuration = null\n                clearInterval(window.meetingDurationInterval)\n            }\n\n            if (!this.entity || this.entity.status !== 'live') {\n                return\n            }\n\n            const checkAutoEndMeeting = () => {\n\n                if (!this.entity || this.entity.status !== 'live') {\n                    this.stopAutoEndMeeting()\n                    this.stopMeetingTimer()\n                    return\n                }\n\n                if (this.pageConfigs.autoEndMeeting && this.entity.estimatedEndTime) {\n                    const autoEndTimeAlert = this.pageConfigs.alertBeforeAutoEndTime || 5 //in minutes\n                    const estimatedEndTime = moment(this.entity.estimatedEndTime, this.vars.serverDateTimeFormat)\n                    const timeRightNow = MomentTz.now({ moment: true })\n\n                    const toEndIn = ((estimatedEndTime.valueOf() - timeRightNow.valueOf()) / 1000).toFixed(0)\n\n                    if (toEndIn <= 0) {\n                        if (window.autoEndMeetingTimeout) {\n                            clearInterval(window.autoEndMeetingTimeout)\n                            window.autoEndMeetingTimeout = null\n                        }\n\n                        if (this.entity.canModerate) {\n                            this.endMeeting(false)\n                        } else {\n                            this.getOffline()\n                        }\n                    } else if (toEndIn <= ((autoEndTimeAlert) * 60)) {\n                        let toEndInTime = calculateTimeDuration(toEndIn) + ' ' + $t('list.general.durations.seconds')\n\n                        if (toEndIn >= 60) {\n                            toEndInTime = calculateTimeDuration(toEndIn) + ' ' + $t('list.general.durations.minutes')\n                        } else if (toEndIn >= 3600) {\n                            toEndInTime = calculateTimeDuration(toEndIn) + ' ' + $t('list.general.durations.hours')\n                        }\n\n\n                        if (this.pageConfigs.alertBeforeAutoEnd) {\n\n                            if (window.autoEndMeetingTimeout && this.autoEndingToast && Swal.isVisible() && Swal.isTimerRunning()) {\n\n                                swtToast.update({\n                                    title: $t('meeting.auto_ending_msg', { attribute: toEndInTime }),\n                                })\n\n                            } else {\n\n                                if (!this.autoEndingToast && Swal.isVisible()) {\n                                    return\n                                }\n\n                                if (this.autoEndingToast && this.autoEndingToast.close && _.isFunction(this.autoEndingToast.close)) {\n                                    swtToast.close()\n                                    this.autoEndingToast = null\n                                }\n\n                                if (this.entity.canModerate) {\n                                    let toastObj = {\n                                        iconHtml: '<i class=\"far fa-clock\"></i>',\n                                        title: $t('meeting.auto_ending_msg', { attribute: toEndInTime }),\n                                        timer: toEndIn * 1000,\n                                        showConfirmButton: false,\n                                        showDenyButton: false,\n                                        position: 'bottom',\n                                    }\n\n                                    if (this.pageConfigs.canSnoozeAutoEnd) {\n                                        toastObj.showConfirmButton = true\n                                        toastObj.confirmButtonText = $t('meeting.snooze')\n                                    }\n\n                                    if (this.pageConfigs.canCancelAutoEnd) {\n                                        toastObj.showDenyButton = true\n                                        toastObj.denyButtonText = $t('meeting.keep_meeting_live')\n                                    }\n\n                                    this.autoEndingToast = swtToast.fire(toastObj).then((result) => {\n\n                                        if (result.isConfirmed && this.pageConfigs.canSnoozeAutoEnd) {\n\n                                            this.stopAutoEndMeeting()\n                                            this.entity.estimatedEndTime = moment(this.entity.estimatedEndTime, this.vars.serverDateTimeFormat).add(10, 'minutes').format(this.vars.serverDateTimeFormat)\n                                            this.meetingAction('snooze-end-time', { period: this.pageConfigs.endTimeSnoozePeriod || 5 }, { alert: false, inform: { endTimeSnoozed: true } })\n                                            swtToast.close()\n                                            this.autoEndingToast = null\n\n                                        } else if (result.isDenied && this.pageConfigs.canCancelAutoEnd) {\n\n                                            this.stopAutoEndMeeting()\n                                            this.pageConfigs.autoEndMeeting = false\n                                            this.meetingAction('cancel-auto-end', null, { alert: false, inform: { autoEndCancelled: true } })\n                                            swtToast.close()\n                                            this.autoEndingToast = null\n\n                                        }\n                                    })\n\n                                } else {\n\n                                    this.autoEndingToast = swtToast.fire({\n                                        iconHtml: '<i class=\"far fa-clock\"></i>',\n                                        title: $t('meeting.auto_ending_msg', { attribute: toEndInTime }),\n                                        timer: toEndIn * 1000,\n                                        showConfirmButton: false,\n                                        position: 'bottom',\n                                    })\n                                }\n                            }\n                        }\n\n                        if (!(window.autoEndMeetingTimeout && this.autoEndingToast)) {\n                            this.stopAutoEndMeeting()\n                            this.startAutoEndMeeting(toEndIn)\n                        }\n\n                    } else if (toEndIn > ((autoEndTimeAlert) * 60)) {\n                        if (this.autoEndingToast && this.autoEndingToast.close && _.isFunction(this.autoEndingToast.close)) {\n                            swtToast.close()\n                            this.autoEndingToast = null\n                        }\n                    } else {\n                        this.stopAutoEndMeeting()\n                    }\n                }\n            }\n\n            const meetingStartedAt = moment(this.entity.startedAt, this.vars.serverDateTimeFormat).valueOf()\n\n            window.meetingDurationInterval = window.setInterval(() => {\n                const timeNow = MomentTz.now({ moment: true }).valueOf()\n                this.meetingDuration = calculateTimeDuration((timeNow - meetingStartedAt) / 1000)\n\n                checkAutoEndMeeting()\n            }, 1000)\n        },\n        stopMeetingTimer() {\n            if (window.meetingDurationInterval) {\n                this.meetingDuration = null\n                clearInterval(window.meetingDurationInterval)\n            }\n        },\n\n        configPageUrl() {\n            let routeData = this.$router.resolve({ name: 'appMeetingSingleConfig', params: { subUuid: this.uuid } });\n            return routeData.href\n        },\n\n        snapshotsPageUrl() {\n            let routeData = this.$router.resolve({ name: 'appMeetingSnapshots', params: { uuid: this.uuid } });\n            return routeData.href\n        },\n\n        recordingsPageUrl() {\n            let routeData = this.$router.resolve({ name: 'appMeetingRecordings', params: { uuid: this.uuid } });\n            return routeData.href\n        },\n\n        share() {\n            this.shareURL(null, true)\n        },\n        shareURL(event, forceNativeShare = false) {\n            if (!this.entity) {\n                return\n            }\n\n            this.$gaEvent('engagement', 'shareURL', 'Shown')\n\n            let url = window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '')\n\n            url = url + (this.entity.identifier ? `/m/${this.entity.identifier}` : `/app/live/meetings/${this.entity.uuid}`)\n\n            const alertTitle = this.entity.identifier ? `<span class=\"text-nowrap\">${$t('meeting.meeting_code')}:</span> <strong class=\"ml-2 text-wrap-pre-line text-word-break-all\"> ${this.entity.identifier}</strong>` : null\n\n            share({\n                title: $t('meeting.user_inviting_msg', { attribute: this.user.name }),\n                alertTitle: alertTitle,\n                alertHtml:\n                    `${$t('misc.share_alert.text')}<br>` +\n                    `<small class='text-muted'>${url}</small><br>`,\n                url: url\n            }, () => {\n                this.$gaEvent('engagement', 'shareURL', 'Copied')\n\n                this.$toasted.success($t('meeting.url_has_been_copied'), this.$toastConfig)\n            }, forceNativeShare)\n        },\n\n        // query / countdown / timer methods\n        isStartDateTimeInFuture() {\n            return this.entity && this.entity.startDateTime && moment(this.entity.startDateTime, this.vars.serverDateTimeFormat).isAfter(MomentTz.now({ moment: true }))\n        },\n        startCountDown() {\n            if (window.countdownInterval) {\n                clearInterval(window.countdownInterval)\n            }\n\n            window.countdownInterval = window.setInterval(() => {\n                if (this.isStartDateTimeInFuture()) {\n                    this.showFlipClock = true\n                } else {\n                    if (this.showFlipClock && !document.hasFocus()) {\n                        playIncomingMessage()\n                    }\n                    this.showFlipClock = false\n                }\n            }, 1000)\n        },\n        stopKeepAlivePolling() {\n            if (window.meetingKeepAliveTimer) {\n                clearInterval(window.meetingKeepAliveTimer)\n                window.meetingKeepAliveTimer = null\n            }\n        },\n        startKeepAlivePolling() {\n            if (window.meetingKeepAliveTimer) {\n                clearInterval(window.meetingKeepAliveTimer)\n                window.meetingKeepAliveTimer = null\n            }\n\n            if (!this.entity || this.entity.status !== 'live') {\n                return\n            }\n\n            window.meetingKeepAliveTimer = setInterval(() => {\n                this.Custom({\n                    url: `/${this.initUrl}/${this.uuid}/keep-alive`,\n                    method: 'post',\n                    silent: true,\n                })\n                    .then(response => {\n                    })\n                    .catch(error => {\n                    })\n            }, 300000) //1000*60*5 = 5 minutes\n        },\n\n        takeSnapshotOfStream(item, itemIndex) {\n            if (!(this.pageConfigs.enableSnapshot && (this.entity.canModerate || this.pageConfigs.anyoneCanTakeSnapshot))) {\n                return\n            }\n\n            this.$gaEvent('engagement', 'takeSnapshot')\n\n            const image = this.takeSnapshot(this.$refs.videos[itemIndex], !item.disableMirror)\n            const name = `${item.extra.username} stream by ${this.username}`\n\n            this.Custom({\n                url: `/${this.initUrl}/${this.uuid}/snapshots`,\n                method: 'post',\n                data: {\n                    image,\n                    name\n                }\n            })\n                .then(response => {\n                    this.$toasted.info($t('meeting.snapshot_taken'), {\n                        ...this.$toastConfig.info,\n                        duration: 10000,\n                        icon: { name: 'fa-download' },\n                        action: {\n                            text: 'View / Download',\n                            href: response.fullUrl,\n                            target: '_blank',\n                        },\n                    })\n                })\n                .catch(error => {\n                    this.isLoading = false\n                    formUtil.handleErrors(error)\n                })\n\n            this.informAboutSnapshot(item)\n            playScreenshot()\n        },\n        takeSnapshot(video, enableMirror) {\n            var canvas = document.createElement('canvas')\n            canvas.width = (video.videoWidth || video.clientWidth) * 2\n            canvas.height = (video.videoHeight || video.clientHeight) * 2\n\n            var context = canvas.getContext('2d')\n            if (this.configs.meeting && this.configs.meeting.mirroredVideo && enableMirror) {\n                context.translate(canvas.width, 0)\n                context.scale(-1, 1)\n            }\n            context.drawImage(video, 0, 0, canvas.width, canvas.height)\n\n            return canvas.toDataURL('image/png')\n        },\n        informAboutSnapshot(item) {\n            if (this.pageConfigs.enableSnapshotAlert) {\n                this.emitSocketEvents('snapshotTaken', {\n                    byUser: this.user,\n                    ofUser: item.extra,\n                    item\n                })\n            }\n        },\n        informAboutMeetingUpdate(data) {\n            this.emitSocketEvents('meetingUpdated', {\n                data\n            })\n        },\n        checkPendingUploads: _.throttle(function () {\n            const uploadsPending = this.recordedFilesToUpload.filter(obj => obj.status === 'waiting' || obj.status === 'uploading')\n\n            if (uploadsPending.length) {\n                this.stopNavigation = true\n                this.stopNavigationMessage = $t('meeting.uploads_pending_message')\n            } else {\n                this.stopNavigation = false\n                this.stopNavigationMessage = ''\n            }\n            this.uploadRecording()\n        }, 500, {\n            'leading': true,\n            'trailing': false\n        }),\n\n        uploadRecording(data) {\n            const startUploading = _.throttle(() => {\n                const filesToUpload = this.recordedFilesToUpload.filter(obj => obj.status === 'waiting' && obj.chunk)\n                const filesBeingUploaded = this.recordedFilesToUpload.filter(obj => obj.status === 'uploading' && obj.chunk)\n\n                if (filesToUpload.length) {\n                    let onUploadProgressArr = []\n                    const CancelToken = axios.CancelToken\n                    const maxRequestSlot = 5\n                    let freeRequestSlot = maxRequestSlot - filesBeingUploaded.length\n\n                    for (let i = this.recordedFilesToUpload.length - 1; i >= 0 && freeRequestSlot > 0; i--) {\n                        const uploadObj = this.recordedFilesToUpload[i]\n\n                        onUploadProgressArr[i] = (progressEvent) => {\n                            uploadObj.progress = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n                        }\n\n                        if (uploadObj.status === 'waiting') {\n                            freeRequestSlot = freeRequestSlot - 1\n                            let formData = new FormData()\n                            formData.append('file', uploadObj.blob)\n                            formData.append('mime', uploadObj.mime)\n                            formData.append('request_uuid', uploadObj.requestUuid)\n                            formData.append('order', uploadObj.order)\n                            formData.append('chunk', uploadObj.chunk)\n\n                            uploadObj.status = 'uploading'\n\n                            let cancelToken = new CancelToken(c => {\n                                uploadObj.cancel = c;\n                            })\n\n                            UploaderAPI.uploadFile({\n                                url: `/${this.initUrl}/${this.uuid}/recordings`,\n                                data: formData,\n                                silent: true,\n                            }, onUploadProgressArr[i], cancelToken)\n                                .then(response => {\n                                    uploadObj.status = 'uploaded'\n                                    delete uploadObj.cancel\n\n                                    this.checkPendingUploads()\n\n                                    setTimeout(() => {\n                                        delete this.recordedFilesToUpload.splice(this.recordedFilesToUpload.findIndex(f => f.uuid === uploadObj.uuid), 1)\n\n                                        this.checkPendingUploads()\n                                    }, 3000)\n                                })\n                                .catch(thrown => {\n\n                                    if (thrown.response && thrown.response.data) {\n                                        const data = thrown.response.data || {}\n                                        const errors = data.errors ? formUtil.assignErrors(data.errors) : {}\n\n                                        uploadObj.error = errors.message\n                                        uploadObj.status = 'error'\n\n                                        // this.$toasted.error(errors.message, this.$toastConfig.error)\n\n                                        // setTimeout(() => {\n                                        //     delete this.recordedFilesToUpload.splice(this.recordedFilesToUpload.findIndex(f => f.uuid === uploadObj.uuid), 1)\n                                        // }, 3000)\n\n                                    } else {\n                                        uploadObj.status = 'cancelled'\n                                        // setTimeout(() => {\n                                        // delete this.recordedFilesToUpload.splice(this.recordedFilesToUpload.findIndex(f => f.uuid === uploadObj.uuid), 1);\n                                        // }, 3000)\n                                    }\n\n                                    this.checkPendingUploads()\n                                })\n                        }\n                    }\n                }\n            }, 1000, {\n                'leading': true,\n                'trailing': false\n            })\n\n\n            if (!data || !data.uuid) {\n                startUploading()\n                return\n            }\n\n            const recordedFileName = ($t('meeting.meeting_recording') + '-' + MomentTz.now({ moment: true }).unix()).kebabCase() + \".webm\"\n\n            if (!this.recordedFilesToUpload) {\n                this.recordedFilesToUpload = []\n            }\n\n            this.recordedFilesToUpload.unshift({\n                uuid: uuid(),\n                chunk: data.chunk,\n                blob: data.blob,\n                mime: data.blob.type,\n                requestUuid: data.uuid,\n                order: data.order,\n                status: 'waiting',\n                name: recordedFileName,\n                progress: 0,\n                error: null,\n            })\n\n            startUploading()\n            this.checkPendingUploads()\n        },\n\n        uploadRecorded(blob, recorderInstance, recordedFileName) {\n            const startUploading = () => {\n                const filesToUpload = this.recordedFilesToUpload.filter(obj => obj.status === 'waiting' && !obj.chunk)\n\n                if (filesToUpload.length) {\n                    let onUploadProgressArr = []\n                    const CancelToken = axios.CancelToken\n\n                    for (let i = this.recordedFilesToUpload.length - 1; i >= 0; i++) {\n                        const uploadObj = this.recordedFilesToUpload[i]\n                        uploadObj.download = downloadRecorded\n\n                        onUploadProgressArr[i] = (progressEvent) => {\n                            uploadObj.progress = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n                        }\n\n                        if (uploadObj.status === 'waiting') {\n                            let formData = new FormData()\n                            formData.append('file', uploadObj.file)\n                            formData.append('mime', uploadObj.file.type)\n                            formData.append('request_uuid', uploadObj.uuid)\n\n                            uploadObj.status = 'uploading'\n\n                            let cancelToken = new CancelToken(c => {\n                                uploadObj.cancel = c;\n                            })\n\n                            UploaderAPI.uploadFile({\n                                url: `/${this.initUrl}/${this.uuid}/recordings`,\n                                data: formData,\n                                silent: true,\n                            }, onUploadProgressArr[i], cancelToken)\n                                .then(response => {\n                                    uploadObj.status = 'uploaded'\n                                    delete uploadObj.cancel\n\n                                    this.checkPendingUploads()\n\n                                    setTimeout(() => {\n                                        delete this.recordedFilesToUpload.splice(this.recordedFilesToUpload.findIndex(f => f.uuid === uploadObj.uuid), 1)\n\n                                        this.checkPendingUploads()\n                                    }, 3000)\n                                })\n                                .catch(thrown => {\n\n                                    if (thrown.response && thrown.response.data) {\n                                        const data = thrown.response.data || {}\n                                        const errors = data.errors ? formUtil.assignErrors(data.errors) : {}\n\n                                        uploadObj.error = errors.message\n                                        uploadObj.status = 'error'\n\n                                        this.$toasted.error(errors.message, this.$toastConfig.error)\n\n                                        // setTimeout(() => {\n                                        // delete this.recordedFilesToUpload.splice(this.recordedFilesToUpload.findIndex(f => f.uuid === uploadObj.uuid), 1)\n                                        // }, 3000)\n\n                                    } else {\n                                        uploadObj.status = 'cancelled'\n                                        // setTimeout(() => {\n                                        // delete this.recordedFilesToUpload.splice(this.recordedFilesToUpload.findIndex(f => f.uuid === uploadObj.uuid), 1);\n                                        // }, 3000)\n                                    }\n\n                                    this.checkPendingUploads()\n                                })\n                        }\n                    }\n                }\n            }\n\n            const downloadRecorded = (seekableBlob) => {\n                const recordedVideo = URL.createObjectURL(seekableBlob)\n\n                const downloadLinkBtn = document.createElement(\"a\")\n\n                RecordRTC.invokeSaveAsDialog(seekableBlob, recordedFileName)\n\n                downloadLinkBtn.style.display = \"none\"\n                downloadLinkBtn.href = recordedVideo\n                downloadLinkBtn.download = recordedFileName\n                document.body.appendChild(downloadLinkBtn)\n                // downloadLinkBtn.click()\n\n                setTimeout(() => {\n                    document.body.removeChild(downloadLinkBtn)\n                    window.URL.revokeObjectURL(downloadLinkBtn)\n                    this.recorded = false\n                }, 100)\n            }\n\n            const recFormat = this.mediaConfigurations.recording && this.mediaConfigurations.recording.mimeType ? this.mediaConfigurations.recording.mimeType : 'video/webm'\n\n            // we need to upload \"File\" --- not \"Blob\"\n            const fileObject = new File([blob], recordedFileName, {\n                type: recFormat\n            })\n\n            if (fileObject.size > this.configs.system.postMaxSize) {\n\n                this.$toasted.error(this.$t('global.file_too_large', { attribute: fileObject.name }), this.$toastConfig.error)\n\n            } else {\n\n                if (!this.recordedFilesToUpload) {\n                    this.recordedFilesToUpload = []\n                }\n\n                this.recordedFilesToUpload.unshift({\n                    uuid: uuid(),\n                    chunk: false,\n                    blob: blob,\n                    file: fileObject,\n                    status: 'waiting',\n                    progress: 0,\n                    error: null,\n                })\n\n                startUploading()\n            }\n\n            this.checkPendingUploads()\n            recorderInstance.reset()\n            recorderInstance = null\n            if (this.rtcmConnection) {\n                this.rtcmConnection.recorder = null\n            }\n        },\n        startRecording() {\n            this.$gaEvent('engagement', 'startRecording')\n\n            if (!(this.pageConfigs.enableRecording && this.entity.canModerate)) {\n                return\n            }\n\n            this.recording = true\n            this.recorded = false\n\n            if (this.configs.meeting.debugMode) {\n                this.mediaConfigurations.recording.disableLogs = false\n            } else {\n                this.mediaConfigurations.recording.disableLogs = true\n            }\n\n            let recorderInstance = this.rtcmConnection.recorder\n            if (recorderInstance) {\n                return\n            }\n\n            let streamsToRecord = []\n            let blobs = []\n            const recordingUuid = uuid()\n\n            this.rtcmConnection.streamEvents.selectAll().forEach((streamEvent) => {\n                streamsToRecord.push(streamEvent.stream)\n            })\n\n            if (this.pageConfigs.autoUploadRecording) {\n                this.mediaConfigurations.recording.ondataavailable = (blob) => {\n                    blobs.push(blob)\n                    this.uploadRecording({\n                        uuid: recordingUuid,\n                        chunk: true,\n                        blob: blob,\n                        order: blobs.length\n                    })\n                }\n            }\n\n            recorderInstance = RecordRTC(streamsToRecord, this.mediaConfigurations.recording)\n\n            this.rtcmConnection.recorder = recorderInstance\n\n            recorderInstance.startRecording()\n\n            const recordingStartedAt = new Date().getTime()\n\n            if (window.recordingDurationInterval) {\n                this.recordingDuration = null\n                clearInterval(window.recordingDurationInterval)\n            }\n\n            window.recordingDurationInterval = window.setInterval(() => {\n                this.recordingDuration = calculateTimeDuration((new Date().getTime() - recordingStartedAt) / 1000)\n            }, 1000)\n\n            recorderInstance = null\n        },\n        pauseRecording() {\n            this.$gaEvent('engagement', 'pauseRecording')\n\n            this.recordingPaused = true\n            let recorderInstance = this.rtcmConnection.recorder\n\n            if (!recorderInstance) {\n                return alert('No recorder found!')\n            }\n\n            recorderInstance.pauseRecording()\n\n            if (window.recordingDurationInterval) {\n                clearInterval(window.recordingDurationInterval)\n            }\n\n            recorderInstance = null\n        },\n        resumeRecording() {\n            this.$gaEvent('engagement', 'resumeRecording')\n\n            this.recordingPaused = false\n            let recorderInstance = this.rtcmConnection.recorder\n\n            if (!recorderInstance) {\n                return alert('No recorder found!')\n            }\n\n            recorderInstance.resumeRecording()\n\n            const recordingResumedAt = new Date().getTime()\n            const recordingDurationBeforePaused = hmsToSeconds(this.recordingDuration || '00:00')\n\n            if (window.recordingDurationInterval) {\n                clearInterval(window.recordingDurationInterval)\n            }\n\n            window.recordingDurationInterval = window.setInterval(() => {\n                this.recordingDuration = calculateTimeDuration(recordingDurationBeforePaused + ((new Date().getTime() - recordingResumedAt) / 1000))\n            }, 1000)\n\n            recorderInstance = null\n        },\n        stopRecording() {\n            this.$gaEvent('engagement', 'stopRecording')\n\n            this.checkPendingUploads()\n\n            this.recording = false\n            this.recorded = true\n            let recorderInstance = this.rtcmConnection.recorder\n\n            if (!recorderInstance) {\n                return alert('No recorder found!')\n            }\n\n            recorderInstance.stopRecording(() => {\n                if (window.recordingDurationInterval) {\n                    this.recordingDuration = null\n                    clearInterval(window.recordingDurationInterval)\n                    window.recordingDurationInterval = null\n                }\n\n                const recordedFileName = ($t('meeting.meeting_recording') + '-' + MomentTz.now({ moment: true }).unix()).kebabCase() + \".webm\"\n\n                RecordRTC.getSeekableBlob(recorderInstance.getBlob(), (seekableBlob) => {\n                    this.checkPendingUploads()\n\n                    if (!this.pageConfigs.autoUploadRecording) {\n                        if (this.pageConfigs.autoUploadRecorded) {\n\n                            this.uploadRecorded(seekableBlob, recorderInstance, recordedFileName)\n\n                        } else {\n\n                            swtAlert.fire({\n                                title: $t('meeting.recorded_meeting'),\n                                allowOutsideClick: false,\n                                allowEscapeKey: false,\n                                position: 'bottom',\n                                showDenyButton: true,\n                                showCancelButton: true,\n                                confirmButtonText: `<i class=\"fas fa-download\"></i> ${$t('general.download')}`,\n                                denyButtonText: `<i class=\"fas fa-upload\"></i> ${$t('general.upload')}`,\n                                cancelButtonText: `${$t('general.cancel')}`,\n                                customClass: {\n                                    confirmButton: 'btn btn-success',\n                                    cancelButton: 'btn btn-danger',\n                                    denyButton: 'btn btn-primary',\n                                },\n                            })\n                                .then((result) => {\n\n                                    if (result.isConfirmed) {\n\n                                        const recordedVideo = URL.createObjectURL(seekableBlob)\n\n                                        const downloadLinkBtn = document.createElement(\"a\")\n\n                                        RecordRTC.invokeSaveAsDialog(seekableBlob, recordedFileName)\n\n                                        downloadLinkBtn.style.display = \"none\"\n                                        downloadLinkBtn.href = recordedVideo\n                                        downloadLinkBtn.download = recordedFileName\n                                        document.body.appendChild(downloadLinkBtn)\n                                        // downloadLinkBtn.click()\n\n                                        setTimeout(() => {\n                                            document.body.removeChild(downloadLinkBtn)\n                                            window.URL.revokeObjectURL(downloadLinkBtn)\n                                            this.recorded = false\n                                        }, 100)\n\n                                        recorderInstance.reset()\n                                        recorderInstance = null\n                                        if (this.rtcmConnection) {\n                                            this.rtcmConnection.recorder = null\n                                        }\n                                        this.checkPendingUploads()\n\n                                    } else if (result.isDenied) {\n\n                                        this.uploadRecorded(seekableBlob, recorderInstance, recordedFileName)\n                                        this.checkPendingUploads()\n\n                                    } else {\n                                        result.dismiss === Swal.DismissReason.cancel\n\n                                        recorderInstance.reset()\n                                        recorderInstance = null\n                                        if (this.rtcmConnection) {\n                                            this.rtcmConnection.recorder = null\n                                        }\n\n                                        this.checkPendingUploads()\n                                        return\n                                    }\n                                })\n                        }\n                    } else {\n                        recorderInstance.reset()\n                        recorderInstance = null\n                        if (this.rtcmConnection) {\n                            this.rtcmConnection.recorder = null\n                        }\n                    }\n                    this.checkPendingUploads()\n                })\n            })\n        },\n\n        // toggle methods\n        toggleHandUp() {\n            this.$gaEvent('engagement', 'toggleHandUp')\n\n            if (window.lowerHandTimer) {\n                clearTimeout(window.lowerHandTimer)\n                window.lowerHandTimer = null\n            }\n\n            let found = this.$refs.videos.find(video => {\n                return video.id === this.localVideo.id\n            })\n            const videoIndex = this.videoList.findIndex(video => {\n                return video.id === this.localVideo.id\n            })\n\n            if (found && found.srcObject) {\n                const stream = found.srcObject\n\n                this.isHandUp = !this.isHandUp\n                this.videoList[videoIndex].isHandUp = this.isHandUp\n\n                this.emitSocketEvents('remoteHandToggled', {\n                    isHandUp: this.isHandUp,\n                    streamid: stream.streamid\n                })\n\n                if (this.isHandUp) {\n                    window.lowerHandTimer = setTimeout(() => {\n                        this.toggleHandUp()\n                    }, 30000)\n                }\n\n                this.rtcmConnection.extra.isHandUp = this.isHandUp\n                this.updateExtraData()\n            } else {\n                this.localVideo = null\n            }\n        },\n        toggleAudio(event, forceMute = false) {\n\n            this.pageConfigs.enableAudio = forceMute ? false : !this.pageConfigs.enableAudio\n\n            if (this.rtcmConnection) {\n                this.rtcmConnection.extra.audioMuted = !this.pageConfigs.enableAudio\n                this.updateExtraData()\n            }\n\n            if (!(this.$refs.videos && this.$refs.videos.length)) {\n                this.setupGreenRoom()\n                return\n            }\n\n            let found = this.$refs.videos.find(video => {\n                return video.id === this.localVideo.id\n            })\n            const videoIndex = this.videoList.findIndex(video => {\n                return video.id === this.localVideo.id\n            })\n\n            if (found && found.srcObject) {\n                const stream = found.srcObject\n                const tracks = stream.getAudioTracks()\n                tracks.forEach(track => {\n                    if (this.pageConfigs.enableAudio) {\n                        track.enabled = true\n                        this.videoList[videoIndex].audioMuted = false\n                    } else {\n                        track.enabled = false\n                        this.videoList[videoIndex].audioMuted = true\n                    }\n                })\n\n                this.emitSocketEvents('remoteMutedUnmuted', {\n                    audioEnabled: this.pageConfigs.enableAudio,\n                    streamid: stream.streamid\n                })\n            } else {\n                this.localVideo = null\n            }\n        },\n        toggleVideo() {\n            this.pageConfigs.enableVideo = !this.pageConfigs.enableVideo\n\n            if (this.rtcmConnection) {\n                this.rtcmConnection.extra.videoMuted = !this.pageConfigs.enableVideo\n                this.updateExtraData()\n            }\n\n            if (!(this.$refs.videos && this.$refs.videos.length)) {\n                this.setupGreenRoom()\n                return\n            }\n\n            let found = this.$refs.videos.find(video => {\n                return video.id === this.localVideo.id\n            })\n            const videoIndex = this.videoList.findIndex(video => {\n                return video.id === this.localVideo.id\n            })\n\n            if (found && found.srcObject) {\n                const stream = found.srcObject\n                const tracks = stream.getVideoTracks()\n                tracks.forEach(track => {\n                    if (this.pageConfigs.enableVideo) {\n                        track.enabled = true\n                        this.videoList[videoIndex].videoMuted = false\n                    } else {\n                        track.enabled = false\n                        this.videoList[videoIndex].videoMuted = true\n                    }\n                })\n\n                this.emitSocketEvents('remoteMutedUnmuted', {\n                    videoEnabled: this.pageConfigs.enableVideo,\n                    streamid: stream.streamid\n                })\n            } else {\n                this.localVideo = null\n            }\n        },\n        toggleRemoteAudio(videoItem, itemIndex) {\n            if (videoItem.muted) {\n                this.videoList[itemIndex].muted = false\n                this.$refs.videos[itemIndex].muted = false\n            } else {\n                this.videoList[itemIndex].muted = true\n                this.$refs.videos[itemIndex].muted = true\n            }\n        },\n        toggleRemoteAudioSource(item, itemIndex) {\n            this.emitSocketEvents('muteUnmuteRemote', item)\n        },\n        toggleEleFullScreen(videoItem, itemIndex) {\n            const targetParentEl = this.$refs['videoListEle']\n            this.fullScreenItemId = videoItem.id\n            this.$fullscreen.toggle(targetParentEl, {\n                wrap: false,\n                callback: (fullscreen) => {\n                    this.fullScreenInOn = fullscreen\n                }\n            })\n        },\n        toggleFullScreen(to) {\n            if (screenfull.isEnabled) {\n                if (to) {\n                    screenfull.request()\n                } else {\n                    screenfull.exit()\n                }\n            }\n        },\n        toggleFooterAutoHide() {\n            this.pageConfigs.footerAutoHide = !this.pageConfigs.footerAutoHide\n            this.$gaEvent('engagement', 'toggleFooterAutoHide')\n        },\n        toggleLayout(layout) {\n            this.pageConfigs.layout = layout ? layout : this.pageConfigs.layout\n            this.pageConfigs.disableScroll = this.pageConfigs.layout === 'grid' ? true : (this.entity.config && this.entity.config.hasOwnProperty('disableScroll') ? this.entity.config.disableScroll : this.pageConfigs.disableScroll)\n            this.$gaEvent('engagement', 'toggleLayout', layout)\n        },\n        toggleFileSharing() {\n            this.showFileSharing = !this.showFileSharing\n            this.$gaEvent('engagement', 'toggleFileSharing')\n        },\n        toggleAgenda() {\n            this.showAgenda = !this.showAgenda\n            this.$gaEvent('engagement', 'toggleAgenda')\n        },\n        toggleMeetingInfo() {\n            this.showMeetingInfo = !this.showMeetingInfo\n            this.$gaEvent('engagement', 'toggleMeetingInfo')\n        },\n        toggleWhiteboard() {\n            this.$gaEvent('engagement', 'toggleWhiteboard')\n            if (!this.showWhiteboard) {\n                if (!this.canvasDesigner) {\n                    this.initWhiteboard()\n                }\n                this.pageConfigs.lastLayout = this.pageConfigs.layout\n                this.pageConfigs.layout = 'presentation'\n                this.showWhiteboard = true\n            } else {\n                this.pageConfigs.layout = this.pageConfigs.lastLayout\n                this.showWhiteboard = false\n            }\n        },\n        changeFocus(item) {\n            // if(item.local) {\n            //     return\n            // }\n            this.videoList.forEach(v => {\n                v.maximized = v.id === item.id\n            })\n        },\n        disableMirror(item, itemIndex) {\n            this.videoList[itemIndex].disableMirror = this.videoList[itemIndex].disableMirror ? false : true\n        },\n        kickRemoteUser(item, itemIndex) {\n            formUtil.confirmAction()\n                .then((result) => {\n                    if (result.value) {\n                        let found = this.$refs.videos.find(video => {\n                            return video.id === item.id\n                        })\n\n                        if (found && found.srcObject) {\n                            const stream = found.srcObject\n\n                            this.rtcmConnection.removeStream(stream.streamid)\n                            this.emitSocketEvents('banAttendee', item)\n\n                            this.Custom({\n                                url: `/${this.initUrl}/${this.uuid}/invitees/${item.extra.uuid}/block`,\n                                method: 'post',\n                            })\n                                .then(response => {\n                                    this.$toasted.success(response.message, this.$toastConfig)\n                                })\n                                .catch(error => {\n                                    formUtil.handleErrors(error)\n                                })\n                        }\n                    } else {\n                        result.dismiss === Swal.DismissReason.cancel\n                    }\n                })\n        },\n        switchCamera() {\n            this.mediaConfigurations.facingMode = this.mediaConfigurations.facingMode === 'user' ? 'environment' : 'user'\n            this.applyMediaConstraints()\n        },\n        stopStream(localVideo) {\n            let found = this.$refs.videos.find(video => {\n                return video.id === localVideo.id\n            })\n\n            if (found && found.srcObject) {\n                const stream = found.srcObject\n                this.stopStream(stream)\n            }\n        },\n\n        // channel event callback methods\n        afterJoiningChannel(members) {\n            this.membersLive = members\n        },\n        newMemberJoining(member) {\n            this.membersLive.push(member)\n        },\n        memberLeaving(member) {\n            this.membersLive = this.membersLive.filter(u => (u.uuid !== member.uuid))\n        },\n        updateEntityBackup(e) {\n            const data = _.cloneDeep(e)\n            this.entityDatesBackup.status = data.status\n            this.entityDatesBackup.startDateTime = data.startDateTime\n            this.entityDatesBackup.plannedStartDateTime = data.plannedStartDateTime\n            this.entityDatesBackup.startedAt = data.startedAt\n            this.entityDatesBackup.estimatedEndTime = data.estimatedEndTime\n            this.entityDatesBackup.endedAt = data.endedAt\n        },\n        meetingStatusChanged(e) {\n            const getTimezoneDateTime = (dt) => {\n                return MomentTz.momentDateTimeTz(dt, this.vars.serverDateTimeFormat)\n            }\n\n            if (e.uuid === this.entity.uuid) {\n\n                if (this.entity.status === e.status && !e.delayed && !e.updated) {\n                    return\n                } else if (e.updated) {\n                    this.stopAutoEndMeeting()\n                }\n\n                this.updateEntityBackup(e)\n                this.entity.status = e.status\n                this.entity.startDateTime = getTimezoneDateTime(e.startDateTime)\n\n                if (this.entity.plannedStartDateTime) {\n                    this.entity.plannedStartDateTime = getTimezoneDateTime(e.plannedStartDateTime)\n                }\n                if (this.entity.startedAt) {\n                    this.entity.startedAt = getTimezoneDateTime(e.startedAt)\n                }\n                if (this.entity.estimatedEndTime) {\n                    this.entity.estimatedEndTime = getTimezoneDateTime(e.estimatedEndTime)\n                }\n\n                if (this.entity.status === e.status && !e.delayed) {\n                    return\n                }\n\n                let meetingStatus = e.status\n\n                if (meetingStatus === 'scheduled' && e.delayed) {\n                    meetingStatus = 'delayed'\n                }\n\n                const statusUpdateMessages = {\n                    'live': 'meeting.is_live_now',\n                    'delayed': 'meeting.meeting_delayed',\n                    'cancelled': 'meeting.meeting_cancelled',\n                    'ended': 'meeting.meeting_ended',\n                }\n\n                this.$toasted.success($t(statusUpdateMessages[meetingStatus]), this.$toastConfig)\n            }\n        },\n        gotNewMessage() {\n            if (!(this.pageConfigs.enableChat && this.configs.chat && this.configs.chat.enabled)) {\n                return\n            }\n\n            if (!this.pageConfigs.showChat || this.fullScreenInOn) {\n                this.newMessages = true\n                playIncomingMessage()\n            }\n        },\n        meetingRoomCreated(e) {\n            const data = e.hasOwnProperty('data') && e.data ? e.data : e\n\n            this.entity.roomId = data.roomId\n            this.initMediaAndRtcmConnection()\n            this.rtcmConnection.checkPresence(this.entity.roomId, (isRoomExist, roomid) => {\n                this.roomIdAlive = !!isRoomExist\n            })\n        },\n        banAttendee(e) {\n            const data = e.hasOwnProperty('data') && e.data ? e.data : e\n\n            if (this.enableLogs) {\n                console.log(data)\n            }\n            let found = this.$refs.videos.find(video => {\n                return video.id === data.id\n            })\n\n            if (found && found.srcObject) {\n                const stream = found.srcObject\n                this.rtcmConnection.removeStream(stream.streamid)\n            }\n\n            if (e.uuid === this.userUuid) {\n                this.closeConnectionAndStream()\n                this.getInitialData()\n            }\n\n            this.$toasted.info($t('meeting.ban_notification'), this.$toastConfig.info)\n        },\n        streamRemoved(e) {\n            const data = e.hasOwnProperty('data') && e.data ? e.data : e\n\n            if (this.rtcmConnection && data.id) {\n                this.rtcmConnection.removeStream(data.id)\n            }\n            this.rtcmOnStreamEnded(data)\n        },\n        meetingEnded(e) {\n            const data = e.hasOwnProperty('data') && e.data ? e.data : e\n\n            this.closeConnectionAndStream()\n            this.getInitialData()\n        },\n\n        // channel action methods\n        joinChannel() {\n            if (!window.Echo) {\n                return\n            }\n\n            if (this.entity.isPam) {\n                window.meetingChannel = window.Echo.channel(`MeetingGuest.${this.uuid}`)\n            } else {\n                window.meetingChannel = window.Echo.join(`Meeting.${this.uuid}`)\n                window.meetingChannel.here(this.afterJoiningChannel)\n                    .joining(this.newMemberJoining)\n                    .leaving(this.memberLeaving)\n            }\n\n            window.meetingChannel.listen('MeetingStatusChanged', this.meetingStatusChanged)\n                .listen('NewMessage', this.gotNewMessage)\n                .listen('MeetingRoomCreated', this.meetingRoomCreated)\n                .listen('PublicMeetingRoomCreated', this.meetingRoomCreated)\n        },\n        whisperChannel(channel, method, opts = {}) {\n            if (!(channel && channel.whisper && method)) {\n                return\n            }\n            channel.whisper(method, opts)\n        },\n        emitSocketEvents(event, data = {}) {\n            if (!(this.rtcmConnection && this.rtcmConnection.socket && event)) {\n                return\n            }\n            if (this.enableLogs) {\n                console.log('Emitting on Socket: ', event)\n            }\n            try {\n                this.rtcmConnection.socket.emit('Whisper', {\n                    event,\n                    data\n                })\n            } catch (e) { }\n        },\n\n        // rtcm event callback methods\n\n        // for room initiator\n        rtcmOnNewParticipant(participantId, userPreferences) {\n            if (this.enableLogs) {\n                console.log(\"On rtcmOnNewParticipant - participantId : \", participantId)\n                console.log(\"On rtcmOnNewParticipant - userPreferences : \", userPreferences)\n            }\n\n            if (this.rtcmConnection.getAllParticipants().length >= this.rtcmConnection.maxParticipantsAllowed) { // please check this line\n                return\n            }\n\n            const userId = userPreferences.connectionDescription.remoteUserId\n\n            if (this.alreadyAcceptedParticipants[userId]) {\n                this.rtcmConnection.acceptParticipationRequest(participantId, userPreferences)\n                return\n            }\n\n            if (this.pageConfigs.askHostBeforeJoining) {\n                swtAlert.fire({\n                    title: $t('meeting.user_trying_to_join', { attribute: userPreferences.extra.name || userId }),\n                    allowOutsideClick: false,\n                    showCancelButton: true,\n                    confirmButtonText: $t('general.accept'),\n                    cancelButtonText: $t('general.reject')\n                })\n                    .then((result) => {\n                        if (result.value) {\n                            this.rtcmConnection.acceptParticipationRequest(participantId, userPreferences)\n                            this.alreadyAcceptedParticipants[userId] = true\n                            return\n                        } else {\n                            result.dismiss === Swal.DismissReason.cancel\n                            return\n                        }\n                    })\n            } else {\n                this.rtcmConnection.acceptParticipationRequest(participantId, userPreferences)\n                return\n            }\n        },\n        // for participants\n        // rtcmOnReadyForOffer(remoteUserId, userPreferences) {\n        //     messageSound.play();\n        //     this.rtcmConnection.multiPeersHandler.createNewPeer(remoteUserId, userPreferences)\n        // }\n        rtcmOnOpen(e) {\n            // if (this.canvasDesigner && this.canvasDesigner.pointsLength <= 0) {\n            //     setTimeout(() => {\n            //         this.rtcmConnection.send('sync-canvas-points')\n            //     }, 1000)\n            // }\n\n            if (this.canvasDesigner && this.rtcmConnection.isInitiator) {\n                setTimeout(() => {\n                    this.canvasDesigner.renderStream()\n                }, 1000)\n            }\n        },\n        rtcmOnClose(e) {\n        },\n        rtcmOnMessage(e) {\n            // if (e.data === 'sync-canvas-points') {\n            //     this.canvasDesigner.sync()\n            //     return\n            // }\n\n            // this.canvasDesigner.syncData(e.data)\n        },\n        rtcmOnUserStatusChanged(event) {\n            const localUserId = this.rtcmConnection.userid\n\n            if (this.enableLogs) {\n                console.log(\"On rtcmOnUserStatusChanged - event : \", event)\n                // console.log(\"On rtcmOnUserStatusChanged - rtcmConnection : \", this.rtcmConnection)\n                console.log(\"On rtcmOnUserStatusChanged - localUserId : \", localUserId)\n            }\n\n            const newUserAdded = (stream) => {\n                // debugger\n                let streamId = stream.userid;\n                let streamType = stream.userid === localUserId ? 'local' : 'remote';\n\n                if (!(this.rtcmConnection.isInitiator || this.entity.canModerate) && streamType !== 'local' && (this.entity.type.uuid === 'live_class' || this.entity.type.uuid === 'webinar')) { //if current user is a normal user (not an initiator or moderator), and stream type is from remote, and type is live class\n                    return\n                }\n\n                let found = this.videoList.find(video => {\n                    return video.id === stream.streamid\n                })\n\n                if (this.videoList.length > 1) {\n                    this.recheckLiveParticipants(null)\n                }\n\n                if (found === undefined) {\n                    let video = {\n                        id: streamId,\n                        streamUserId: stream.userid,\n                        muted: true,\n                        ...stream.extra,\n                        extra: stream.extra,\n                        maximized: false,\n                        local: streamType === 'local' ? true : false, //bad me dekhenge\n                        screen: false,\n                        status: true,\n                        hasAudio: false,\n                        hasVideo: false,\n                        hasStream: false,\n                        speaking: false,\n                        disableMirror: false,\n                    }\n\n                    this.videoList.push(video)\n                }\n\n                this.isLoading = false\n            }\n\n            let foundVideos = this.videoList.filter(video => {\n                return video.id === event.userid || video.streamUserId === event.userid || (event.extra && video.uuid === event.extra.uuid)\n            })\n\n            if (event && event.status === \"online\") {\n                if (foundVideos && foundVideos.length) {\n                    foundVideos.forEach(foundVideo => {\n                        if (foundVideo.username !== event.extra.username) {\n                            const tempIndex = this.videoList.findIndex(video => video.uuid === foundVideo.uuid && (!(video.hasOwnProperty('id') && foundVideo.hasOwnProperty('id')) || (video.hasOwnProperty('id') && foundVideo.hasOwnProperty('id') && video.id === foundVideo.id)))\n                            this.videoList[tempIndex].username = event.extra.username\n                            this.videoList[tempIndex].name = event.extra.name\n\n                            if (this.videoList[tempIndex].extra) {\n                                this.videoList[tempIndex].extra['username'] = event.extra.username\n                                this.videoList[tempIndex].extra['name'] = event.extra.name\n                            }\n                        }\n                    })\n                } else if (event.extra && event.extra.hasOwnProperty('username') && event.extra.username) {\n                    newUserAdded(event)\n                }\n            } else {\n                if (foundVideos && foundVideos.length) {\n                    foundVideos.forEach(foundVideo => {\n                        this.rtcmConnection.removeStream(foundVideo.id)\n                        this.recheckLiveParticipants({ ...foundVideo, streamid: foundVideo.id })\n                        this.autoSetVideoMaximized()\n                    })\n                }\n            }\n        },\n        rtcmOnLeave(event) {\n            if (this.enableLogs) {\n                console.log(\"On rtcmOnLeave - event : \", event)\n            }\n        },\n        rtcmOnSpeaking(event) {\n            // if (this.enableLogs) {\n            // console.log(\"On rtcmOnSpeaking - event : \", event)\n            // }\n\n            const videoIndex = this.videoList.findIndex(v => v.id === event.streamid)\n            if (window.onSilenceTimeoutObj['index' + videoIndex]) {\n                clearTimeout(window.onSilenceTimeoutObj['index' + videoIndex])\n            }\n\n            if (this.videoList[videoIndex]) {\n                this.videoList[videoIndex].speaking = true\n            }\n\n            window.onSilenceTimeoutObj['index' + videoIndex] = setTimeout(() => {\n                if (this.videoList[videoIndex]) {\n                    this.videoList[videoIndex].speaking = false\n                }\n            }, 5000)\n        },\n        rtcmOnSilence(event) {\n            // if (this.enableLogs) {\n            // console.log(\"On rtcmOnSilence - event : \", event)\n            // }\n\n            const videoIndex = this.videoList.findIndex(v => v.id === event.streamid)\n            if (window.onSilenceTimeoutObj['index' + videoIndex]) {\n                clearTimeout(window.onSilenceTimeoutObj['index' + videoIndex])\n            }\n            window.onSilenceTimeoutObj['index' + videoIndex] = setTimeout(() => {\n                if (this.videoList[videoIndex]) {\n                    this.videoList[videoIndex].speaking = false\n                }\n            }, 2000)\n        },\n        rtcmOnVolumeChange(event) {\n            // if (this.enableLogs) {\n            //     console.log(\"On rtcmOnVolumeChange - event : \", event)\n            // }\n        },\n        rtcmOnStream(stream) {\n            if (this.enableLogs) {\n                console.log('On Stream: ', stream)\n            }\n\n            if (!(this.rtcmConnection.isInitiator || this.entity.canModerate) && stream.type !== 'local' && (this.entity.type.uuid === 'live_class' || this.entity.type.uuid === 'webinar')) { //if current user is a normal user (not an initiator or moderator), and stream type is from remote, and type is live class\n                if (!stream.extra.isInitiator) { // if remove stream is from a user who is not an initiator, then dont show\n                    return\n                }\n            }\n\n            let streamId = stream.streamid\n            let foundIndex = this.videoList.findIndex(video => {\n                return video.id === stream.streamid || video.id === stream.userid\n            })\n\n            let streamInstance = stream.stream.idInstance ? JSON.parse(stream.stream.idInstance) : stream.stream\n\n            const isWhiteboard = !(streamInstance.isAudio || streamInstance.audio || streamInstance.isVideo || streamInstance.video || streamInstance.isScreen || streamInstance.screen) && stream.extra.hasWhiteboard\n\n            if (streamInstance.isScreen && stream.type === 'local') {\n                this.localScreenStreamid = stream.streamid\n\n                let tracks = stream.stream.getTracks()\n                tracks.forEach(track => {\n                    track.addEventListener('ended', this.stopSharingScreen)\n                })\n            } else if (isWhiteboard && stream.type === 'local') {\n                this.localWhiteboardStreamid = stream.streamid\n            }\n\n            if (this.videoList.length > 1) {\n                this.recheckLiveParticipants(null)\n            }\n\n            let video = {\n                id: streamId,\n                streamUserId: stream.userid,\n                muted: stream.type === 'local',\n                ...stream.extra,\n                extra: stream.extra,\n                maximized: stream.type === 'local' && !streamInstance.isScreen && !isWhiteboard,\n                local: stream.type === 'local',\n                screen: (stream.extra.screenStreamId && streamId === stream.extra.screenStreamId) || this.localScreenStreamid === streamId || streamInstance.isScreen,\n                whiteboard: (stream.extra.whiteboardStreamId && streamId === stream.extra.whiteboardStreamId) || isWhiteboard,\n                status: true,\n                hasAudio: streamInstance.isAudio || streamInstance.audio,\n                hasVideo: streamInstance.isVideo || streamInstance.video || streamInstance.isScreen || isWhiteboard || streamInstance.screen,\n                hasStream: true,\n                speaking: false,\n                disableMirror: false,\n            }\n\n            if (video.screen || video.whiteboard) {\n                video.videoMuted = false\n            }\n\n            if (foundIndex === -1) {\n\n                // let foundUserIndex = this.videoList.findIndex(item => item.uuid === stream.extra.uuid)\n\n                // if (foundUserIndex >= 0) {\n                //     const foundUserVideo = this.videoList[foundUserIndex]\n                //     if (!foundUserVideo.status) {\n                //         let newList = this.videoList.map(item => item.uuid !== foundUserVideo.uuid)\n                //         this.videoList = newList\n                //     }\n                // }\n\n                if (stream.type === 'local' && this.localScreenStreamid !== video.id && this.localWhiteboardStreamid !== video.id) {\n                    if (this.localVideo && this.needStreamAddOrReplace) {\n                        video.id = streamId = this.localVideo.id\n                    } else {\n                        this.localVideo = video\n                        this.videoList.push(video)\n                    }\n                } else {\n                    this.videoList.push(video)\n                }\n\n                //just for testing -start\n                // let video2 = {\n                //     ...video,\n                //     maximized: false,\n                //     uuid: uuid(),\n                // }\n                // this.videoList.push(video)\n                // this.videoList.push(video2)\n                //just for testing -ended\n            } else if (foundIndex !== -1 && !this.videoList[foundIndex].hasStream) {\n                if (stream.type === 'local' && this.localScreenStreamid !== video.id && this.localWhiteboardStreamid !== video.id) {\n                    if (this.localVideo && this.needStreamAddOrReplace) {\n                        video.id = streamId = this.localVideo.id\n                    } else {\n                        this.localVideo = video\n                        this.videoList[foundIndex] = Object.assign({}, this.videoList[foundIndex], video)\n                    }\n                } else {\n                    this.videoList[foundIndex] = Object.assign({}, this.videoList[foundIndex], video)\n                }\n            }\n\n            this.autoSetVideoMaximized()\n\n            if (this.pageConfigs.enableRecording && this.entity.canModerate) {\n                let recorderInstance = this.rtcmConnection.recorder\n\n                if (recorderInstance) {\n                    const internalRecorder = recorderInstance.getInternalRecorder()\n                    if (this.recording && internalRecorder) {\n                        internalRecorder.addStreams(stream.stream)\n                    }\n                } else {\n                    if (this.pageConfigs.enableAutoRecording) {\n                        setTimeout(() => {\n                            this.startRecording()\n                        }, 1000)\n                    }\n                }\n\n                // if(!this.rtcmConnection.recorder.streams) {\n                //     this.rtcmConnection.recorder.streams = []\n                // }\n\n                // if(this.recording) {\n                //     this.rtcmConnection.recorder.streams.push(stream.stream)\n                // }\n            }\n\n            setTimeout(() => {\n                if (this.enableLogs) {\n                    console.log(\"$refs : \", this.$refs)\n                    console.log(\"$refs.videos : \", this.$refs.videos)\n                }\n\n                for (let i = 0, len = this.$refs.videos.length; i < len; i++) {\n                    if (this.$refs.videos[i].id === streamId || this.$refs.videos[i].id === stream.userid) {\n                        this.$refs.videos[i].srcObject = stream.stream\n                        break\n                    }\n                }\n\n                // this.rtcmConnection.streamEvents.selectAll({\n                //     isScreen: true\n                // }).forEach(function(screenEvent) {\n                //     this.videoList.forEach((item, index) => {\n                //         if (item.id !== screenEvent.stream.streamid) {\n                //             this.videoList[index].screen = true\n                //         } else {\n                //             this.videoList[index].screen = false\n                //         }\n                //     })\n                // })\n\n                if (stream.type === 'local') {\n                    this.applyOnStartConfigs()\n                }\n\n                setTimeout(() => {\n                    if (this.pageConfigs.speechDetection && !isWhiteboard && !streamInstance.isScreen) {\n                        this.initHark({\n                            stream: stream.stream,\n                            streamedObject: stream,\n                            connection: this.rtcmConnection,\n                        })\n                    }\n                }, 1000)\n            }, 500)\n\n            this.isLoading = false\n        },\n        rtcmOnStreamEnded(stream) {\n            this.recheckLiveParticipants(stream)\n            this.autoSetVideoMaximized()\n        },\n        rtcmOnError(error) {\n            this.isLoading = false\n            // if(window.currentUserMediaRequest) {\n            //     window.currentUserMediaRequest.mutex = false\n            // }\n        },\n        rtcmOnMediaError(error) {\n            this.isLoading = false\n            if (window.currentUserMediaRequest) {\n                window.currentUserMediaRequest.mutex = false\n            }\n            if (this.enableLogs) {\n                console.log(\"onMediaError : \", error)\n            }\n            this.mediaDeviceIssue = true\n\n            const msgObj = showMediaPermissionError(error)\n\n            msgObj.alert.then((result) => {\n                if (error.name === 'NotFoundError' || error.name === 'NotReadableError' || error.name === 'OverconstrainedError') {\n                    this.applyMediaConstraints(true)\n                    this.$toasted.info($t('meeting.media_devices.setup_reset_try_again'), this.$toastConfig.info)\n                } else if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\n                    this.permissionRejected = true\n                }\n                if (!result.value) {\n                    this.isLoading = false\n                    result.dismiss === Swal.DismissReason.cancel\n                }\n            })\n            // this.meetingAction('leave', { error: { name: error.name, title: msg.title } }, { alert: false })\n        },\n        rtcmOnMute(stream) {\n            if (this.enableLogs) {\n                console.log(\"On rtcmOnMute: \", stream)\n            }\n            const videoIndex = this.videoList.findIndex(v => v.id === stream.streamid)\n            const videoEle = this.$refs.videos.find(video => {\n                return video.id === stream.streamid\n            })\n\n            if (stream.muteType === 'video') {\n                this.videoList[videoIndex].videoMuted = true\n            } else if (stream.muteType === 'audio') {\n                this.videoList[videoIndex].muted = true\n            } else {\n                this.videoList[videoIndex].videoMuted = true\n                this.videoList[videoIndex].muted = true\n                videoEle.srcObject = null\n            }\n        },\n        rtcmOnUnmute(stream) {\n            if (this.enableLogs) {\n                console.log(stream)\n            }\n            const videoIndex = this.videoList.findIndex(v => v.id === stream.streamid)\n            const videoEle = this.$refs.videos.find(video => {\n                return video.id === stream.streamid\n            })\n\n            if (stream.unmuteType === 'video') {\n                this.videoList[videoIndex].videoMuted = false\n            } else if (stream.unmuteType === 'audio') {\n                this.videoList[videoIndex].muted = false\n            } else {\n                this.videoList[videoIndex].videoMuted = false\n                this.videoList[videoIndex].muted = false\n                videoEle.srcObject = stream\n            }\n        },\n        rtcmOnRemoteMuteUnmuted(e) {\n            const data = e.hasOwnProperty('data') && e.data ? e.data : e\n\n            if (this.enableLogs) {\n                console.log(data)\n            }\n            const videoIndex = this.videoList.findIndex(video => {\n                return video.id === data.streamid\n            })\n\n            if (videoIndex === -1 || !this.videoList[videoIndex]) {\n                return\n            }\n\n            if (data.hasOwnProperty('audioEnabled')) {\n                if (data.audioEnabled) {\n                    this.videoList[videoIndex].audioMuted = false\n                } else {\n                    this.videoList[videoIndex].audioMuted = true\n                }\n            } else if (data.hasOwnProperty('videoEnabled')) {\n                // const videoEle = this.$refs.videos.find(video => {\n                //     return video.id === data.streamid\n                // })\n\n                if (data.videoEnabled) {\n                    this.videoList[videoIndex].videoMuted = false\n                } else {\n                    this.videoList[videoIndex].videoMuted = true\n                }\n            }\n        },\n        rtcmOnSnapshotTaken(e) {\n            const data = e.hasOwnProperty('data') && e.data ? e.data : e\n\n            if (this.enableLogs) {\n                console.log('rtcmOnSnapshotTaken', data)\n            }\n\n            if (!(this.pageConfigs.enableSnapshotAlert && data && data.byUser && data.ofUser)) {\n                return\n            }\n\n            if (this.pageConfigs.snapshotAlertToUserOnly) {\n                if (this.pageConfigs.snapshotAlertToModerators) {\n\n                    if (this.entity.canModerate) {\n                        this.$toasted.info($t('meeting.snapshot_taken_notification_user', { by_user: data.byUser.name, of_user: data.ofUser.name }), this.$toastConfig.info)\n                        playScreenshot()\n                    }\n\n                } else if (this.userUuid === data.ofUser.uuid) {\n                    this.$toasted.info($t('meeting.snapshot_taken_notification_your', { by_user: data.byUser.name }), this.$toastConfig.info)\n                    playScreenshot()\n                }\n            } else {\n                if (this.userUuid === data.ofUser.uuid) {\n                    this.$toasted.info($t('meeting.snapshot_taken_notification_your', { by_user: data.byUser.name }), this.$toastConfig.info)\n                } else {\n                    this.$toasted.info($t('meeting.snapshot_taken_notification_user', { by_user: data.byUser.name, of_user: data.ofUser.name }), this.$toastConfig.info)\n                }\n                playScreenshot()\n            }\n        },\n        rtcmOnMeetingUpdated(e) {\n            const data = e.hasOwnProperty('data') && e.data ? e.data : e\n\n            if (this.enableLogs) {\n                console.log('rtcmOnMeetingUpdated', data)\n            }\n            if (data.dateUpdated) {\n                const getTimezoneDateTime = (dt) => {\n                    return MomentTz.momentDateTimeTz(dt, this.vars.serverDateTimeFormat)\n                }\n\n                this.updateEntityBackup(data)\n                this.entity.status = data.status\n                this.entity.startDateTime = getTimezoneDateTime(data.startDateTime)\n                if (data.plannedStartDateTime) {\n                    this.entity.plannedStartDateTime = getTimezoneDateTime(data.plannedStartDateTime)\n                }\n                if (data.startedAt) {\n                    this.entity.startedAt = getTimezoneDateTime(data.startedAt)\n                }\n                if (data.estimatedEndTime) {\n                    this.entity.estimatedEndTime = getTimezoneDateTime(data.estimatedEndTime)\n                }\n                if (data.endedAt) {\n                    this.entity.endedAt = getTimezoneDateTime(data.endedAt)\n                }\n\n            }\n\n            if (data.endTimeSnoozed && this.autoEndingToast && this.autoEndingToast.close && _.isFunction(this.autoEndingToast.close)) {\n                this.stopAutoEndMeeting()\n                swtToast.close()\n                this.autoEndingToast = null\n            }\n\n            if (data.autoEndCancelled && this.autoEndingToast && this.autoEndingToast.close && _.isFunction(this.autoEndingToast.close)) {\n                this.stopAutoEndMeeting()\n                this.pageConfigs.autoEndMeeting = false\n                swtToast.close()\n                this.autoEndingToast = null\n            }\n        },\n        rtcmOnRemoteHandToggled(e) {\n            const data = e.hasOwnProperty('data') && e.data ? e.data : e\n\n            if (this.enableLogs) {\n                console.log(data)\n            }\n\n            if (!(data && data.streamid && this.rtcmConnection.streamEvents[data.streamid])) {\n                return\n            }\n            const videoIndex = this.videoList.findIndex(video => {\n                return video.id === data.streamid\n            })\n\n            if (data.hasOwnProperty('isHandUp')) {\n                if (data.isHandUp) {\n                    this.videoList[videoIndex].isHandUp = true\n                    this.$toasted.info($t('meeting.handup_notification', { attribute: this.videoList[videoIndex].name }), this.$toastConfig.info)\n                } else {\n                    this.videoList[videoIndex].isHandUp = false\n                }\n            }\n        },\n        rtcmOnMuteUnmuteRemote(e) {\n            const data = e.hasOwnProperty('data') && e.data ? e.data : e\n\n            if (this.enableLogs) {\n                console.log(data)\n            }\n            let found = this.$refs.videos.find(video => {\n                return video.id === data.id\n            })\n\n            if (found && found.srcObject) {\n                this.toggleAudio()\n            }\n        },\n        rtcmOnUserIdAlreadyTaken(useridAlreadyTaken, yourNewUserId) {\n            this.rtcmConnection.userid = yourNewUserId\n        },\n\n        // rtc action methods\n        initMediaAndRtcmConnection() {\n            if (!this.rtcmConnection) {\n                this.rtcmConnection = new RTCMultiConnection()\n\n                this.rtcmConnection.socketURL = window.atob(this.socketURL)\n                if (this.configs.signalServers && this.configs.signalServers.url) {\n                    this.rtcmConnection.socketURL = this.configs.signalServers.url\n                }\n\n                this.rtcmConnection.autoCreateMediaElement = false\n                // this.rtcmConnection.autoCloseEntireSession = true // set this line to close room as soon as room creator leaves\n\n                if (this.configs.meeting) {\n                    if (this.configs.meeting.debugMode) {\n                        this.rtcmConnection.enableLogs = true\n                    } else {\n                        this.rtcmConnection.enableLogs = false\n                    }\n\n                    if (this.configs.meeting.forceTurn) {\n                        this.rtcmConnection.candidates = {\n                            turn: true,\n                            stun: false,\n                            host: false\n                        }\n                    }\n                }\n\n\n                this.rtcmConnection.onopen = this.rtcmOnOpen\n                this.rtcmConnection.onclose = this.rtcmOnClose\n                this.rtcmConnection.onleave = this.rtcmOnLeave\n                this.rtcmConnection.onmessage = this.rtcmOnMessage\n                this.rtcmConnection.onNewParticipant = this.rtcmOnNewParticipant\n                // this.rtcmConnection.onReadyForOffer = this.rtcmOnReadyForOffer\n                this.rtcmConnection.onUserStatusChanged = this.rtcmOnUserStatusChanged\n                this.rtcmConnection.onstream = this.rtcmOnStream\n                this.rtcmConnection.onstreamended = this.rtcmOnStreamEnded\n                this.rtcmConnection.onmute = this.rtcmOnMute\n                this.rtcmConnection.onunmute = this.rtcmOnUnmute\n                this.rtcmConnection.onMediaError = this.rtcmOnMediaError\n                // this.rtcmConnection.onerror = this.rtcmOnError\n                this.rtcmConnection.onUserIdAlreadyTaken = this.rtcmOnUserIdAlreadyTaken\n\n                if (this.pageConfigs.speechDetection) {\n                    this.rtcmConnection.onspeaking = this.rtcmOnSpeaking\n                    this.rtcmConnection.onsilence = this.rtcmOnSilence\n                    this.rtcmConnection.onvolumechange = this.rtcmOnVolumeChange\n                    window.onSilenceTimeoutObj = {}\n                }\n\n                this.rtcmConnection.setCustomSocketEvent('Whisper')\n\n                this.fileSharingConnection = this.rtcmConnection\n            }\n\n\n            this.getMediaConstraints()\n\n            //Bandwidth and bitrate setup\n            const BandwidthHandler = this.rtcmConnection.BandwidthHandler\n\n            this.rtcmConnection.bandwidth = {\n                audio: this.mediaConfigurations.bandwidth.audio === 'auto' ? false : this.mediaConfigurations.bandwidth.audio,\n                video: this.mediaConfigurations.bandwidth.video === 'auto' ? false : this.mediaConfigurations.bandwidth.video,\n                screen: this.mediaConfigurations.bandwidth.screen === 'auto' ? false : this.mediaConfigurations.bandwidth.screen,\n            }\n\n            // this.rtcmConnection.processSdp = (sdp) => {\n            //     if (this.rtcmConnection.DetectRTC.browser.name === 'Safari') {\n            //         return sdp\n            //     }\n\n            //     if (this.rtcmConnection.codecs.video.toUpperCase() === 'VP8') {\n            //         sdp = BandwidthHandler.preferCodec(sdp, 'vp8')\n            //     }\n\n            //     if (this.rtcmConnection.codecs.video.toUpperCase() === 'VP9') {\n            //         sdp = BandwidthHandler.preferCodec(sdp, 'vp9')\n            //     }\n\n            //     if (this.rtcmConnection.codecs.video.toUpperCase() === 'H264') {\n            //         sdp = BandwidthHandler.preferCodec(sdp, 'h264')\n            //     }\n\n            //     if (this.rtcmConnection.codecs.audio === 'G722') {\n            //         sdp = BandwidthHandler.removeNonG722(sdp)\n            //     }\n\n            //     if (this.rtcmConnection.DetectRTC.browser.name === 'Firefox') {\n            //         return sdp\n            //     }\n\n            //     if (this.rtcmConnection.bandwidth.video || this.rtcmConnection.bandwidth.screen) {\n            //         sdp = BandwidthHandler.setApplicationSpecificBandwidth(sdp, this.rtcmConnection.bandwidth, !!this.rtcmConnection.session.screen)\n            //     }\n\n            //     if (this.rtcmConnection.bandwidth.video) {\n            //         sdp = BandwidthHandler.setVideoBitrates(sdp, {\n            //             min: this.mediaConfigurations.bandwidth.videoMin * 8 * 1024,\n            //             max: this.rtcmConnection.bandwidth.video * 8 * 1024\n            //         })\n            //     }\n\n            //     if (this.rtcmConnection.bandwidth.audio) {\n            //         sdp = BandwidthHandler.setOpusAttributes(sdp, {\n            //             maxaveragebitrate: this.rtcmConnection.bandwidth.audio * 8 * 1024,\n            //             maxplaybackrate: this.rtcmConnection.bandwidth.audio * 8 * 1024,\n            //             stereo: 1,\n            //             maxptime: 3\n            //         })\n            //     }\n\n            //     return sdp\n            // }\n\n            this.rtcmConnection.iceServers = [\n                {\n                    urls: [\n                        \"stun.l.google.com:19302\",\n                        \"stun1.l.google.com:19302\",\n                        \"stun2.l.google.com:19302\",\n                        \"stun3.l.google.com:19302\",\n                        \"stun4.l.google.com:19302\"\n                    ]\n                }\n            ]\n\n            if (this.pageConfigs.maxParticipantCount) {\n                this.rtcmConnection.maxParticipantsAllowed = this.pageConfigs.maxParticipantCount\n            }\n\n            if (this.configs.iceServers.length) {\n                this.rtcmConnection.iceServers = [...this.configs.iceServers]\n            }\n\n            this.rtcmConnection.session = {\n                ...this.meetingRulesHost.session\n            }\n\n            this.rtcmConnection.sdpConstraints.mandatory = {\n                ...this.meetingRulesHost.mandatory\n            }\n\n            this.rtcmConnection.mediaConstraints = {\n                video: this.meetingRulesHost.mediaConstraints.video ? this.videoConstraints : false,\n                audio: this.meetingRulesHost.mediaConstraints.audio ? this.audioConstraints : false,\n                screen: this.meetingRulesHost.mediaConstraints.screen,\n            }\n        },\n        initSocketListener() {\n            if (!(this.rtcmConnection && this.rtcmConnection.socket)) {\n                return\n            }\n\n            const callbackList = {\n                'removedStream': this.streamRemoved,\n                'banAttendee': this.banAttendee,\n                'muteUnmuteRemote': this.rtcmOnMuteUnmuteRemote,\n                'remoteMutedUnmuted': this.rtcmOnRemoteMuteUnmuted,\n                'remoteHandToggled': this.rtcmOnRemoteHandToggled,\n                'meetingEnded': this.meetingEnded,\n                'snapshotTaken': this.rtcmOnSnapshotTaken,\n                'meetingUpdated': this.rtcmOnMeetingUpdated,\n            }\n\n            this.rtcmConnection.socket.on('Whisper', (e) => {\n                if (e && callbackList.hasOwnProperty(e.event)) {\n                    callbackList[e.event](e.data)\n                }\n            })\n        },\n        initCanvasDesigner() {\n            // here goes canvas designer\n            this.canvasDesigner = new CanvasDesigner()\n\n            // you can place widget.html anywhere\n            this.canvasDesigner.widgetHtmlURL = '/js/canvas-designer/widget.html'\n            this.canvasDesigner.widgetJsURL = '/js/canvas-designer/widget.min.js'\n        },\n        initWhiteboard() {\n            if (this.videoList.length < 1 || !this.$refs.whiteboard || !CanvasDesigner) {\n                return\n            }\n\n            if (!this.canvasDesigner) {\n                this.initCanvasDesigner()\n            }\n\n            this.canvasDesigner.addSyncListener((data) => {\n                this.rtcmConnection.send(data)\n            })\n\n            this.canvasDesigner.setSelected('pencil')\n\n            this.canvasDesigner.setTools({\n                pencil: true,\n                text: true,\n                image: true,\n                pdf: true,\n                eraser: true,\n                line: true,\n                arrow: true,\n                dragSingle: true,\n                dragMultiple: true,\n                arc: true,\n                rectangle: true,\n                quadratic: true,\n                bezier: true,\n                marker: true,\n                zoom: false,\n                lineWidth: true,\n                colorsPicker: true,\n                extraOptions: false,\n                code: false,\n                undo: true\n            })\n            if (!this.canvasDesigner.iframe) {\n                this.canvasDesigner.appendTo(this.$refs.whiteboard, () => {\n\n                    this.rtcmConnection.extra.hasWhiteboard = true\n                    this.updateExtraData()\n\n                    this.canvasDesigner.captureStream((stream) => {\n                        this.rtcmConnection.addStream(stream)\n                        this.rtcmConnection.onstream({\n                            streamid: stream.id,\n                            stream: stream,\n                            userid: this.rtcmConnection.userid,\n                            type: 'local',\n                            extra: this.rtcmConnection.extra,\n                        })\n                    })\n                })\n            }\n        },\n        updateExtraData() {\n            if (this.rtcmConnection && this.rtcmConnection.socket) {\n                this.rtcmConnection.updateExtraData()\n            }\n        },\n        destroyWhiteboard() {\n            if (this.canvasDesigner) {\n                this.canvasDesigner.destroy()\n                this.canvasDesigner = null\n\n                let found = this.$refs.videos.find(video => {\n                    return video.id === this.localWhiteboardStreamid\n                })\n\n                if (found && found.srcObject) {\n                    if (this.rtcmConnection && this.localWhiteboardStreamid) {\n                        this.rtcmConnection.removeStream(this.localWhiteboardStreamid)\n                        this.rtcmOnStreamEnded({ id: this.localWhiteboardStreamid })\n                        if (this.videoList.length > 1) {\n                            this.recheckLiveParticipants({ streamid: this.localWhiteboardStreamid })\n                        }\n                        this.autoSetVideoMaximized()\n                    }\n\n                    this.emitSocketEvents('removedStream', found.srcObject)\n\n                    // this.videoList = this.videoList.filter(video => video.id !== this.localScreenStreamid)\n                    this.localWhiteboardStreamid = null\n                } else {\n                    this.localWhiteboardStreamid = null\n                }\n            }\n\n            this.rtcmConnection.extra.hasWhiteboard = false\n            this.updateExtraData()\n        },\n        hideAndDestroyWhiteboard() {\n            formUtil.confirmAction()\n                .then((result) => {\n                    if (result.value) {\n                        this.pageConfigs.layout = this.pageConfigs.lastLayout\n                        this.showWhiteboard = false\n                        this.destroyWhiteboard()\n                    } else {\n                        result.dismiss === Swal.DismissReason.cancel\n                    }\n                })\n        },\n        getMediaConstraints(setDefaults = false) {\n            this.needStreamAddOrReplace = false\n\n            if (setDefaults) {\n                this.audioConstraints = {\n                    \"sampleSize\": 16,\n                    \"channelCount\": 2,\n                    \"echoCancellation\": false,\n                }\n                this.videoConstraints = {\n                    width: { min: 426, ideal: 1280, max: 4096 },\n                    height: { min: 240, ideal: 720, max: 2160 },\n                }\n                return\n            }\n\n            if (this.pageConfigs.enableAudio) {\n                if (this.mediaConfigurations.selectedAudioInput && this.mediaConfigurations.selectedAudioInput.uuid && this.mediaConfigurations.selectedAudioInput.uuid !== 'auto') {\n                    this.audioConstraints = {\n                        deviceId: { ideal: this.mediaConfigurations.selectedAudioInput.uuid }\n                    }\n\n                    if (this.audioConstraints.hasOwnProperty('deviceId') && this.mediaConfigurations.activeAudioInput !== this.audioConstraints.deviceId.ideal) {\n                        this.needStreamAddOrReplace = true\n                    }\n                } else {\n                    this.audioConstraints = true\n                }\n            } else {\n                this.audioConstraints = false\n            }\n\n            if (this.pageConfigs.enableVideo) {\n                if (this.mediaConfigurations.selectedVideoInput && this.mediaConfigurations.selectedVideoInput.uuid && this.mediaConfigurations.selectedVideoInput.uuid !== 'auto') {\n                    this.videoConstraints = {\n                        deviceId: { ideal: this.mediaConfigurations.selectedVideoInput.uuid }\n                    }\n\n                    if (this.videoConstraints.hasOwnProperty('deviceId') && this.mediaConfigurations.activeVideoInput !== this.videoConstraints.deviceId.ideal) {\n                        this.needStreamAddOrReplace = true\n                    }\n                } else {\n                    delete this.videoConstraints.deviceId\n                }\n\n                if (this.mediaConfigurations.facingMode !== 'auto') {\n                    this.videoConstraints.facingMode = this.mediaConfigurations.facingMode\n\n                    if (this.mediaConfigurations.activeFacingMode !== this.videoConstraints.facingMode) {\n                        this.needStreamAddOrReplace = true\n                    }\n                } else {\n                    if (this.videoConstraints.hasOwnProperty('facingMode')) {\n                        if (this.mediaConfigurations.activeFacingMode !== this.videoConstraints.facingMode) {\n                            this.needStreamAddOrReplace = true\n                        }\n                        delete this.videoConstraints.facingMode\n                    }\n                }\n\n                if (this.mediaConfigurations.frameRate !== 'auto') {\n                    this.videoConstraints.frameRate = this.mediaConfigurations.frameRate\n                } else {\n                    if (this.videoConstraints.hasOwnProperty('frameRate')) {\n                        delete this.videoConstraints.frameRate\n                    }\n                }\n\n                let selectedResolution = this.mediaDevices.resolutions.find(r => r.label === this.mediaConfigurations.selectedResolution)\n\n                if (selectedResolution && selectedResolution.label !== 'Auto') {\n                    this.videoConstraints.width = selectedResolution.constraints.width\n                    this.videoConstraints.height = selectedResolution.constraints.height\n                } else {\n                    if (this.videoConstraints.hasOwnProperty('width')) {\n                        delete this.videoConstraints.width\n                    }\n                    if (this.videoConstraints.hasOwnProperty('height')) {\n                        delete this.videoConstraints.height\n                    }\n                }\n\n            } else {\n                this.videoConstraints = false\n            }\n        },\n        applyMediaConstraints(setDefaults = false) {\n            if (!(this.rtcmConnection && this.localVideo)) {\n                return\n            }\n\n            this.getMediaConstraints(setDefaults)\n\n            this.rtcmConnection.mediaConstraints = {\n                video: this.meetingRulesHost.mediaConstraints.video ? this.videoConstraints : false,\n                audio: this.meetingRulesHost.mediaConstraints.audio ? this.audioConstraints : false,\n                screen: this.meetingRulesHost.mediaConstraints.screen,\n            }\n\n            this.rtcmConnection.bandwidth = {\n                audio: this.mediaConfigurations.bandwidth.audio === 'auto' ? false : this.mediaConfigurations.bandwidth.audio,\n                video: this.mediaConfigurations.bandwidth.video === 'auto' ? false : this.mediaConfigurations.bandwidth.video,\n                screen: this.mediaConfigurations.bandwidth.screen === 'auto' ? false : this.mediaConfigurations.bandwidth.screen,\n            }\n\n            this.mediaConfigurations.activeAudioInput = this.audioConstraints && this.audioConstraints.hasOwnProperty('deviceId') ? this.audioConstraints.deviceId.ideal : null\n            this.mediaConfigurations.activeVideoInput = this.videoConstraints && this.videoConstraints.hasOwnProperty('deviceId') ? this.videoConstraints.deviceId.ideal : null\n            this.mediaConfigurations.activeFacingMode = this.mediaConfigurations.facingMode\n\n            if (!this.needStreamAddOrReplace) {\n                this.rtcmConnection.applyConstraints(this.rtcmConnection.mediaConstraints)\n                return\n            }\n\n            this.closeConnectionAndStream(true)\n        },\n        closeConnectionAndStream(reopen = false, callbackFn) {\n            this.stopKeepAlivePolling()\n            this.stopAutoEndMeeting()\n\n            if (this.autoEndingToast && _.isEmpty(this.autoEndingToast)) {\n                swtToast.close()\n                this.autoEndingToast = null\n            }\n\n            if (this.rtcmConnection) {\n                try {\n                    this.destroyWhiteboard()\n\n                    this.rtcmConnection.attachStreams.forEach((localStream) => {\n                        localStream.stop()\n                    })\n\n                    if (this.$refs.greenRoomVideo && this.$refs.greenRoomVideo.srcObject) {\n                        const stream = this.$refs.greenRoomVideo.srcObject\n                        // stopStream(stream)\n                        stream.stop()\n                        this.localGreenRoomStream = null\n\n                    } else if (this.localGreenRoomStream) {\n                        const stream = this.localGreenRoomStream\n                        // stopStream(stream)\n                        stream.stop()\n                        this.localGreenRoomStream = null\n                    }\n\n\n                    if (this.localVideo) {\n                        // this.rtcmConnection.removeStream(this.localVideo.id)\n\n                        this.emitSocketEvents('removedStream', this.localVideo)\n                    }\n\n                    this.rtcmConnection.getAllParticipants()\n                        .forEach((pid) => {\n                            this.rtcmConnection.disconnectWith(pid)\n                        })\n\n                    this.rtcmConnection.leave()\n                    this.rtcmConnection.closeSocket()\n\n                    window.setTimeout(() => {\n                        this.localVideo = null\n                        this.localScreenStreamid = null\n                        this.localWhiteboardStreamid = null\n                        this.localGreenRoomStream = null\n                        if (this.rtcmConnection) {\n                            this.rtcmConnection.recorder = null\n                        }\n                        this.rtcmConnection = null\n\n                        if (reopen) {\n                            this.getOnline()\n                        }\n                        if (callbackFn && _.isFunction(callbackFn)) {\n                            callbackFn()\n                        }\n                    }, 500)\n                } catch (e) {\n                    console.log('There are some errors')\n                    console.error(e)\n                }\n            }\n            this.videoList = []\n        },\n        initHark(args) {\n            if (!window.hark || !this.pageConfigs.speechDetection) {\n                return\n            }\n\n            let streamedObject = args.streamedObject\n            let stream = args.stream\n            let connection = args.connection\n\n            let options = {}\n            let speechEvents = hark(stream, options)\n\n            speechEvents.on('speaking', function () {\n                // console.log('speaking')\n                connection.onspeaking(streamedObject)\n            })\n\n            speechEvents.on('stopped_speaking', function () {\n                // console.log('silence')\n                connection.onsilence(streamedObject);\n            })\n\n            // speechEvents.on('volume_change', function(volume, threshold) {\n            //     streamedObject.volume = volume\n            //     streamedObject.threshold = threshold\n            // connection.onvolumechange(streamedObject)\n            // })\n\n            window.harkInitiated = true\n            // console.log('hark initiated - ', streamedObject.extra.name)\n        },\n        recheckLiveParticipants(stream) {\n            let newList = []\n            this.liveParticipants = this.rtcmConnection ? this.rtcmConnection.getAllParticipants() : []\n\n            this.videoList.forEach((item, index) => {\n                const userIndex = this.liveParticipants.findIndex(m => m === item.streamUserId)\n                if ((!stream || (stream && item.id !== stream.streamid)) && (item.local || (!item.local && userIndex !== -1))) {\n                    newList.push(item)\n                } else {\n                    item.status = false\n                    newList.push(item)\n                }\n            })\n\n            this.videoList = newList\n\n            setTimeout(() => {\n                this.videoList = this.videoList.filter(v => v.status)\n                this.autoSetVideoMaximized()\n            }, 3000)\n        },\n        autoSetVideoMaximized() {\n            const setMaximized = (maximizedIndex) => {\n                this.videoList[maximizedIndex].maximized = true\n                this.videoList = this.videoList.map((v, index) => {\n                    v.maximized = false\n                    if (index === maximizedIndex) {\n                        v.maximized = true\n                    }\n                    return v\n                })\n            }\n\n            if (this.videoList.length > 1) {\n                const maximizedRemoteVideoIndex = this.videoList.findIndex(v => !v.local && v.maximized && v.status)\n                if (maximizedRemoteVideoIndex === -1) {\n                    const remoteVideoIndex = this.videoList.findIndex(v => !v.local && v.hasStream)\n                    if (remoteVideoIndex !== -1) {\n                        setMaximized(remoteVideoIndex)\n                    } else {\n                        setMaximized(0)\n                    }\n                } else {\n                    const whiteboardRemoteVideoIndex = this.videoList.findIndex(v => !v.local && v.whiteboard && v.status)\n                    if (whiteboardRemoteVideoIndex !== -1 && this.videoList[whiteboardRemoteVideoIndex].whiteboard) {\n                        setMaximized(whiteboardRemoteVideoIndex)\n                    }\n                }\n            } else if (this.videoList.length) {\n                setMaximized(0)\n            }\n        },\n        validateMediaDeviceRequest(mediaConstraints) {\n            let deviceRequest = {\n                video: mediaConstraints.video ? true : false,\n                audio: mediaConstraints.audio ? true : false,\n                screen: mediaConstraints.screen ? true : false,\n            }\n\n            if (this.pageConfigs.allowJoiningWithoutDevices) {\n                if (deviceRequest.audio && !(this.mediaDevices.audioInput && this.mediaDevices.audioInput.length)) {\n                    deviceRequest.audio = false\n                }\n\n                if (deviceRequest.video && !(this.mediaDevices.videoInput && this.mediaDevices.videoInput.length)) {\n                    deviceRequest.video = false\n                }\n            }\n\n            return deviceRequest\n        },\n        openRoom(meetingRoomId) {\n            if (this.enableLogs) {\n                console.log('openRoom', meetingRoomId)\n            }\n\n            this.rtcmConnection.session = {\n                ...this.meetingRulesHost.session\n            }\n\n            this.videoList = []\n\n            this.getMediaConstraints()\n\n            const activeMeetingRules = this.meetingRulesHost\n\n            this.rtcmConnection.mediaConstraints = {\n                video: activeMeetingRules.mediaConstraints.video ? this.videoConstraints : false,\n                audio: activeMeetingRules.mediaConstraints.audio ? this.audioConstraints : false,\n                screen: activeMeetingRules.mediaConstraints.screen,\n            }\n\n            this.rtcmConnection.sdpConstraints.mandatory = {\n                ...activeMeetingRules.mandatory\n            }\n\n            this.rtcmConnection.autoCloseEntireSession = activeMeetingRules.autoCloseEntireSession\n            this.rtcmConnection.enableScalableBroadcast = activeMeetingRules.enableScalableBroadcast\n            if (this.rtcmConnection.enableScalableBroadcast) {\n                this.rtcmConnection.maxRelayLimitPerUser = activeMeetingRules.maxRelayLimitPerUser\n            }\n\n            // console.log('mediaConstraints')\n            // console.log(this.rtcmConnection.mediaConstraints)\n\n            // console.log('sdpConstraints')\n            // console.log(this.rtcmConnection.sdpConstraints)\n\n            this.rtcmConnection.extra.isInitiator = true\n\n            this.rtcmConnection.open(meetingRoomId, (isRoomOpened, roomid, error) => {\n                if (this.enableLogs) {\n                    console.log('Room Opened: ', roomid)\n                }\n                this.isLoading = false\n\n                if (error) {\n                    formUtil.handleErrors(error)\n                } else if (isRoomOpened === true) {\n\n                    this.updatePageConfigs(true)\n\n                    this.whisperChannel(window.meetingChannel, 'MeetingRoomCreated', {\n                        roomId: meetingRoomId\n                    })\n\n                    this.Custom({\n                        url: `/${this.initUrl}/${this.uuid}/alert`,\n                        method: 'post',\n                        params: {\n                            type: 'MeetingRoomCreated',\n                            data: {\n                                roomId: meetingRoomId\n                            }\n                        }\n                    })\n                        .catch(error => {\n                            this.isLoading = false\n                            formUtil.handleErrors(error)\n                        })\n\n                    this.initSocketListener()\n\n                    this.$toasted.success($t('meeting.meeting_created'), this.$toastConfig)\n                }\n            })\n        },\n        joinRoom(meetingRoomId) {\n            this.rtcmConnection.session = {\n                ...this.meetingRulesGuest.session\n            }\n\n            this.videoList = []\n\n            this.getMediaConstraints()\n\n            const activeMeetingRules = this.entity.canModerate ? this.meetingRulesHost : this.meetingRulesGuest\n\n            const deviceRequest = this.validateMediaDeviceRequest(activeMeetingRules.mediaConstraints)\n\n            this.rtcmConnection.mediaConstraints = {\n                video: deviceRequest.video ? this.videoConstraints : false,\n                audio: deviceRequest.audio ? this.audioConstraints : false,\n                screen: deviceRequest.screen,\n            }\n\n            if (this.pageConfigs.allowJoiningWithoutDevices && !deviceRequest.audio && !deviceRequest.video && !deviceRequest.screen) {\n                this.rtcmConnection.dontCaptureUserMedia = true\n            }\n\n            this.rtcmConnection.sdpConstraints.mandatory = {\n                ...activeMeetingRules.mandatory\n            }\n\n            this.rtcmConnection.autoCloseEntireSession = activeMeetingRules.autoCloseEntireSession\n            this.rtcmConnection.enableScalableBroadcast = activeMeetingRules.enableScalableBroadcast\n            if (this.rtcmConnection.enableScalableBroadcast) {\n                this.rtcmConnection.maxRelayLimitPerUser = activeMeetingRules.maxRelayLimitPerUser\n            }\n            this.rtcmConnection.extra.isInitiator = this.entity.canModerate\n\n            // console.log('mediaConstraints')\n            // console.log(this.rtcmConnection.mediaConstraints)\n\n            // console.log('sdpConstraints')\n            // console.log(this.rtcmConnection.sdpConstraints)\n\n            this.rtcmConnection.join(meetingRoomId, (isJoined, roomid, error) => {\n                this.isLoading = false\n\n                if (isJoined === false || error) {\n                    this.closeConnectionAndStream()\n                    if (error === 'Room full') {\n                        this.$toasted.error($t('meeting.room_full'), this.$toastConfig.error)\n                    } else {\n                        this.$toasted.error($t('meeting.unable_to_join'), this.$toastConfig.error)\n                    }\n                } else {\n                    this.updatePageConfigs(this.entity.canModerate)\n\n                    this.initSocketListener()\n\n                    this.$toasted.success($t('meeting.meeting_joined'), this.$toastConfig)\n                }\n            })\n        },\n        applyOnStartConfigs() {\n            if (!this.rtcmConnection.extra.isInitiator && this.pageConfigs.muteParticipantsOnStart) {\n                window.setTimeout(() => {\n                    this.toggleAudio(null, true)\n                }, 1000)\n            }\n        },\n        shareScreen() {\n            try {\n                this.rtcmConnection.addStream({\n                    screen: true,\n                    streamCallback: (stream) => {\n                        this.rtcmConnection.extra.screenStreamId = stream.id\n                        this.updateExtraData()\n                    }\n                })\n            } catch (e) {\n            }\n        },\n        stopSharingScreen() {\n            this.isLoading = true\n            this.rtcmConnection.extra.screenStreamId = null\n            this.updateExtraData()\n\n            let found = this.$refs.videos.find(video => {\n                return video.id === this.localScreenStreamid\n            })\n\n            if (found && found.srcObject) {\n                let tracks = found.srcObject.getTracks()\n                tracks.forEach(track => {\n                    track.removeEventListener('ended', this.stopSharingScreen)\n                    track.enabled = false\n                    track.stop()\n                })\n                this.rtcmConnection.removeStream(this.localScreenStreamid)\n                this.emitSocketEvents('removedStream', found.srcObject)\n\n                // this.videoList = this.videoList.filter(video => video.id !== this.localScreenStreamid)\n                this.localScreenStreamid = null\n                this.isLoading = false\n            } else {\n                this.localScreenStreamid = null\n                this.isLoading = false\n            }\n        },\n        getOnline() {\n            this.isLoading = true\n            this.showAgenda = false\n            const meetingStatusEalier = this.entity.status\n\n            this.$gaEvent('engagement', 'meeting_getOnline')\n\n            this.initMediaAndRtcmConnection()\n\n            this.Custom({\n                url: `/${this.initUrl}/${this.uuid}/join`,\n                method: 'post',\n            })\n                .then(response => {\n                    this.meetingRoomId = response.meeting.roomId\n                    response.meeting = this.updateMeetingTimezone(response.meeting)\n                    this.entity = response.meeting\n                    this.rtcmConnection.extra = {\n                        username: this.user.username,\n                        name: this.user.name,\n                        uuid: this.user.uuid,\n                        avatar: this.profile.avatar,\n                        cover: this.profile.cover,\n                        audioMuted: !this.pageConfigs.enableAudio,\n                        videoMuted: !this.pageConfigs.enableVideo,\n                        isHandUp: this.isHandUp,\n                        isInitiator: false,\n                        isHost: this.entity.isHost,\n                        canModerate: this.entity.canModerate,\n                    }\n\n                    if (this.enableLogs) {\n                        console.log('rtcmConnection', this.rtcmConnection)\n                        console.log('mediaConfigurations', this.mediaConfigurations)\n                        console.log('mediaDevices', this.mediaDevices)\n                        console.log('pageConfigs', this.pageConfigs)\n                        console.log('videoConstraints', this.videoConstraints)\n                        console.log('audioConstraints', this.audioConstraints)\n                        console.log('meetingRulesHost', this.meetingRulesHost)\n                        console.log('meetingRulesGuest', this.meetingRulesGuest)\n                        console.log('rtcmConnection-ExtraData', this.rtcmConnection.extra)\n                    }\n\n                    this.rtcmConnection.checkPresence(this.meetingRoomId, (isRoomExist, roomid) => {\n\n                        if (this.enableLogs) {\n                            console.log('RoomID checkPresence', isRoomExist)\n                        }\n\n                        if (isRoomExist === true) {\n                            this.joinRoom(this.meetingRoomId)\n                        } else {\n                            if (this.entity.canModerate) {\n                                this.openRoom(this.meetingRoomId)\n                            } else {\n                                this.isLoading = false\n                                this.$toasted.error($t('meeting.room_not_found'), this.$toastConfig.error)\n                            }\n                        }\n\n                        this.startKeepAlivePolling()\n                        this.startMeetingTimer()\n                    })\n                })\n                .catch(error => {\n                    this.isLoading = false\n                    formUtil.handleErrors(error)\n                })\n        },\n        getOffline() {\n            this.$gaEvent('engagement', 'meeting_getOffline')\n\n            let alert = 'confirm'\n            if (this.rtcmConnection.recorder && window.recordingDurationInterval) {\n                alert = null\n                this.stopRecording()\n            }\n\n            this.isLoading = true\n            this.meetingAction('leave', null, {\n                alert,\n                sameCallbackIfError: true,\n                callback: (e) => {\n                    this.showAgenda = true\n                    this.showWhiteboard = false\n                    if (this.pageConfigs.layout === 'presentation') {\n                        this.pageConfigs.layout = this.pageConfigs.lastLayout\n                    }\n                    this.closeConnectionAndStream(false, () => {\n                        this.stopMeetingTimer()\n                        this.setupGreenRoom()\n                        this.initMediaAndRtcmConnection()\n                    })\n                }\n            })\n        },\n\n        // meeting action methods\n        meetingAction(action, data = {}, opts = { alert: 'confirm' }) {\n            const defaultOpts = { alert: 'confirm' }\n            opts = Object.assign({}, defaultOpts, opts)\n\n            const callApi = (dataToSend) => {\n                this.isLoading = true\n                data = dataToSend ? dataToSend : data\n\n\n                if (action === 'end') {\n                    if (!(this.entity && this.entity.status === 'live')) {\n                        return\n                    }\n                }\n\n                this.Custom({\n                    url: `/${this.initUrl}/${this.uuid}/${action}`,\n                    method: 'post',\n                    data\n                })\n                    .then(response => {\n                        this.updateEntityBackup(response.meeting)\n                        response.meeting = this.updateMeetingTimezone(response.meeting)\n                        this.entity = response.meeting\n\n                        let informObj = {\n                            ...this.entityDatesBackup,\n                            dateUpdated: true,\n                        }\n\n                        if (opts.inform) {\n                            informObj = {\n                                ...informObj,\n                                ...opts.inform,\n                            }\n                        }\n\n                        this.informAboutMeetingUpdate(informObj)\n\n                        this.$toasted.success(response.message, this.$toastConfig)\n                        if (opts.callback) {\n                            opts.callback(response)\n                        }\n                        this.isLoading = false\n                    })\n                    .catch(error => {\n                        this.isLoading = false\n                        if (opts.callback && opts.sameCallbackIfError) {\n                            opts.callback(error)\n                        }\n                        formUtil.handleErrors(error)\n                    })\n            }\n\n            if (!action) {\n                this.isLoading = false\n                return\n            }\n\n            if (opts.alert === 'confirm' || opts.alert === true) {\n                formUtil.confirmAction()\n                    .then((result) => {\n                        if (result.value) {\n                            callApi()\n                        } else {\n                            this.isLoading = false\n                            result.dismiss === Swal.DismissReason.cancel\n                        }\n                    })\n            } else if (opts.alert === 'input') {\n                swtAlert.fire({\n                    title: opts.title,\n                    input: 'text',\n                    inputPlaceholder: opts.inputPlaceholder,\n                    showCancelButton: true,\n                    confirmButtonText: 'Proceed!',\n                    cancelButtonText: 'Go Back!'\n                })\n                    .then((result) => {\n                        if (result.value) {\n                            let toSend = {}\n                            toSend[opts.fieldName] = result.value\n                            callApi(toSend)\n                        } else {\n                            this.isLoading = false\n                            result.dismiss === Swal.DismissReason.cancel\n                        }\n                    })\n            } else {\n                callApi()\n            }\n        },\n        snoozeMeeting(period) {\n            this.meetingAction('snooze', { period })\n        },\n        cancelMeeting() {\n            this.meetingAction('cancel', null, { alert: 'input', title: $t('meeting.reason_for_cancellation'), inputPlaceholder: $t('meeting.reason_for_cancellation'), fieldName: 'cancellationReason' })\n        },\n        endMeeting: _.debounce(function (alert = true) {\n            this.$gaEvent('engagement', 'meeting_endMeeting')\n\n            if (this.rtcmConnection && this.rtcmConnection.recorder && window.recordingDurationInterval) {\n                alert = null\n                this.stopRecording()\n            }\n\n            if (this.entity && this.entity.status === 'live') {\n                this.isLoading = true\n                this.meetingAction('end', null, {\n                    alert,\n                    sameCallbackIfError: true,\n                    callback: (e) => {\n                        this.showAgenda = true\n                        this.showWhiteboard = false\n                        if (this.pageConfigs.layout === 'presentation') {\n                            this.pageConfigs.layout = this.pageConfigs.lastLayout\n                        }\n                        if (e && e.meeting) {\n                            this.emitSocketEvents('meetingEnded', { status: e.meeting.status })\n                        }\n                        this.closeConnectionAndStream()\n                    }\n                })\n            } else {\n                this.showAgenda = true\n                this.showWhiteboard = false\n                if (this.pageConfigs.layout === 'presentation') {\n                    this.pageConfigs.layout = this.pageConfigs.lastLayout\n                }\n                if (e && e.meeting) {\n                    this.emitSocketEvents('meetingEnded', { status: e.meeting.status })\n                }\n                this.closeConnectionAndStream()\n            }\n        }, 5000, {\n            'leading': true,\n            'trailing': false\n        }),\n\n        // meeting related methods\n        updateMeetingRules() {\n            if (this.entity.type.uuid === 'video_conference') {\n                this.meetingRulesHost = {\n                    session: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                        data: true,\n                        oneway: false,\n                    },\n                    mediaConstraints: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                    },\n                    mandatory: {\n                        OfferToReceiveAudio: true,\n                        OfferToReceiveVideo: true,\n                    },\n                    autoCloseEntireSession: false,\n                    enableScalableBroadcast: false,\n                }\n                this.meetingRulesGuest = {\n                    session: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                        data: true,\n                        oneway: false,\n                    },\n                    mediaConstraints: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                    },\n                    mandatory: {\n                        OfferToReceiveAudio: true,\n                        OfferToReceiveVideo: true,\n                    },\n                    autoCloseEntireSession: false,\n                    enableScalableBroadcast: false,\n                }\n            } else if (this.entity.type.uuid === 'audio_conference') {\n                this.meetingRulesHost = {\n                    session: {\n                        audio: true,\n                        video: false,\n                        screen: false,\n                        data: true,\n                        oneway: false,\n                    },\n                    mediaConstraints: {\n                        audio: true,\n                        video: false,\n                        screen: false,\n                    },\n                    mandatory: {\n                        OfferToReceiveAudio: true,\n                        OfferToReceiveVideo: false,\n                    },\n                    autoCloseEntireSession: false,\n                    enableScalableBroadcast: false,\n                }\n                this.meetingRulesGuest = {\n                    session: {\n                        audio: true,\n                        video: false,\n                        screen: false,\n                        data: true,\n                        oneway: false,\n                    },\n                    mediaConstraints: {\n                        audio: true,\n                        video: false,\n                        screen: false,\n                    },\n                    mandatory: {\n                        OfferToReceiveAudio: true,\n                        OfferToReceiveVideo: false,\n                    },\n                    autoCloseEntireSession: false,\n                    enableScalableBroadcast: false,\n                }\n            } else if (this.entity.type.uuid === 'webinar') {\n                this.meetingRulesHost = {\n                    session: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                        data: true,\n                        oneway: true,\n                    },\n                    mediaConstraints: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                    },\n                    mandatory: {\n                        OfferToReceiveAudio: false,\n                        OfferToReceiveVideo: false,\n                    },\n                    autoCloseEntireSession: true,\n                    enableScalableBroadcast: true,\n                    maxRelayLimitPerUser: 1,\n                }\n                this.meetingRulesGuest = {\n                    session: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                        data: true,\n                        oneway: true,\n                    },\n                    mediaConstraints: {\n                        audio: false,\n                        video: false,\n                        screen: false,\n                    },\n                    mandatory: {\n                        OfferToReceiveAudio: true,\n                        OfferToReceiveVideo: true,\n                    },\n                    autoCloseEntireSession: true,\n                    enableScalableBroadcast: true,\n                    maxRelayLimitPerUser: 1,\n                }\n            } else if (this.entity.type.uuid === 'live_class') {\n                this.meetingRulesHost = {\n                    session: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                        data: true,\n                        oneway: false,\n                    },\n                    mediaConstraints: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                    },\n                    mandatory: {\n                        OfferToReceiveAudio: true,\n                        OfferToReceiveVideo: true,\n                    },\n                    autoCloseEntireSession: true,\n                    enableScalableBroadcast: false,\n                }\n                this.meetingRulesGuest = {\n                    session: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                        data: true,\n                        oneway: false,\n                    },\n                    mediaConstraints: {\n                        audio: true,\n                        video: true,\n                        screen: false,\n                    },\n                    mandatory: {\n                        OfferToReceiveAudio: true,\n                        OfferToReceiveVideo: true,\n                    },\n                    autoCloseEntireSession: true,\n                    enableScalableBroadcast: false,\n                }\n            } else if (this.entity.type.uuid === 'podcast') {\n                this.meetingRulesHost = {\n                    session: {\n                        audio: true,\n                        video: false,\n                        screen: false,\n                        data: false,\n                        oneway: true,\n                    },\n                    mediaConstraints: {\n                        audio: true,\n                        video: false,\n                        screen: false,\n                    },\n                    mandatory: {\n                        OfferToReceiveAudio: false,\n                        OfferToReceiveVideo: false,\n                    },\n                    autoCloseEntireSession: true,\n                    enableScalableBroadcast: true,\n                    maxRelayLimitPerUser: 1,\n                }\n                this.meetingRulesGuest = {\n                    session: {\n                        audio: true,\n                        video: false,\n                        screen: false,\n                        data: false,\n                        oneway: true,\n                    },\n                    mediaConstraints: {\n                        audio: false,\n                        video: false,\n                        screen: false,\n                    },\n                    mandatory: {\n                        OfferToReceiveAudio: true,\n                        OfferToReceiveVideo: false,\n                    },\n                    autoCloseEntireSession: true,\n                    enableScalableBroadcast: true,\n                    maxRelayLimitPerUser: 1,\n                }\n            }\n        },\n        updateMeetingTimezone(meetingEntity) {\n            const getTimezoneDateTime = (dt) => {\n                return MomentTz.momentDateTimeTz(dt, this.vars.serverDateTimeFormat)\n            }\n\n            this.updateEntityBackup(meetingEntity)\n            meetingEntity.startDateTime = getTimezoneDateTime(meetingEntity.startDateTime)\n            if (meetingEntity.plannedStartDateTime) {\n                meetingEntity.plannedStartDateTime = getTimezoneDateTime(meetingEntity.plannedStartDateTime)\n            }\n            if (meetingEntity.startedAt) {\n                meetingEntity.startedAt = getTimezoneDateTime(meetingEntity.startedAt)\n            }\n            if (meetingEntity.estimatedEndTime) {\n                meetingEntity.estimatedEndTime = getTimezoneDateTime(meetingEntity.estimatedEndTime)\n            }\n            return meetingEntity\n        },\n\n\n        // event callback methods\n        beforeUnload(event) {\n            if (this.localVideo) {\n                this.emitSocketEvents('removedStream', this.localVideo)\n            }\n\n            if (this.stopNavigation) {\n                event.returnValue = this.stopNavigationMessage;\n            }\n        },\n        logEvent(msg, args, type = 'log') {\n            if (this.enableLogs) {\n                if (type === 'log') {\n                    console.log(msg, args)\n                } else if (type === 'error') {\n                    console.error(msg, args)\n                } else if (type === 'debug') {\n                    console.trace(msg, args)\n                }\n            }\n        },\n\n        // devices modal methods\n        toggleDevicesModal() {\n            this.mediaConfigFormData = _.cloneDeep(this.mediaConfigurations)\n            this.showDevicesModal = true\n        },\n        onDevicesModalOK(e) {\n            e.preventDefault()\n\n            if (!areEqual(this.mediaConfigFormData, this.mediaConfigurations)) {\n                this.mediaConfigurations = _.cloneDeep(this.mediaConfigFormData)\n                this.applyMediaConstraints()\n            }\n\n            this.$nextTick(() => {\n                this.$bvModal.hide('devicesModal')\n            })\n        },\n        onDevicesModalCancel(e) {\n            e.preventDefault()\n            this.$nextTick(() => {\n                this.$bvModal.hide('devicesModal')\n            })\n        },\n\n\n        // page methods\n        updatePageConfigs(isInitiator = false) {\n            const configAudioRecFormat = this.configs.meeting.recordingFormatAudio ? this.configs.meeting.recordingFormatAudio : 'audio/webm'\n            const configVideoRecFormat = this.configs.meeting.recordingFormatVideo ? this.configs.meeting.recordingFormatVideo : 'video/webm'\n\n            let configOptions = {}\n            let recordingType = this.mediaConfigurations.recording.type\n            let recordingFormat = this.mediaConfigurations.recording.mimeType\n\n            if (this.entity.type.uuid === 'video_conference') {\n                configOptions = {\n                    enableAudio: true,\n                    enableVideo: true,\n                    showEnableAudioBtn: true,\n                    showEnableVideoBtn: true,\n                }\n                recordingType = 'video'\n                recordingFormat = configVideoRecFormat\n            } else if (this.entity.type.uuid === 'audio_conference') {\n                configOptions = {\n                    enableAudio: true,\n                    enableVideo: true,\n                    showEnableAudioBtn: true,\n                    showEnableVideoBtn: false,\n                }\n                recordingType = 'audio'\n                recordingFormat = configAudioRecFormat\n            } else if (this.entity.type.uuid === 'webinar') {\n                configOptions = isInitiator ? {\n                    enableAudio: true,\n                    enableVideo: true,\n                    showEnableAudioBtn: true,\n                    showEnableVideoBtn: true,\n                } : {\n                    enableAudio: true,\n                    enableVideo: true,\n                    showEnableAudioBtn: false,\n                    showEnableVideoBtn: false,\n                    enableScreenSharing: false,\n                    enableFileSharing: false,\n                    enableRecording: false,\n                    enableHandGesture: false,\n                    enableWhiteboard: false,\n                }\n                recordingType = 'video'\n                recordingFormat = configVideoRecFormat\n            } else if (this.entity.type.uuid === 'live_class') {\n                configOptions = isInitiator ? {\n                    enableAudio: true,\n                    enableVideo: true,\n                    showEnableAudioBtn: true,\n                    showEnableVideoBtn: true,\n                } : {\n                    enableAudio: true,\n                    enableVideo: true,\n                    showEnableAudioBtn: false,\n                    showEnableVideoBtn: false,\n                    enableScreenSharing: false,\n                    enableFileSharing: false,\n                    enableRecording: false,\n                    enableWhiteboard: false,\n                }\n                recordingType = 'video'\n                recordingFormat = configVideoRecFormat\n            } else if (this.entity.type.uuid === 'podcast') {\n                configOptions = isInitiator ? {\n                    enableAudio: true,\n                    enableVideo: false,\n                    showEnableAudioBtn: true,\n                    showEnableVideoBtn: false,\n                    enableScreenSharing: false,\n                    enableHandGesture: false,\n                    enableWhiteboard: false,\n                } : {\n                    enableAudio: true,\n                    enableVideo: false,\n                    showEnableAudioBtn: false,\n                    showEnableVideoBtn: false,\n                    enableScreenSharing: false,\n                    enableFileSharing: false,\n                    enableRecording: false,\n                    enableHandGesture: false,\n                    enableWhiteboard: false,\n                }\n                recordingType = 'audio'\n                recordingFormat = configAudioRecFormat\n            }\n\n            configOptions.objForEach((value, key) => this.pageConfigs[key] = value)\n\n            this.mediaConfigurations.recording.type = recordingType\n            this.mediaConfigurations.recording.mimeType = recordingFormat\n            this.mediaConfigurations.recording.timeSlice = this.pageConfigs.recordingTimeSlice || 5000\n\n\n            let selectedResolution = this.mediaDevices.resolutions.find(r => r.label === this.mediaConfigurations.selectedResolution)\n\n            if (selectedResolution && selectedResolution.label !== 'Auto') {\n                this.mediaConfigurations.recording.video = {\n                    width: selectedResolution.constraints.width.max,\n                    height: selectedResolution.constraints.height.max,\n                }\n            } else if (this.mediaConfigurations.recording.video) {\n                delete this.mediaConfigurations.recording.video\n            }\n\n\n            this.rtcmConnection.extra.audioMuted = !this.pageConfigs.enableAudio\n            this.rtcmConnection.extra.videoMuted = !this.pageConfigs.enableVideo\n            this.rtcmConnection.extra.isHandUp = this.isHandUp\n            this.updateExtraData()\n\n            if (this.pageConfigs.enableWhiteboard) {\n                loadScript('/js/canvas-designer/webrtc-handler.js')\n                loadScript('/js/canvas-designer/canvas-designer-widget.js')\n            }\n        },\n        destroyPage() {\n            if (window.countdownInterval) {\n                clearInterval(window.countdownInterval)\n            }\n            if (window.meetingKeepAliveTimer) {\n                clearInterval(window.meetingKeepAliveTimer)\n            }\n            if (window.recordingDurationInterval) {\n                clearInterval(window.recordingDurationInterval)\n            }\n\n            this.SetUiConfig({ pageHeaderShow: true, pageFooterShow: true })\n\n            this.closeConnectionAndStream()\n\n            if (window.Echo) {\n                if (window.meetingChannel) {\n                    window.meetingChannel.stopListening('MeetingStatusChanged')\n                    window.meetingChannel.stopListening('NewMessage')\n                }\n                window.Echo.leave(`Meeting.${this.uuid}`)\n            }\n\n            if (screenfull.isEnabled) {\n                screenfull.off('change')\n                screenfull.off('error')\n            }\n        },\n        getInitialData() {\n            this.isLoading = true\n\n            if (!window.Echo) {\n                this.$toasted.error($t('config.pusher.credential_required'), this.$toastConfig.error)\n                this.$router.push({ name: this.fallBackRoute })\n                return\n            }\n\n            return this.Get({ uuid: this.uuid })\n                .then(response => {\n                    if (response.isInstantMeeting) {\n                        this.fallBackRoute = 'appInstantMeetingList'\n                        this.pageConfigs.hasAgenda = false\n                    }\n\n                    if (response.isMeetingRoom) {\n                        this.pageConfigs.hasAgenda = false\n                        this.fallBackRoute = 'appRoomList'\n                    }\n\n                    if (response.identifier && response.isPam && !(this.$route.query && this.$route.query.identifier && this.$route.query.identifier === response.identifier)) {\n                        this.$router.replace({\n                            name: this.$route.name,\n                            params: this.$route.params,\n                            query: {\n                                ...this.$route.query,\n                                identifier: response.identifier\n                            }\n                        })\n                    }\n\n                    if (response.isPaid && !response.hasPaid) {\n                        this.$toasted.error($t('meeting.could_not_join_paid_meeting_without_payment'), this.$toastConfig.error)\n\n                        setTimeout(() => {\n                            this.$router.push({\n                                name: 'appMeetingPayment',\n                                params: {\n                                    uuid: response.uuid\n                                },\n                            })\n                        }, 2000)\n                        return\n                    }\n\n                    response.config.objForEach((value, key) => this.pageConfigs[key] = value)\n\n                    this.pageConfigs.disableScroll = this.pageConfigs.layout === 'grid' ? true : (response.config && response.config.hasOwnProperty('disableScroll') ? response.config.disableScroll : this.pageConfigs.disableScroll)\n\n                    response = this.updateMeetingTimezone(response)\n                    this.entity = response\n                    this.updateMeetingRules()\n\n                    //Changes to prefer rear camera\n                    if (this.pageConfigs.preferRearCameraFirst) {\n                        this.mediaConfigurations.facingMode = 'environment'\n                    }\n\n                    if (response.roomId && response.status === 'live') {\n                        setTimeout(() => {\n                            this.initMediaAndRtcmConnection()\n\n                            this.rtcmConnection.checkPresence(response.roomId, (isRoomExist, roomid) => {\n                                this.roomIdAlive = !!isRoomExist\n                            })\n                        }, 1000)\n                    }\n\n                    this.joinChannel()\n                    this.setupGreenRoom()\n\n                    if (response.isInstantMeeting && !response.isBlocked && response.status === 'live') {\n                        if (!((this.rtcmConnection && this.rtcmConnection.isInitiator) || response.canModerate) && (response.type.uuid === 'live_class' || response.type.uuid === 'webinar')) { //if current user is a normal user (not an initiator or moderator), and type is live class or webinar\n                            this.isLoading = false\n                        } else {\n                            this.getOnline()\n                        }\n                    } else {\n                        this.isLoading = false\n                    }\n\n                    if (response.autoTranslate) {\n                        this.autoTranslate = response.autoTranslate;\n                    }\n\n                    return response\n                })\n                .catch(error => {\n                    this.isLoading = false\n                    formUtil.handleErrors(error)\n                    this.$router.push({ name: this.fallBackRoute })\n                    return error\n                })\n        },\n        stopStream(stream) {\n            if (stream && _.isFunction(stream.stop)) {\n                stream.stop()\n            }\n            if (stream && _.isFunction(stream.getTracks)) {\n                stream.getTracks().forEach(track => track.stop())\n            }\n        },\n        toggleVideoTracks(stream, value) {\n            if (!stream) {\n                return\n            }\n            const tracks = stream.getVideoTracks()\n            tracks.forEach(track => {\n                track.enabled = value\n            })\n        },\n        toggleAudioTracks(stream, value) {\n            if (!stream) {\n                return\n            }\n            const tracks = stream.getAudioTracks()\n            tracks.forEach(track => {\n                track.enabled = value\n            })\n        },\n        setupGreenRoom(force = false) {\n\n            const setupMicActivity = (stream) => {\n                if (this.$refs.greenRoomAudio && this.pageConfigs.enableAudio) {\n                    const audioContext = new AudioContext()\n                    const analyser = audioContext.createAnalyser()\n                    const microphone = audioContext.createMediaStreamSource(stream)\n                    const javascriptNode = audioContext.createScriptProcessor(2048, 1, 1)\n\n                    analyser.smoothingTimeConstant = 0.8\n                    analyser.fftSize = 1024\n\n                    microphone.connect(analyser)\n                    analyser.connect(javascriptNode)\n                    javascriptNode.connect(audioContext.destination)\n\n                    VuMeter(this.$refs.greenRoomAudio, {\n                        width: 'sibling',\n                        boxGapFraction: 0.2,\n                    })\n\n                    javascriptNode.onaudioprocess = () => {\n                        let array = new Uint8Array(analyser.frequencyBinCount)\n                        analyser.getByteFrequencyData(array)\n                        let values = 0\n\n                        let length = array.length\n                        for (let i = 0; i < length; i++) {\n                            values += (array[i])\n                        }\n\n                        let average = values / length\n                        let volumeActivity = Math.round(average)\n\n                        // console.log(Math.round(average))\n                        this.micVolumeActivity = volumeActivity < 0 ? 0 : volumeActivity\n                    }\n                }\n            }\n\n\n\n            if (this.$refs.videos && this.$refs.videos.length) {\n                if (this.localGreenRoomStream) {\n                    this.stopStream(this.localGreenRoomStream)\n                }\n                this.localGreenRoomStream = null\n\n                return\n            }\n\n            if (this.pageConfigs.enableVideo && this.pageConfigs.enableAudio && !(this.$refs.greenRoomVideo && this.$refs.greenRoomVideo.srcObject)) {\n                force = true\n            }\n\n\n\n            if (!this.localGreenRoomStream || force) {\n                if (this.localGreenRoomStream) {\n                    this.stopStream(this.localGreenRoomStream)\n                }\n                this.localGreenRoomStream = null\n\n                this.getMediaConstraints()\n\n                if ((this.videoConstraints && this.mediaConfigurations.selectedVideoInput) || (this.audioConstraints && this.mediaConfigurations.selectedAudioInput)) {\n\n                    navigator.mediaDevices.getUserMedia({\n                        video: this.videoConstraints,\n                        audio: this.audioConstraints || true\n                    })\n                        .then((stream) => {\n                            this.toggleVideoTracks(stream, this.pageConfigs.enableVideo)\n\n                            this.toggleAudioTracks(stream, this.pageConfigs.enableAudio)\n\n                            this.localGreenRoomStream = stream\n\n                            if (this.$refs.greenRoomVideo && this.pageConfigs.enableVideo) {\n                                this.$refs.greenRoomVideo.srcObject = stream\n                            }\n\n                            setTimeout(() => {\n                                setupMicActivity(this.localGreenRoomStream)\n                            }, 1000)\n                        })\n                        .catch(this.rtcmOnMediaError)\n                }\n            } else {\n                if (this.pageConfigs.enableVideo || this.pageConfigs.enableAudio) {\n\n                    this.toggleVideoTracks(this.localGreenRoomStream, this.pageConfigs.enableVideo)\n\n                    this.toggleAudioTracks(this.localGreenRoomStream, this.pageConfigs.enableAudio)\n\n                    if (!this.pageConfigs.enableVideo && this.$refs.greenRoomVideo) {\n                        this.$refs.greenRoomVideo.srcObject = null\n                    }\n\n                    setupMicActivity(this.localGreenRoomStream)\n                } else {\n                    if (this.localGreenRoomStream) {\n                        this.stopStream(this.localGreenRoomStream)\n                    }\n                    this.localGreenRoomStream = null\n                    this.$refs.greenRoomVideo.srcObject = null\n                }\n            }\n        },\n        setupMediaDevices() {\n            const rtcmc = new RTCMultiConnection()\n            if (rtcmc.DetectRTC.isWebRTCSupported === false) {\n                this.$toasted.error($t('meeting.invalid_browser_error'), this.$toastConfig.error)\n            }\n\n            this.isLoading = true\n\n            this.mediaDeviceIssue = this.permissionRejected = false\n\n            const loadDevices = (callbackFn) => {\n                rtcmc.DetectRTC.load(() => {\n                    if (this.enableLogs) {\n                        console.log(rtcmc.DetectRTC)\n                    }\n\n                    if (rtcmc.DetectRTC.hasMicrophone === true) {\n                        this.mediaDevices.audioInput = rtcmc.DetectRTC.audioInputDevices.map(device => {\n                            return {\n                                'uuid': device.deviceId || device.id,\n                                'name': device.label || `microphone ${this.mediaDevices.audioInput.length + 1}`,\n                            }\n                        })\n                    } else {\n                        this.mediaDeviceIssue = true\n                    }\n\n                    if (rtcmc.DetectRTC.hasWebcam === true) {\n                        this.mediaDevices.videoInput = rtcmc.DetectRTC.videoInputDevices.map(device => {\n                            return {\n                                'uuid': device.deviceId || device.id,\n                                'name': device.label || `camera ${this.mediaDevices.videoInput.length + 1}`,\n                            }\n                        })\n                    } else {\n                        this.mediaDeviceIssue = true\n                    }\n\n                    if (rtcmc.DetectRTC.hasSpeakers === true) {\n                        this.mediaDevices.audioOutput = rtcmc.DetectRTC.audioOutputDevices.map(device => {\n                            return {\n                                'uuid': device.deviceId || device.id,\n                                'name': device.label || `speaker ${this.mediaDevices.audioOutput.length + 1}`,\n                            }\n                        })\n                    } else {\n                        this.$toasted.error($t('meeting.audio_output_device_error'), this.$toastConfig.error)\n                    }\n\n                    this.mediaConfigurations.selectedAudioInput = this.mediaDevices.audioInput ? this.mediaDevices.audioInput[0] : null\n                    this.mediaConfigurations.selectedVideoInput = this.mediaDevices.videoInput ? this.mediaDevices.videoInput[0] : null\n\n                    this.mediaConfigFormData = _.cloneDeep(this.mediaConfigurations)\n\n                    if (callbackFn) {\n                        callbackFn()\n                    }\n\n                    this.getInitialData()\n                })\n            }\n\n            if (!rtcmc.DetectRTC.MediaDevices.length || (rtcmc.DetectRTC.MediaDevices[0] && rtcmc.DetectRTC.MediaDevices[0].isCustomLabel)) {\n\n                navigator.mediaDevices.getUserMedia({ audio: true, video: true })\n                    .then((stream) => {\n                        loadDevices(() => {\n                            // release camera\n                            stream.getTracks().forEach(function (track) {\n                                track.stop()\n                            })\n                        })\n                    })\n                    .catch((error) => {\n                        this.rtcmOnMediaError(error)\n                        this.getInitialData()\n                    })\n            } else {\n                loadDevices()\n            }\n        },\n        doInit() {\n            this.Init({ url: this.initUrl })\n\n            if (window.isDuplicate()) {\n                this.duplicateTab = true\n            }\n\n            this.setupMediaDevices()\n        },\n        initNetworkListener() {\n            const vm = this\n            window.addEventListener('offline', (e) => {\n                if (vm.rtcmConnection && vm.videoList && vm.videoList.length) {\n                    vm.videoList = vm.videoList.slice(0, 1)\n                    vm.autoSetVideoMaximized()\n                }\n            })\n\n            window.addEventListener('online', (e) => {\n                vm.closeConnectionAndStream(true)\n            })\n        },\n    },\n    mounted() {\n        if (screenfull.isEnabled) {\n            screenfull.on('change', () => {\n                this.SetUiConfig({ fullScreen: screenfull.isFullscreen })\n            })\n            screenfull.on('error', event => {\n                console.error('Failed to enable fullscreen', event);\n            })\n\n            this.SetUiConfig({ fullScreen: false })\n        }\n\n        this.doInit()\n        window.addEventListener('beforeunload', this.beforeUnload)\n        this.checkIfOffline()\n        this.initNetworkListener()\n    },\n    created() {\n        document.body.classList.add(\"meeting-page\")\n\n        if (this.$route.params.uuid) {\n            this.uuid = this.$route.params.uuid\n        }\n\n        this.mediaConfigFormData = _.cloneDeep(this.mediaConfigurations)\n        this.SetUiConfig({ pageHeaderShow: false, pageFooterShow: false })\n\n        // detect 2G and alert\n        if (navigator.connection &&\n            navigator.connection.type === 'cellular' &&\n            navigator.connection.downlinkMax <= 0.115) {\n            alert('2G is not supported. Please use a better internet service.')\n        }\n    },\n    beforeRouteEnter(to, from, next) {\n        if (!to.params.uuid) {\n            next({ name: from === 'appMeetingView' ? from : 'AppMeetingList' })\n        } else {\n            next(vm => {\n                vm.prevRoute = from\n            })\n        }\n    },\n\n\n    beforeDestroy() {\n        if (!window.isMeetingPageDestroyed) {\n            this.isLoading = true\n\n            this.destroyPage()\n\n            if (this.entity && this.entity.status === 'live') {\n                this.Custom({\n                    url: `/${this.initUrl}/${this.uuid}/leave`,\n                    method: 'post',\n                })\n            }\n\n            window.isMeetingPageDestroyed = true\n        }\n    },\n    beforeRouteLeave(to, from, next) {\n        const doBeforeLeaving = (leave = true) => {\n            if (!leave) {\n                return;\n            }\n            this.isLoading = true\n\n            this.destroyPage()\n            window.removeEventListener('beforeunload', this.beforeUnload)\n\n            if (this.entity && this.entity.status === 'live') {\n                this.Custom({\n                    url: `/${this.initUrl}/${this.uuid}/leave`,\n                    method: 'post',\n                })\n                    .then(response => {\n                        window.isMeetingPageDestroyed = true\n                        next()\n                    })\n                    .catch(error => {\n                        window.isMeetingPageDestroyed = true\n                        next()\n                    })\n            } else {\n                window.isMeetingPageDestroyed = true\n                next()\n            }\n        }\n\n        if (this.hasVideos) {\n            formUtil.unsavedCheckAlert({}, { unsaved: true }, doBeforeLeaving, {\n                title: $t('meeting.is_live'),\n            })\n        } else {\n            doBeforeLeaving()\n        }\n    },\n    destroyed() {\n        document.body.classList.remove(\"meeting-page\")\n    },\n    filters: {\n        decimal(value, num = 2) {\n            return Number(value).toFixed(num)\n        }\n    },\n}\n","import { render, staticRenderFns } from \"./live.vue?vue&type=template&id=12b2cb6d&\"\nimport script from \"./live.vue?vue&type=script&lang=js&\"\nexport * from \"./live.vue?vue&type=script&lang=js&\"\nimport style0 from \"./live.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('12b2cb6d')) {\n      api.createRecord('12b2cb6d', component.options)\n    } else {\n      api.reload('12b2cb6d', component.options)\n    }\n    module.hot.accept(\"./live.vue?vue&type=template&id=12b2cb6d&\", function () {\n      api.rerender('12b2cb6d', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/app/meeting/live.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./live.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./live.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/style-loader/index.js!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./live.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./live.vue?vue&type=template&id=12b2cb6d&\"","'use strict';\n\n// Last time updated: 2021-03-09 3:20:22 AM UTC\n\n// ________________\n// RecordRTC v5.6.2\n\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\n\n// --------------------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n// --------------------------------------------------\n\n// ____________\n// RecordRTC.js\n\n/**\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows.\n * @summary Record audio, video or screen inside the browser.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef RecordRTC\n * @class\n * @example\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\n *     type: 'video', // audio or video or gif or canvas\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\n * });\n * recorder.startRecording();\n * @see For further information:\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\n */\n\nfunction RecordRTC(mediaStream, config) {\n    if (!mediaStream) {\n        throw 'First parameter is required.';\n    }\n\n    config = config || {\n        type: 'video'\n    };\n\n    config = new RecordRTCConfiguration(mediaStream, config);\n\n    // a reference to user's recordRTC object\n    var self = this;\n\n    function startRecording(config2) {\n        if (!config.disableLogs) {\n            console.log('RecordRTC version: ', self.version);\n        }\n\n        if (!!config2) {\n            // allow users to set options using startRecording method\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\n            config = new RecordRTCConfiguration(mediaStream, config2);\n        }\n\n        if (!config.disableLogs) {\n            console.log('started recording ' + config.type + ' stream.');\n        }\n\n        if (mediaRecorder) {\n            mediaRecorder.clearRecordedData();\n            mediaRecorder.record();\n\n            setState('recording');\n\n            if (self.recordingDuration) {\n                handleRecordingDuration();\n            }\n            return self;\n        }\n\n        initRecorder(function() {\n            if (self.recordingDuration) {\n                handleRecordingDuration();\n            }\n        });\n\n        return self;\n    }\n\n    function initRecorder(initCallback) {\n        if (initCallback) {\n            config.initCallback = function() {\n                initCallback();\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\n            };\n        }\n\n        var Recorder = new GetRecorderType(mediaStream, config);\n\n        mediaRecorder = new Recorder(mediaStream, config);\n        mediaRecorder.record();\n\n        setState('recording');\n\n        if (!config.disableLogs) {\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\n        }\n    }\n\n    function stopRecording(callback) {\n        callback = callback || function() {};\n\n        if (!mediaRecorder) {\n            warningLog();\n            return;\n        }\n\n        if (self.state === 'paused') {\n            self.resumeRecording();\n\n            setTimeout(function() {\n                stopRecording(callback);\n            }, 1);\n            return;\n        }\n\n        if (self.state !== 'recording' && !config.disableLogs) {\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\n        }\n\n        if (!config.disableLogs) {\n            console.log('Stopped recording ' + config.type + ' stream.');\n        }\n\n        if (config.type !== 'gif') {\n            mediaRecorder.stop(_callback);\n        } else {\n            mediaRecorder.stop();\n            _callback();\n        }\n\n        setState('stopped');\n\n        function _callback(__blob) {\n            if (!mediaRecorder) {\n                if (typeof callback.call === 'function') {\n                    callback.call(self, '');\n                } else {\n                    callback('');\n                }\n                return;\n            }\n\n            Object.keys(mediaRecorder).forEach(function(key) {\n                if (typeof mediaRecorder[key] === 'function') {\n                    return;\n                }\n\n                self[key] = mediaRecorder[key];\n            });\n\n            var blob = mediaRecorder.blob;\n\n            if (!blob) {\n                if (__blob) {\n                    mediaRecorder.blob = blob = __blob;\n                } else {\n                    throw 'Recording failed.';\n                }\n            }\n\n            if (blob && !config.disableLogs) {\n                console.log(blob.type, '->', bytesToSize(blob.size));\n            }\n\n            if (callback) {\n                var url;\n\n                try {\n                    url = URL.createObjectURL(blob);\n                } catch (e) {}\n\n                if (typeof callback.call === 'function') {\n                    callback.call(self, url);\n                } else {\n                    callback(url);\n                }\n            }\n\n            if (!config.autoWriteToDisk) {\n                return;\n            }\n\n            getDataURL(function(dataURL) {\n                var parameter = {};\n                parameter[config.type + 'Blob'] = dataURL;\n                DiskStorage.Store(parameter);\n            });\n        }\n    }\n\n    function pauseRecording() {\n        if (!mediaRecorder) {\n            warningLog();\n            return;\n        }\n\n        if (self.state !== 'recording') {\n            if (!config.disableLogs) {\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\n            }\n            return;\n        }\n\n        setState('paused');\n\n        mediaRecorder.pause();\n\n        if (!config.disableLogs) {\n            console.log('Paused recording.');\n        }\n    }\n\n    function resumeRecording() {\n        if (!mediaRecorder) {\n            warningLog();\n            return;\n        }\n\n        if (self.state !== 'paused') {\n            if (!config.disableLogs) {\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\n            }\n            return;\n        }\n\n        setState('recording');\n\n        // not all libs have this method yet\n        mediaRecorder.resume();\n\n        if (!config.disableLogs) {\n            console.log('Resumed recording.');\n        }\n    }\n\n    function readFile(_blob) {\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\n    }\n\n    function getDataURL(callback, _mediaRecorder) {\n        if (!callback) {\n            throw 'Pass a callback function over getDataURL.';\n        }\n\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\n\n        if (!blob) {\n            if (!config.disableLogs) {\n                console.warn('Blob encoder did not finish its job yet.');\n            }\n\n            setTimeout(function() {\n                getDataURL(callback, _mediaRecorder);\n            }, 1000);\n            return;\n        }\n\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\n            var webWorker = processInWebWorker(readFile);\n\n            webWorker.onmessage = function(event) {\n                callback(event.data);\n            };\n\n            webWorker.postMessage(blob);\n        } else {\n            var reader = new FileReader();\n            reader.readAsDataURL(blob);\n            reader.onload = function(event) {\n                callback(event.target.result);\n            };\n        }\n\n        function processInWebWorker(_function) {\n            try {\n                var blob = URL.createObjectURL(new Blob([_function.toString(),\n                    'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\n                ], {\n                    type: 'application/javascript'\n                }));\n\n                var worker = new Worker(blob);\n                URL.revokeObjectURL(blob);\n                return worker;\n            } catch (e) {}\n        }\n    }\n\n    function handleRecordingDuration(counter) {\n        counter = counter || 0;\n\n        if (self.state === 'paused') {\n            setTimeout(function() {\n                handleRecordingDuration(counter);\n            }, 1000);\n            return;\n        }\n\n        if (self.state === 'stopped') {\n            return;\n        }\n\n        if (counter >= self.recordingDuration) {\n            stopRecording(self.onRecordingStopped);\n            return;\n        }\n\n        counter += 1000; // 1-second\n\n        setTimeout(function() {\n            handleRecordingDuration(counter);\n        }, 1000);\n    }\n\n    function setState(state) {\n        if (!self) {\n            return;\n        }\n\n        self.state = state;\n\n        if (typeof self.onStateChanged.call === 'function') {\n            self.onStateChanged.call(self, state);\n        } else {\n            self.onStateChanged(state);\n        }\n    }\n\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\n\n    function warningLog() {\n        if (config.disableLogs === true) {\n            return;\n        }\n\n        console.warn(WARNING);\n    }\n\n    var mediaRecorder;\n\n    var returnObject = {\n        /**\n         * This method starts the recording.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * var recorder = RecordRTC(mediaStream, {\n         *     type: 'video'\n         * });\n         * recorder.startRecording();\n         */\n        startRecording: startRecording,\n\n        /**\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\n         * @param {function} callback - Callback to get the recorded blob.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     // use either \"this\" or \"recorder\" object; both are identical\n         *     video.src = this.toURL();\n         *     var blob = this.getBlob();\n         * });\n         */\n        stopRecording: stopRecording,\n\n        /**\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo Firefox is unable to pause the recording. Fix it.\n         * @example\n         * recorder.pauseRecording();  // pause the recording\n         * recorder.resumeRecording(); // resume again\n         */\n        pauseRecording: pauseRecording,\n\n        /**\n         * This method resumes the recording.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.pauseRecording();  // first of all, pause the recording\n         * recorder.resumeRecording(); // now resume it\n         */\n        resumeRecording: resumeRecording,\n\n        /**\n         * This method initializes the recording.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo This method should be deprecated.\n         * @example\n         * recorder.initRecorder();\n         */\n        initRecorder: initRecorder,\n\n        /**\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * var fiveMinutes = 5 * 1000 * 60;\n         * recorder.setRecordingDuration(fiveMinutes, function() {\n         *    var blob = this.getBlob();\n         *    video.src = this.toURL();\n         * });\n         *\n         * // or otherwise\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\n         *    var blob = this.getBlob();\n         *    video.src = this.toURL();\n         * });\n         */\n        setRecordingDuration: function(recordingDuration, callback) {\n            if (typeof recordingDuration === 'undefined') {\n                throw 'recordingDuration is required.';\n            }\n\n            if (typeof recordingDuration !== 'number') {\n                throw 'recordingDuration must be a number.';\n            }\n\n            self.recordingDuration = recordingDuration;\n            self.onRecordingStopped = callback || function() {};\n\n            return {\n                onRecordingStopped: function(callback) {\n                    self.onRecordingStopped = callback;\n                }\n            };\n        },\n\n        /**\n         * This method can be used to clear/reset all the recorded data.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\n         * @example\n         * recorder.clearRecordedData();\n         */\n        clearRecordedData: function() {\n            if (!mediaRecorder) {\n                warningLog();\n                return;\n            }\n\n            mediaRecorder.clearRecordedData();\n\n            if (!config.disableLogs) {\n                console.log('Cleared old recorded data.');\n            }\n        },\n\n        /**\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     var blob = this.getBlob();\n         *\n         *     var file = new File([blob], 'filename.webm', {\n         *         type: 'video/webm'\n         *     });\n         *\n         *     var formData = new FormData();\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\n         *     uploadToServer(formData);\n         * });\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\n         */\n        getBlob: function() {\n            if (!mediaRecorder) {\n                warningLog();\n                return;\n            }\n\n            return mediaRecorder.blob;\n        },\n\n        /**\n         * Get data-URI instead of Blob.\n         * @param {function} callback - Callback to get the Data-URI.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     recorder.getDataURL(function(dataURI) {\n         *         video.src = dataURI;\n         *     });\n         * });\n         */\n        getDataURL: getDataURL,\n\n        /**\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     video.src = this.toURL();\n         * });\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\n         */\n        toURL: function() {\n            if (!mediaRecorder) {\n                warningLog();\n                return;\n            }\n\n            return URL.createObjectURL(mediaRecorder.blob);\n        },\n\n        /**\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * var internalRecorder = recorder.getInternalRecorder();\n         * if(internalRecorder instanceof MultiStreamRecorder) {\n         *     internalRecorder.addStreams([newAudioStream]);\n         *     internalRecorder.resetVideoStreams([screenStream]);\n         * }\n         * @returns {Object} Returns internal recording object.\n         */\n        getInternalRecorder: function() {\n            return mediaRecorder;\n        },\n\n        /**\n         * Invoke save-as dialog to save the recorded blob into your disk.\n         * @param {string} fileName - Set your own file name.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.stopRecording(function() {\n         *     this.save('file-name');\n         *\n         *     // or manually:\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\n         * });\n         */\n        save: function(fileName) {\n            if (!mediaRecorder) {\n                warningLog();\n                return;\n            }\n\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\n        },\n\n        /**\n         * This method gets a blob from indexed-DB storage.\n         * @param {function} callback - Callback to get the recorded blob.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.getFromDisk(function(dataURL) {\n         *     video.src = dataURL;\n         * });\n         */\n        getFromDisk: function(callback) {\n            if (!mediaRecorder) {\n                warningLog();\n                return;\n            }\n\n            RecordRTC.getFromDisk(config.type, callback);\n        },\n\n        /**\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\n         * @type {Array.<Array>}\n         * @param {Array} arrayOfWebPImages - Array of webp images.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @todo This method should be deprecated.\n         * @example\n         * var arrayOfWebPImages = [];\n         * arrayOfWebPImages.push({\n         *     duration: index,\n         *     image: 'data:image/webp;base64,...'\n         * });\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\n         */\n        setAdvertisementArray: function(arrayOfWebPImages) {\n            config.advertisement = [];\n\n            var length = arrayOfWebPImages.length;\n            for (var i = 0; i < length; i++) {\n                config.advertisement.push({\n                    duration: i,\n                    image: arrayOfWebPImages[i]\n                });\n            }\n        },\n\n        /**\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     var blob = this.blob;\n         *\n         *     // below one is recommended\n         *     var blob = this.getBlob();\n         * });\n         */\n        blob: null,\n\n        /**\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\n         * });\n         */\n        bufferSize: 0,\n\n        /**\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\n         * });\n         */\n        sampleRate: 0,\n\n        /**\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\n         * @memberof RecordRTC\n         * @instance\n         * @readonly\n         * @example\n         * recorder.stopRecording(function() {\n         *     var arrayBuffer = this.buffer;\n         *     alert(arrayBuffer.byteLength);\n         * });\n         */\n        buffer: null,\n\n        /**\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.reset();\n         * recorder.startRecording();\n         */\n        reset: function() {\n            if (self.state === 'recording' && !config.disableLogs) {\n                console.warn('Stop an active recorder.');\n            }\n\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\n                mediaRecorder.clearRecordedData();\n            }\n            mediaRecorder = null;\n            setState('inactive');\n            self.blob = null;\n        },\n\n        /**\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\n         * @method\n         * @memberof RecordRTC\n         * @instance\n         * @example\n         * recorder.onStateChanged = function(state) {\n         *     console.log('Recorder state: ', state);\n         * };\n         */\n        onStateChanged: function(state) {\n            if (!config.disableLogs) {\n                console.log('Recorder state changed:', state);\n            }\n        },\n\n        /**\n         * A recorder can have inactive, recording, paused or stopped states.\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\n         * @memberof RecordRTC\n         * @static\n         * @readonly\n         * @example\n         * // this looper function will keep you updated about the recorder's states.\n         * (function looper() {\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\n         *     if(recorder.state === 'stopped') return; // ignore+stop\n         *     setTimeout(looper, 1000); // update after every 3-seconds\n         * })();\n         * recorder.startRecording();\n         */\n        state: 'inactive',\n\n        /**\n         * Get recorder's readonly state.\n         * @method\n         * @memberof RecordRTC\n         * @example\n         * var state = recorder.getState();\n         * @returns {String} Returns recording state.\n         */\n        getState: function() {\n            return self.state;\n        },\n\n        /**\n         * Destroy RecordRTC instance. Clear all recorders and objects.\n         * @method\n         * @memberof RecordRTC\n         * @example\n         * recorder.destroy();\n         */\n        destroy: function() {\n            var disableLogsCache = config.disableLogs;\n\n            config = {\n                disableLogs: true\n            };\n            self.reset();\n            setState('destroyed');\n            returnObject = self = null;\n\n            if (Storage.AudioContextConstructor) {\n                Storage.AudioContextConstructor.close();\n                Storage.AudioContextConstructor = null;\n            }\n\n            config.disableLogs = disableLogsCache;\n\n            if (!config.disableLogs) {\n                console.log('RecordRTC is destroyed.');\n            }\n        },\n\n        /**\n         * RecordRTC version number\n         * @property {String} version - Release version number.\n         * @memberof RecordRTC\n         * @static\n         * @readonly\n         * @example\n         * alert(recorder.version);\n         */\n        version: '5.6.2'\n    };\n\n    if (!this) {\n        self = returnObject;\n        return returnObject;\n    }\n\n    // if someone wants to use RecordRTC with the \"new\" keyword.\n    for (var prop in returnObject) {\n        this[prop] = returnObject[prop];\n    }\n\n    self = this;\n\n    return returnObject;\n}\n\nRecordRTC.version = '5.6.2';\n\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\n    module.exports = RecordRTC;\n}\n\nif (typeof define === 'function' && define.amd) {\n    define('RecordRTC', [], function() {\n        return RecordRTC;\n    });\n}\n\nRecordRTC.getFromDisk = function(type, callback) {\n    if (!callback) {\n        throw 'callback is mandatory.';\n    }\n\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\n    DiskStorage.Fetch(function(dataURL, _type) {\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\n            callback(dataURL);\n        }\n\n        if (type === 'all' && callback) {\n            callback(dataURL, _type.replace('Blob', ''));\n        }\n    });\n};\n\n/**\n * This method can be used to store recorded blobs into IndexedDB storage.\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\n * @method\n * @memberof RecordRTC\n * @example\n * RecordRTC.writeToDisk({\n *     audio: audioBlob,\n *     video: videoBlob,\n *     gif  : gifBlob\n * });\n */\nRecordRTC.writeToDisk = function(options) {\n    console.log('Writing recorded blob(s) to disk!');\n    options = options || {};\n    if (options.audio && options.video && options.gif) {\n        options.audio.getDataURL(function(audioDataURL) {\n            options.video.getDataURL(function(videoDataURL) {\n                options.gif.getDataURL(function(gifDataURL) {\n                    DiskStorage.Store({\n                        audioBlob: audioDataURL,\n                        videoBlob: videoDataURL,\n                        gifBlob: gifDataURL\n                    });\n                });\n            });\n        });\n    } else if (options.audio && options.video) {\n        options.audio.getDataURL(function(audioDataURL) {\n            options.video.getDataURL(function(videoDataURL) {\n                DiskStorage.Store({\n                    audioBlob: audioDataURL,\n                    videoBlob: videoDataURL\n                });\n            });\n        });\n    } else if (options.audio && options.gif) {\n        options.audio.getDataURL(function(audioDataURL) {\n            options.gif.getDataURL(function(gifDataURL) {\n                DiskStorage.Store({\n                    audioBlob: audioDataURL,\n                    gifBlob: gifDataURL\n                });\n            });\n        });\n    } else if (options.video && options.gif) {\n        options.video.getDataURL(function(videoDataURL) {\n            options.gif.getDataURL(function(gifDataURL) {\n                DiskStorage.Store({\n                    videoBlob: videoDataURL,\n                    gifBlob: gifDataURL\n                });\n            });\n        });\n    } else if (options.audio) {\n        options.audio.getDataURL(function(audioDataURL) {\n            DiskStorage.Store({\n                audioBlob: audioDataURL\n            });\n        });\n    } else if (options.video) {\n        options.video.getDataURL(function(videoDataURL) {\n            DiskStorage.Store({\n                videoBlob: videoDataURL\n            });\n        });\n    } else if (options.gif) {\n        options.gif.getDataURL(function(gifDataURL) {\n            DiskStorage.Store({\n                gifBlob: gifDataURL\n            });\n        });\n    }\n};\n\n// __________________________\n// RecordRTC-Configuration.js\n\n/**\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef RecordRTCConfiguration\n * @class\n * @example\n * var options = RecordRTCConfiguration(mediaStream, options);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\n */\n\nfunction RecordRTCConfiguration(mediaStream, config) {\n    if (!config.recorderType && !config.type) {\n        if (!!config.audio && !!config.video) {\n            config.type = 'video';\n        } else if (!!config.audio && !config.video) {\n            config.type = 'audio';\n        }\n    }\n\n    if (config.recorderType && !config.type) {\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || (typeof WebAssemblyRecorder !== 'undefined' && config.recorderType === WebAssemblyRecorder)) {\n            config.type = 'video';\n        } else if (config.recorderType === GifRecorder) {\n            config.type = 'gif';\n        } else if (config.recorderType === StereoAudioRecorder) {\n            config.type = 'audio';\n        } else if (config.recorderType === MediaStreamRecorder) {\n            if (getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\n                config.type = 'video';\n            } else if (!getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\n                config.type = 'video';\n            } else if (getTracks(mediaStream, 'audio').length && !getTracks(mediaStream, 'video').length) {\n                config.type = 'audio';\n            } else {\n                // config.type = 'UnKnown';\n            }\n        }\n    }\n\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\n        if (!config.mimeType) {\n            config.mimeType = 'video/webm';\n        }\n\n        if (!config.type) {\n            config.type = config.mimeType.split('/')[0];\n        }\n\n        if (!config.bitsPerSecond) {\n            // config.bitsPerSecond = 128000;\n        }\n    }\n\n    // consider default type=audio\n    if (!config.type) {\n        if (config.mimeType) {\n            config.type = config.mimeType.split('/')[0];\n        }\n        if (!config.type) {\n            config.type = 'audio';\n        }\n    }\n\n    return config;\n}\n\n// __________________\n// GetRecorderType.js\n\n/**\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\n * @summary It returns best recorder-type available for your browser.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef GetRecorderType\n * @class\n * @example\n * var RecorderType = GetRecorderType(options);\n * var recorder = new RecorderType(options);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\n */\n\nfunction GetRecorderType(mediaStream, config) {\n    var recorder;\n\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\n    if (isChrome || isEdge || isOpera) {\n        // Media Stream Recording API has not been implemented in chrome yet;\n        // That's why using WebAudio API to record stereo audio in WAV format\n        recorder = StereoAudioRecorder;\n    }\n\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\n        recorder = MediaStreamRecorder;\n    }\n\n    // video recorder (in WebM format)\n    if (config.type === 'video' && (isChrome || isOpera)) {\n        recorder = WhammyRecorder;\n\n        if (typeof WebAssemblyRecorder !== 'undefined' && typeof ReadableStream !== 'undefined') {\n            recorder = WebAssemblyRecorder;\n        }\n    }\n\n    // video recorder (in Gif format)\n    if (config.type === 'gif') {\n        recorder = GifRecorder;\n    }\n\n    // html2canvas recording!\n    if (config.type === 'canvas') {\n        recorder = CanvasRecorder;\n    }\n\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\n        if (getTracks(mediaStream, 'video').length || getTracks(mediaStream, 'audio').length) {\n            // audio-only recording\n            if (config.type === 'audio') {\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\n                    recorder = MediaStreamRecorder;\n                }\n                // else recorder = StereoAudioRecorder;\n            } else {\n                // video or screen tracks\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\n                    recorder = MediaStreamRecorder;\n                }\n            }\n        }\n    }\n\n    if (mediaStream instanceof Array && mediaStream.length) {\n        recorder = MultiStreamRecorder;\n    }\n\n    if (config.recorderType) {\n        recorder = config.recorderType;\n    }\n\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\n    }\n\n    if (!recorder && isSafari) {\n        recorder = MediaStreamRecorder;\n    }\n\n    return recorder;\n}\n\n// _____________\n// MRecordRTC.js\n\n/**\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef MRecordRTC\n * @class\n * @example\n * var recorder = new MRecordRTC();\n * recorder.addStream(MediaStream);\n * recorder.mediaType = {\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\n *     gif: true    // or GifRecorder\n * };\n * // mimeType is optional and should be set only in advance cases.\n * recorder.mimeType = {\n *     audio: 'audio/wav',\n *     video: 'video/webm',\n *     gif:   'image/gif'\n * };\n * recorder.startRecording();\n * @see For further information:\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @requires {@link RecordRTC}\n */\n\nfunction MRecordRTC(mediaStream) {\n\n    /**\n     * This method attaches MediaStream object to {@link MRecordRTC}.\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.addStream(MediaStream);\n     */\n    this.addStream = function(_mediaStream) {\n        if (_mediaStream) {\n            mediaStream = _mediaStream;\n        }\n    };\n\n    /**\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\n     * @memberof MRecordRTC\n     * @example\n     * var recorder = new MRecordRTC();\n     * recorder.mediaType = {\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\n     *     gif  : true  // TRUE or GifRecorder\n     * };\n     */\n    this.mediaType = {\n        audio: true,\n        video: true\n    };\n\n    /**\n     * This method starts recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.startRecording();\n     */\n    this.startRecording = function() {\n        var mediaType = this.mediaType;\n        var recorderType;\n        var mimeType = this.mimeType || {\n            audio: null,\n            video: null,\n            gif: null\n        };\n\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'audio').length) {\n            mediaType.audio = false;\n        }\n\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\n            mediaType.video = false;\n        }\n\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\n            mediaType.gif = false;\n        }\n\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\n            throw 'MediaStream must have either audio or video tracks.';\n        }\n\n        if (!!mediaType.audio) {\n            recorderType = null;\n            if (typeof mediaType.audio === 'function') {\n                recorderType = mediaType.audio;\n            }\n\n            this.audioRecorder = new RecordRTC(mediaStream, {\n                type: 'audio',\n                bufferSize: this.bufferSize,\n                sampleRate: this.sampleRate,\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\n                disableLogs: this.disableLogs,\n                recorderType: recorderType,\n                mimeType: mimeType.audio,\n                timeSlice: this.timeSlice,\n                onTimeStamp: this.onTimeStamp\n            });\n\n            if (!mediaType.video) {\n                this.audioRecorder.startRecording();\n            }\n        }\n\n        if (!!mediaType.video) {\n            recorderType = null;\n            if (typeof mediaType.video === 'function') {\n                recorderType = mediaType.video;\n            }\n\n            var newStream = mediaStream;\n\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\n                var videoTrack = getTracks(mediaStream, 'video')[0];\n\n                if (isFirefox) {\n                    newStream = new MediaStream();\n                    newStream.addTrack(videoTrack);\n\n                    if (recorderType && recorderType === WhammyRecorder) {\n                        // Firefox does NOT supports webp-encoding yet\n                        // But Firefox do supports WebAssemblyRecorder\n                        recorderType = MediaStreamRecorder;\n                    }\n                } else {\n                    newStream = new MediaStream();\n                    newStream.addTrack(videoTrack);\n                }\n            }\n\n            this.videoRecorder = new RecordRTC(newStream, {\n                type: 'video',\n                video: this.video,\n                canvas: this.canvas,\n                frameInterval: this.frameInterval || 10,\n                disableLogs: this.disableLogs,\n                recorderType: recorderType,\n                mimeType: mimeType.video,\n                timeSlice: this.timeSlice,\n                onTimeStamp: this.onTimeStamp,\n                workerPath: this.workerPath,\n                webAssemblyPath: this.webAssemblyPath,\n                frameRate: this.frameRate, // used by WebAssemblyRecorder; values: usually 30; accepts any.\n                bitrate: this.bitrate // used by WebAssemblyRecorder; values: 0 to 1000+\n            });\n\n            if (!mediaType.audio) {\n                this.videoRecorder.startRecording();\n            }\n        }\n\n        if (!!mediaType.audio && !!mediaType.video) {\n            var self = this;\n\n            var isSingleRecorder = isMediaRecorderCompatible() === true;\n\n            if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\n                isSingleRecorder = false;\n            } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\n                isSingleRecorder = false;\n            }\n\n            if (isSingleRecorder === true) {\n                self.audioRecorder = null;\n                self.videoRecorder.startRecording();\n            } else {\n                self.videoRecorder.initRecorder(function() {\n                    self.audioRecorder.initRecorder(function() {\n                        // Both recorders are ready to record things accurately\n                        self.videoRecorder.startRecording();\n                        self.audioRecorder.startRecording();\n                    });\n                });\n            }\n        }\n\n        if (!!mediaType.gif) {\n            recorderType = null;\n            if (typeof mediaType.gif === 'function') {\n                recorderType = mediaType.gif;\n            }\n            this.gifRecorder = new RecordRTC(mediaStream, {\n                type: 'gif',\n                frameRate: this.frameRate || 200,\n                quality: this.quality || 10,\n                disableLogs: this.disableLogs,\n                recorderType: recorderType,\n                mimeType: mimeType.gif\n            });\n            this.gifRecorder.startRecording();\n        }\n    };\n\n    /**\n     * This method stops recording.\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.stopRecording(function(recording){\n     *     var audioBlob = recording.audio;\n     *     var videoBlob = recording.video;\n     *     var gifBlob   = recording.gif;\n     * });\n     */\n    this.stopRecording = function(callback) {\n        callback = callback || function() {};\n\n        if (this.audioRecorder) {\n            this.audioRecorder.stopRecording(function(blobURL) {\n                callback(blobURL, 'audio');\n            });\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.stopRecording(function(blobURL) {\n                callback(blobURL, 'video');\n            });\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.stopRecording(function(blobURL) {\n                callback(blobURL, 'gif');\n            });\n        }\n    };\n\n    /**\n     * This method pauses recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.pauseRecording();\n     */\n    this.pauseRecording = function() {\n        if (this.audioRecorder) {\n            this.audioRecorder.pauseRecording();\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.pauseRecording();\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.pauseRecording();\n        }\n    };\n\n    /**\n     * This method resumes recording.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.resumeRecording();\n     */\n    this.resumeRecording = function() {\n        if (this.audioRecorder) {\n            this.audioRecorder.resumeRecording();\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.resumeRecording();\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.resumeRecording();\n        }\n    };\n\n    /**\n     * This method can be used to manually get all recorded blobs.\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.getBlob(function(recording){\n     *     var audioBlob = recording.audio;\n     *     var videoBlob = recording.video;\n     *     var gifBlob   = recording.gif;\n     * });\n     * // or\n     * var audioBlob = recorder.getBlob().audio;\n     * var videoBlob = recorder.getBlob().video;\n     */\n    this.getBlob = function(callback) {\n        var output = {};\n\n        if (this.audioRecorder) {\n            output.audio = this.audioRecorder.getBlob();\n        }\n\n        if (this.videoRecorder) {\n            output.video = this.videoRecorder.getBlob();\n        }\n\n        if (this.gifRecorder) {\n            output.gif = this.gifRecorder.getBlob();\n        }\n\n        if (callback) {\n            callback(output);\n        }\n\n        return output;\n    };\n\n    /**\n     * Destroy all recorder instances.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.destroy();\n     */\n    this.destroy = function() {\n        if (this.audioRecorder) {\n            this.audioRecorder.destroy();\n            this.audioRecorder = null;\n        }\n\n        if (this.videoRecorder) {\n            this.videoRecorder.destroy();\n            this.videoRecorder = null;\n        }\n\n        if (this.gifRecorder) {\n            this.gifRecorder.destroy();\n            this.gifRecorder = null;\n        }\n    };\n\n    /**\n     * This method can be used to manually get all recorded blobs' DataURLs.\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.getDataURL(function(recording){\n     *     var audioDataURL = recording.audio;\n     *     var videoDataURL = recording.video;\n     *     var gifDataURL   = recording.gif;\n     * });\n     */\n    this.getDataURL = function(callback) {\n        this.getBlob(function(blob) {\n            if (blob.audio && blob.video) {\n                getDataURL(blob.audio, function(_audioDataURL) {\n                    getDataURL(blob.video, function(_videoDataURL) {\n                        callback({\n                            audio: _audioDataURL,\n                            video: _videoDataURL\n                        });\n                    });\n                });\n            } else if (blob.audio) {\n                getDataURL(blob.audio, function(_audioDataURL) {\n                    callback({\n                        audio: _audioDataURL\n                    });\n                });\n            } else if (blob.video) {\n                getDataURL(blob.video, function(_videoDataURL) {\n                    callback({\n                        video: _videoDataURL\n                    });\n                });\n            }\n        });\n\n        function getDataURL(blob, callback00) {\n            if (typeof Worker !== 'undefined') {\n                var webWorker = processInWebWorker(function readFile(_blob) {\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\n                });\n\n                webWorker.onmessage = function(event) {\n                    callback00(event.data);\n                };\n\n                webWorker.postMessage(blob);\n            } else {\n                var reader = new FileReader();\n                reader.readAsDataURL(blob);\n                reader.onload = function(event) {\n                    callback00(event.target.result);\n                };\n            }\n        }\n\n        function processInWebWorker(_function) {\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\n                'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\n            ], {\n                type: 'application/javascript'\n            }));\n\n            var worker = new Worker(blob);\n            var url;\n            if (typeof URL !== 'undefined') {\n                url = URL;\n            } else if (typeof webkitURL !== 'undefined') {\n                url = webkitURL;\n            } else {\n                throw 'Neither URL nor webkitURL detected.';\n            }\n            url.revokeObjectURL(blob);\n            return worker;\n        }\n    };\n\n    /**\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.writeToDisk();\n     */\n    this.writeToDisk = function() {\n        RecordRTC.writeToDisk({\n            audio: this.audioRecorder,\n            video: this.videoRecorder,\n            gif: this.gifRecorder\n        });\n    };\n\n    /**\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\n     * @method\n     * @memberof MRecordRTC\n     * @example\n     * recorder.save({\n     *     audio: 'audio-file-name',\n     *     video: 'video-file-name',\n     *     gif  : 'gif-file-name'\n     * });\n     */\n    this.save = function(args) {\n        args = args || {\n            audio: true,\n            video: true,\n            gif: true\n        };\n\n        if (!!args.audio && this.audioRecorder) {\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\n        }\n\n        if (!!args.video && this.videoRecorder) {\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\n        }\n        if (!!args.gif && this.gifRecorder) {\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\n        }\n    };\n}\n\n/**\n * This method can be used to get all recorded blobs from IndexedDB storage.\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\n * @param {function} callback - Callback function to get all stored blobs.\n * @method\n * @memberof MRecordRTC\n * @example\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\n *     if(type === 'audio') { }\n *     if(type === 'video') { }\n *     if(type === 'gif')   { }\n * });\n */\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\n\n/**\n * This method can be used to store recorded blobs into IndexedDB storage.\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\n * @method\n * @memberof MRecordRTC\n * @example\n * MRecordRTC.writeToDisk({\n *     audio: audioBlob,\n *     video: videoBlob,\n *     gif  : gifBlob\n * });\n */\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.MRecordRTC = MRecordRTC;\n}\n\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\n\n(function(that) {\n    if (!that) {\n        return;\n    }\n\n    if (typeof window !== 'undefined') {\n        return;\n    }\n\n    if (typeof global === 'undefined') {\n        return;\n    }\n\n    global.navigator = {\n        userAgent: browserFakeUserAgent,\n        getUserMedia: function() {}\n    };\n\n    if (!global.console) {\n        global.console = {};\n    }\n\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\n        global.console.error = global.console.log = global.console.log || function() {\n            console.log(arguments);\n        };\n    }\n\n    if (typeof document === 'undefined') {\n        /*global document:true */\n        that.document = {\n            documentElement: {\n                appendChild: function() {\n                    return '';\n                }\n            }\n        };\n\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\n            var obj = {\n                getContext: function() {\n                    return obj;\n                },\n                play: function() {},\n                pause: function() {},\n                drawImage: function() {},\n                toDataURL: function() {\n                    return '';\n                },\n                style: {}\n            };\n            return obj;\n        };\n\n        that.HTMLVideoElement = function() {};\n    }\n\n    if (typeof location === 'undefined') {\n        /*global location:true */\n        that.location = {\n            protocol: 'file:',\n            href: '',\n            hash: ''\n        };\n    }\n\n    if (typeof screen === 'undefined') {\n        /*global screen:true */\n        that.screen = {\n            width: 0,\n            height: 0\n        };\n    }\n\n    if (typeof URL === 'undefined') {\n        /*global screen:true */\n        that.URL = {\n            createObjectURL: function() {\n                return '';\n            },\n            revokeObjectURL: function() {\n                return '';\n            }\n        };\n    }\n\n    /*global window:true */\n    that.window = global;\n})(typeof global !== 'undefined' ? global : null);\n\n// _____________________________\n// Cross-Browser-Declarations.js\n\n// animation-frame used in WebM recording\n\n/*jshint -W079 */\nvar requestAnimationFrame = window.requestAnimationFrame;\nif (typeof requestAnimationFrame === 'undefined') {\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\n        /*global requestAnimationFrame:true */\n        requestAnimationFrame = webkitRequestAnimationFrame;\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\n        /*global requestAnimationFrame:true */\n        requestAnimationFrame = mozRequestAnimationFrame;\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\n        /*global requestAnimationFrame:true */\n        requestAnimationFrame = msRequestAnimationFrame;\n    } else if (typeof requestAnimationFrame === 'undefined') {\n        // via: https://gist.github.com/paulirish/1579671\n        var lastTime = 0;\n\n        /*global requestAnimationFrame:true */\n        requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = setTimeout(function() {\n                callback(currTime + timeToCall);\n            }, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n    }\n}\n\n/*jshint -W079 */\nvar cancelAnimationFrame = window.cancelAnimationFrame;\nif (typeof cancelAnimationFrame === 'undefined') {\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\n        /*global cancelAnimationFrame:true */\n        cancelAnimationFrame = webkitCancelAnimationFrame;\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\n        /*global cancelAnimationFrame:true */\n        cancelAnimationFrame = mozCancelAnimationFrame;\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\n        /*global cancelAnimationFrame:true */\n        cancelAnimationFrame = msCancelAnimationFrame;\n    } else if (typeof cancelAnimationFrame === 'undefined') {\n        /*global cancelAnimationFrame:true */\n        cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n    }\n}\n\n// WebAudio API representer\nvar AudioContext = window.AudioContext;\n\nif (typeof AudioContext === 'undefined') {\n    if (typeof webkitAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = webkitAudioContext;\n    }\n\n    if (typeof mozAudioContext !== 'undefined') {\n        /*global AudioContext:true */\n        AudioContext = mozAudioContext;\n    }\n}\n\n/*jshint -W079 */\nvar URL = window.URL;\n\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\n    /*global URL:true */\n    URL = webkitURL;\n}\n\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\n    }\n\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.mozGetUserMedia;\n    }\n}\n\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && ('netscape' in window) && / rv:/.test(navigator.userAgent);\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || navigator.userAgent.toLowerCase().indexOf('chrome/') !== -1;\n\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\nif (isSafari && !isChrome && navigator.userAgent.indexOf('CriOS') !== -1) {\n    isSafari = false;\n    isChrome = true;\n}\n\nvar MediaStream = window.MediaStream;\n\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\n    MediaStream = webkitMediaStream;\n}\n\n/*global MediaStream:true */\nif (typeof MediaStream !== 'undefined') {\n    // override \"stop\" method for all browsers\n    if (typeof MediaStream.prototype.stop === 'undefined') {\n        MediaStream.prototype.stop = function() {\n            this.getTracks().forEach(function(track) {\n                track.stop();\n            });\n        };\n    }\n\n    if (!('getVideoTracks' in MediaStream.prototype)) {\n        MediaStream.prototype.getVideoTracks = function() {\n            if (!this.getTracks) {\n                return [];\n            }\n\n            var tracks = [];\n            this.getTracks.forEach(function(track) {\n                if (track.kind.toString().indexOf('video') !== -1) {\n                    tracks.push(track);\n                }\n            });\n            return tracks;\n        };\n\n        MediaStream.prototype.getAudioTracks = function() {\n            if (!this.getTracks) {\n                return [];\n            }\n\n            var tracks = [];\n            this.getTracks.forEach(function(track) {\n                if (track.kind.toString().indexOf('audio') !== -1) {\n                    tracks.push(track);\n                }\n            });\n            return tracks;\n        };\n    }\n\n    if (!('stop' in MediaStream.prototype)) {\n        MediaStream.prototype.stop = function() {\n            this.getAudioTracks().forEach(function(track) {\n                if (!!track.stop) {\n                    track.stop();\n                }\n            });\n\n            this.getVideoTracks().forEach(function(track) {\n                if (!!track.stop) {\n                    track.stop();\n                }\n            });\n        };\n    }\n}\n\n// below function via: http://goo.gl/B3ae8c\n/**\n * Return human-readable file size.\n * @param {number} bytes - Pass bytes and get formatted string.\n * @returns {string} - formatted string\n * @example\n * bytesToSize(1024*1024*5) === '5 GB'\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\nfunction bytesToSize(bytes) {\n    var k = 1000;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) {\n        return '0 Bytes';\n    }\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n}\n\n/**\n * @param {Blob} file - File or Blob object. This parameter is required.\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\n * @example\n * invokeSaveAsDialog(blob or file, [optional] fileName);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\nfunction invokeSaveAsDialog(file, fileName) {\n    if (!file) {\n        throw 'Blob object is required.';\n    }\n\n    if (!file.type) {\n        try {\n            file.type = 'video/webm';\n        } catch (e) {}\n    }\n\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\n    if (fileExtension.indexOf(';') !== -1) {\n        // extended mimetype, e.g. 'video/webm;codecs=vp8,opus'\n        fileExtension = fileExtension.split(';')[0];\n    }\n    if (fileName && fileName.indexOf('.') !== -1) {\n        var splitted = fileName.split('.');\n        fileName = splitted[0];\n        fileExtension = splitted[1];\n    }\n\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\n\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\n        return navigator.msSaveBlob(file, fileFullName);\n    }\n\n    var hyperlink = document.createElement('a');\n    hyperlink.href = URL.createObjectURL(file);\n    hyperlink.download = fileFullName;\n\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\n    (document.body || document.documentElement).appendChild(hyperlink);\n\n    if (typeof hyperlink.click === 'function') {\n        hyperlink.click();\n    } else {\n        hyperlink.target = '_blank';\n        hyperlink.dispatchEvent(new MouseEvent('click', {\n            view: window,\n            bubbles: true,\n            cancelable: true\n        }));\n    }\n\n    URL.revokeObjectURL(hyperlink.href);\n}\n\n/**\n * from: https://github.com/cheton/is-electron/blob/master/index.js\n **/\nfunction isElectron() {\n    // Renderer process\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\n        return true;\n    }\n\n    // Main process\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\n        return true;\n    }\n\n    // Detect the user agent when the `nodeIntegration` option is set to true\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction getTracks(stream, kind) {\n    if (!stream || !stream.getTracks) {\n        return [];\n    }\n\n    return stream.getTracks().filter(function(t) {\n        return t.kind === (kind || 'audio');\n    });\n}\n\nfunction setSrcObject(stream, element) {\n    if ('srcObject' in element) {\n        element.srcObject = stream;\n    } else if ('mozSrcObject' in element) {\n        element.mozSrcObject = stream;\n    } else {\n        element.srcObject = stream;\n    }\n}\n\n/**\n * @param {Blob} file - File or Blob object.\n * @param {function} callback - Callback function.\n * @example\n * getSeekableBlob(blob or file, callback);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\nfunction getSeekableBlob(inputBlob, callback) {\n    // EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\n    if (typeof EBML === 'undefined') {\n        throw new Error('Please link: https://www.webrtc-experiment.com/EBML.js');\n    }\n\n    var reader = new EBML.Reader();\n    var decoder = new EBML.Decoder();\n    var tools = EBML.tools;\n\n    var fileReader = new FileReader();\n    fileReader.onload = function(e) {\n        var ebmlElms = decoder.decode(this.result);\n        ebmlElms.forEach(function(element) {\n            reader.read(element);\n        });\n        reader.stop();\n        var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\n        var body = this.result.slice(reader.metadataSize);\n        var newBlob = new Blob([refinedMetadataBuf, body], {\n            type: 'video/webm'\n        });\n\n        callback(newBlob);\n    };\n    fileReader.readAsArrayBuffer(inputBlob);\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.invokeSaveAsDialog = invokeSaveAsDialog;\n    RecordRTC.getTracks = getTracks;\n    RecordRTC.getSeekableBlob = getSeekableBlob;\n    RecordRTC.bytesToSize = bytesToSize;\n    RecordRTC.isElectron = isElectron;\n}\n\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\n// Storage.js\n\n/**\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @example\n * Storage.AudioContext === webkitAudioContext\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\n\nvar Storage = {};\n\nif (typeof AudioContext !== 'undefined') {\n    Storage.AudioContext = AudioContext;\n} else if (typeof webkitAudioContext !== 'undefined') {\n    Storage.AudioContext = webkitAudioContext;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.Storage = Storage;\n}\n\nfunction isMediaRecorderCompatible() {\n    if (isFirefox || isSafari || isEdge) {\n        return true;\n    }\n\n    var nVer = navigator.appVersion;\n    var nAgt = navigator.userAgent;\n    var fullVersion = '' + parseFloat(navigator.appVersion);\n    var majorVersion = parseInt(navigator.appVersion, 10);\n    var nameOffset, verOffset, ix;\n\n    if (isChrome || isOpera) {\n        verOffset = nAgt.indexOf('Chrome');\n        fullVersion = nAgt.substring(verOffset + 7);\n    }\n\n    // trim the fullVersion string at semicolon/space if present\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n    }\n\n    majorVersion = parseInt('' + fullVersion, 10);\n\n    if (isNaN(majorVersion)) {\n        fullVersion = '' + parseFloat(navigator.appVersion);\n        majorVersion = parseInt(navigator.appVersion, 10);\n    }\n\n    return majorVersion >= 49;\n}\n\n// ______________________\n// MediaStreamRecorder.js\n\n/**\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\n * @typedef MediaStreamRecorder\n * @class\n * @example\n * var config = {\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\n *     audioBitsPerSecond : 256 * 8 * 1024,\n *     videoBitsPerSecond : 256 * 8 * 1024,\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\n *     checkForInactiveTracks: true,\n *     timeSlice: 1000, // concatenate intervals based blobs\n *     ondataavailable: function() {} // get intervals based blobs\n * }\n * var recorder = new MediaStreamRecorder(mediaStream, config);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n *\n *     // or\n *     var blob = recorder.blob;\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\n */\n\nfunction MediaStreamRecorder(mediaStream, config) {\n    var self = this;\n\n    if (typeof mediaStream === 'undefined') {\n        throw 'First argument \"MediaStream\" is required.';\n    }\n\n    if (typeof MediaRecorder === 'undefined') {\n        throw 'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\n    }\n\n    config = config || {\n        // bitsPerSecond: 256 * 8 * 1024,\n        mimeType: 'video/webm'\n    };\n\n    if (config.type === 'audio') {\n        if (getTracks(mediaStream, 'video').length && getTracks(mediaStream, 'audio').length) {\n            var stream;\n            if (!!navigator.mozGetUserMedia) {\n                stream = new MediaStream();\n                stream.addTrack(getTracks(mediaStream, 'audio')[0]);\n            } else {\n                // webkitMediaStream\n                stream = new MediaStream(getTracks(mediaStream, 'audio'));\n            }\n            mediaStream = stream;\n        }\n\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\n        }\n\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\n            // forcing better codecs on Firefox (via #166)\n            config.mimeType = 'audio/ogg';\n        }\n    }\n\n    var arrayOfBlobs = [];\n\n    /**\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\n     * @returns {Array} Returns array of recorded blobs.\n     */\n    this.getArrayOfBlobs = function() {\n        return arrayOfBlobs;\n    };\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        // set defaults\n        self.blob = null;\n        self.clearRecordedData();\n        self.timestamps = [];\n        allStates = [];\n        arrayOfBlobs = [];\n\n        var recorderHints = config;\n\n        if (!config.disableLogs) {\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\n        }\n\n        if (mediaRecorder) {\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\n            mediaRecorder = null;\n        }\n\n        if (isChrome && !isMediaRecorderCompatible()) {\n            // to support video-only recording on stable\n            recorderHints = 'video/vp8';\n        }\n\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\n                if (!config.disableLogs) {\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\n                }\n\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\n            }\n        }\n\n        // using MediaRecorder API here\n        try {\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\n\n            // reset\n            config.mimeType = recorderHints.mimeType;\n        } catch (e) {\n            // chrome-based fallback\n            mediaRecorder = new MediaRecorder(mediaStream);\n        }\n\n        // old hack?\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\n            if (!config.disableLogs) {\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\n            }\n        }\n\n        // Dispatching OnDataAvailable Handler\n        mediaRecorder.ondataavailable = function(e) {\n            if (e.data) {\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\n            }\n\n            if (typeof config.timeSlice === 'number') {\n                if (e.data && e.data.size) {\n                    arrayOfBlobs.push(e.data);\n                    updateTimeStamp();\n\n                    if (typeof config.ondataavailable === 'function') {\n                        // intervals based blobs\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\n                            type: getMimeType(recorderHints)\n                        });\n                        config.ondataavailable(blob);\n                    }\n                }\n                return;\n            }\n\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\n                // make sure that stopRecording always getting fired\n                // even if there is invalid data\n                if (self.recordingCallback) {\n                    self.recordingCallback(new Blob([], {\n                        type: getMimeType(recorderHints)\n                    }));\n                    self.recordingCallback = null;\n                }\n                return;\n            }\n\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\n                type: getMimeType(recorderHints)\n            });\n\n            if (self.recordingCallback) {\n                self.recordingCallback(self.blob);\n                self.recordingCallback = null;\n            }\n        };\n\n        mediaRecorder.onstart = function() {\n            allStates.push('started');\n        };\n\n        mediaRecorder.onpause = function() {\n            allStates.push('paused');\n        };\n\n        mediaRecorder.onresume = function() {\n            allStates.push('resumed');\n        };\n\n        mediaRecorder.onstop = function() {\n            allStates.push('stopped');\n        };\n\n        mediaRecorder.onerror = function(error) {\n            if (!error) {\n                return;\n            }\n\n            if (!error.name) {\n                error.name = 'UnknownError';\n            }\n\n            allStates.push('error: ' + error);\n\n            if (!config.disableLogs) {\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\n                    console.error('MediaRecorder security error', error);\n                }\n\n                // older code below\n                else if (error.name === 'OutOfMemory') {\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\n                } else if (error.name === 'IllegalStreamModification') {\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\n                } else if (error.name === 'OtherRecordingError') {\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\n                } else if (error.name === 'GenericError') {\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\n                } else {\n                    console.error('MediaRecorder Error', error);\n                }\n            }\n\n            (function(looper) {\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\n                    delete config.timeslice;\n\n                    // 10 minutes, enough?\n                    mediaRecorder.start(10 * 60 * 1000);\n                    return;\n                }\n\n                setTimeout(looper, 1000);\n            })();\n\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\n                mediaRecorder.stop();\n            }\n        };\n\n        if (typeof config.timeSlice === 'number') {\n            updateTimeStamp();\n            mediaRecorder.start(config.timeSlice);\n        } else {\n            // default is 60 minutes; enough?\n            // use config => {timeSlice: 1000} otherwise\n\n            mediaRecorder.start(3.6e+6);\n        }\n\n        if (config.initCallback) {\n            config.initCallback(); // old code\n        }\n    };\n\n    /**\n     * @property {Array} timestamps - Array of time stamps\n     * @memberof MediaStreamRecorder\n     * @example\n     * console.log(recorder.timestamps);\n     */\n    this.timestamps = [];\n\n    function updateTimeStamp() {\n        self.timestamps.push(new Date().getTime());\n\n        if (typeof config.onTimeStamp === 'function') {\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\n        }\n    }\n\n    function getMimeType(secondObject) {\n        if (mediaRecorder && mediaRecorder.mimeType) {\n            return mediaRecorder.mimeType;\n        }\n\n        return secondObject.mimeType || 'video/webm';\n    }\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        callback = callback || function() {};\n\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\n\n        if (!mediaRecorder) {\n            return;\n        }\n\n        this.recordingCallback = callback;\n\n        if (mediaRecorder.state === 'recording') {\n            mediaRecorder.stop();\n        }\n\n        if (typeof config.timeSlice === 'number') {\n            setTimeout(function() {\n                self.blob = new Blob(arrayOfBlobs, {\n                    type: getMimeType(config)\n                });\n\n                self.recordingCallback(self.blob);\n            }, 100);\n        }\n    };\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'recording') {\n            mediaRecorder.pause();\n        }\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        if (mediaRecorder.state === 'paused') {\n            mediaRecorder.resume();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\n            self.stop(clearRecordedDataCB);\n        }\n\n        clearRecordedDataCB();\n    };\n\n    function clearRecordedDataCB() {\n        arrayOfBlobs = [];\n        mediaRecorder = null;\n        self.timestamps = [];\n    }\n\n    // Reference to \"MediaRecorder\" object\n    var mediaRecorder;\n\n    /**\n     * Access to native MediaRecorder API\n     * @method\n     * @memberof MediaStreamRecorder\n     * @instance\n     * @example\n     * var internal = recorder.getInternalRecorder();\n     * internal.ondataavailable = function() {}; // override\n     * internal.stream, internal.onpause, internal.onstop, etc.\n     * @returns {Object} Returns internal recording object.\n     */\n    this.getInternalRecorder = function() {\n        return mediaRecorder;\n    };\n\n    function isMediaStreamActive() {\n        if ('active' in mediaStream) {\n            if (!mediaStream.active) {\n                return false;\n            }\n        } else if ('ended' in mediaStream) { // old hack\n            if (mediaStream.ended) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\n     * @memberof MediaStreamRecorder\n     * @example\n     * recorder.stop(function() {\n     *     var blob = recorder.blob;\n     * });\n     */\n    this.blob = null;\n\n\n    /**\n     * Get MediaRecorder readonly state.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var state = recorder.getState();\n     * @returns {String} Returns recording state.\n     */\n    this.getState = function() {\n        if (!mediaRecorder) {\n            return 'inactive';\n        }\n\n        return mediaRecorder.state || 'inactive';\n    };\n\n    // list of all recording states\n    var allStates = [];\n\n    /**\n     * Get MediaRecorder all recording states.\n     * @method\n     * @memberof MediaStreamRecorder\n     * @example\n     * var state = recorder.getAllStates();\n     * @returns {Array} Returns all recording states\n     */\n    this.getAllStates = function() {\n        return allStates;\n    };\n\n    // if any Track within the MediaStream is muted or not enabled at any time,\n    // the browser will only record black frames\n    // or silence since that is the content produced by the Track\n    // so we need to stopRecording as soon as any single track ends.\n    if (typeof config.checkForInactiveTracks === 'undefined') {\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\n    }\n\n    var self = this;\n\n    // this method checks if media stream is stopped\n    // or if any track is ended.\n    (function looper() {\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\n            return;\n        }\n\n        if (isMediaStreamActive() === false) {\n            if (!config.disableLogs) {\n                console.log('MediaStream seems stopped.');\n            }\n            self.stop();\n            return;\n        }\n\n        setTimeout(looper, 1000); // check every second\n    })();\n\n    // for debugging\n    this.name = 'MediaStreamRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\n}\n\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\n// https://github.com/mattdiamond/Recorderjs#license-mit\n// ______________________\n// StereoAudioRecorder.js\n\n/**\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\n * @summary JavaScript standalone object for stereo audio recording.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef StereoAudioRecorder\n * @class\n * @example\n * var recorder = new StereoAudioRecorder(MediaStream, {\n *     sampleRate: 44100,\n *     bufferSize: 4096\n * });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\n */\n\nfunction StereoAudioRecorder(mediaStream, config) {\n    if (!getTracks(mediaStream, 'audio').length) {\n        throw 'Your stream has no audio tracks.';\n    }\n\n    config = config || {};\n\n    var self = this;\n\n    // variables\n    var leftchannel = [];\n    var rightchannel = [];\n    var recording = false;\n    var recordingLength = 0;\n    var jsAudioNode;\n\n    var numberOfAudioChannels = 2;\n\n    /**\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\n     * @memberof StereoAudioRecorder\n     * @instance\n     * @example\n     * var recorder = StereoAudioRecorder(mediaStream, {\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\n     * });\n     */\n    var desiredSampRate = config.desiredSampRate;\n\n    // backward compatibility\n    if (config.leftChannel === true) {\n        numberOfAudioChannels = 1;\n    }\n\n    if (config.numberOfAudioChannels === 1) {\n        numberOfAudioChannels = 1;\n    }\n\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\n        numberOfAudioChannels = 2;\n    }\n\n    if (!config.disableLogs) {\n        console.log('StereoAudioRecorder is set to record number of channels: ' + numberOfAudioChannels);\n    }\n\n    // if any Track within the MediaStream is muted or not enabled at any time,\n    // the browser will only record black frames\n    // or silence since that is the content produced by the Track\n    // so we need to stopRecording as soon as any single track ends.\n    if (typeof config.checkForInactiveTracks === 'undefined') {\n        config.checkForInactiveTracks = true;\n    }\n\n    function isMediaStreamActive() {\n        if (config.checkForInactiveTracks === false) {\n            // always return \"true\"\n            return true;\n        }\n\n        if ('active' in mediaStream) {\n            if (!mediaStream.active) {\n                return false;\n            }\n        } else if ('ended' in mediaStream) { // old hack\n            if (mediaStream.ended) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        if (isMediaStreamActive() === false) {\n            throw 'Please make sure MediaStream is active.';\n        }\n\n        resetVariables();\n\n        isAudioProcessStarted = isPaused = false;\n        recording = true;\n\n        if (typeof config.timeSlice !== 'undefined') {\n            looper();\n        }\n    };\n\n    function mergeLeftRightBuffers(config, callback) {\n        function mergeAudioBuffers(config, cb) {\n            var numberOfAudioChannels = config.numberOfAudioChannels;\n\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\n            var leftBuffers = config.leftBuffers.slice(0);\n            var rightBuffers = config.rightBuffers.slice(0);\n            var sampleRate = config.sampleRate;\n            var internalInterleavedLength = config.internalInterleavedLength;\n            var desiredSampRate = config.desiredSampRate;\n\n            if (numberOfAudioChannels === 2) {\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\n\n                if (desiredSampRate) {\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\n                }\n            }\n\n            if (numberOfAudioChannels === 1) {\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\n\n                if (desiredSampRate) {\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\n                }\n            }\n\n            // set sample rate as desired sample rate\n            if (desiredSampRate) {\n                sampleRate = desiredSampRate;\n            }\n\n            // for changing the sampling rate, reference:\n            // http://stackoverflow.com/a/28977136/552182\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\n                var newData = [];\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\n                newData[0] = data[0];\n                for (var i = 1; i < fitCount - 1; i++) {\n                    var tmp = i * springFactor;\n                    var before = Number(Math.floor(tmp)).toFixed();\n                    var after = Number(Math.ceil(tmp)).toFixed();\n                    var atPoint = tmp - before;\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\n                }\n                newData[fitCount - 1] = data[data.length - 1];\n                return newData;\n            }\n\n            function linearInterpolate(before, after, atPoint) {\n                return before + (after - before) * atPoint;\n            }\n\n            function mergeBuffers(channelBuffer, rLength) {\n                var result = new Float64Array(rLength);\n                var offset = 0;\n                var lng = channelBuffer.length;\n\n                for (var i = 0; i < lng; i++) {\n                    var buffer = channelBuffer[i];\n                    result.set(buffer, offset);\n                    offset += buffer.length;\n                }\n\n                return result;\n            }\n\n            function interleave(leftChannel, rightChannel) {\n                var length = leftChannel.length + rightChannel.length;\n\n                var result = new Float64Array(length);\n\n                var inputIndex = 0;\n\n                for (var index = 0; index < length;) {\n                    result[index++] = leftChannel[inputIndex];\n                    result[index++] = rightChannel[inputIndex];\n                    inputIndex++;\n                }\n                return result;\n            }\n\n            function writeUTFBytes(view, offset, string) {\n                var lng = string.length;\n                for (var i = 0; i < lng; i++) {\n                    view.setUint8(offset + i, string.charCodeAt(i));\n                }\n            }\n\n            // interleave both channels together\n            var interleaved;\n\n            if (numberOfAudioChannels === 2) {\n                interleaved = interleave(leftBuffers, rightBuffers);\n            }\n\n            if (numberOfAudioChannels === 1) {\n                interleaved = leftBuffers;\n            }\n\n            var interleavedLength = interleaved.length;\n\n            // create wav file\n            var resultingBufferLength = 44 + interleavedLength * 2;\n\n            var buffer = new ArrayBuffer(resultingBufferLength);\n\n            var view = new DataView(buffer);\n\n            // RIFF chunk descriptor/identifier\n            writeUTFBytes(view, 0, 'RIFF');\n\n            // RIFF chunk length\n            // changed \"44\" to \"36\" via #401\n            view.setUint32(4, 36 + interleavedLength * 2, true);\n\n            // RIFF type\n            writeUTFBytes(view, 8, 'WAVE');\n\n            // format chunk identifier\n            // FMT sub-chunk\n            writeUTFBytes(view, 12, 'fmt ');\n\n            // format chunk length\n            view.setUint32(16, 16, true);\n\n            // sample format (raw)\n            view.setUint16(20, 1, true);\n\n            // stereo (2 channels)\n            view.setUint16(22, numberOfAudioChannels, true);\n\n            // sample rate\n            view.setUint32(24, sampleRate, true);\n\n            // byte rate (sample rate * block align)\n            view.setUint32(28, sampleRate * numberOfAudioChannels * 2, true);\n\n            // block align (channel count * bytes per sample)\n            view.setUint16(32, numberOfAudioChannels * 2, true);\n\n            // bits per sample\n            view.setUint16(34, 16, true);\n\n            // data sub-chunk\n            // data chunk identifier\n            writeUTFBytes(view, 36, 'data');\n\n            // data chunk length\n            view.setUint32(40, interleavedLength * 2, true);\n\n            // write the PCM samples\n            var lng = interleavedLength;\n            var index = 44;\n            var volume = 1;\n            for (var i = 0; i < lng; i++) {\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\n                index += 2;\n            }\n\n            if (cb) {\n                return cb({\n                    buffer: buffer,\n                    view: view\n                });\n            }\n\n            postMessage({\n                buffer: buffer,\n                view: view\n            });\n        }\n\n        if (config.noWorker) {\n            mergeAudioBuffers(config, function(data) {\n                callback(data.buffer, data.view);\n            });\n            return;\n        }\n\n\n        var webWorker = processInWebWorker(mergeAudioBuffers);\n\n        webWorker.onmessage = function(event) {\n            callback(event.data.buffer, event.data.view);\n\n            // release memory\n            URL.revokeObjectURL(webWorker.workerURL);\n\n            // kill webworker (or Chrome will kill your page after ~25 calls)\n            webWorker.terminate();\n        };\n\n        webWorker.postMessage(config);\n    }\n\n    function processInWebWorker(_function) {\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\n            ';this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\n        ], {\n            type: 'application/javascript'\n        }));\n\n        var worker = new Worker(workerURL);\n        worker.workerURL = workerURL;\n        return worker;\n    }\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        callback = callback || function() {};\n\n        // stop recording\n        recording = false;\n\n        mergeLeftRightBuffers({\n            desiredSampRate: desiredSampRate,\n            sampleRate: sampleRate,\n            numberOfAudioChannels: numberOfAudioChannels,\n            internalInterleavedLength: recordingLength,\n            leftBuffers: leftchannel,\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\n            noWorker: config.noWorker\n        }, function(buffer, view) {\n            /**\n             * @property {Blob} blob - The recorded blob object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var blob = recorder.blob;\n             * });\n             */\n            self.blob = new Blob([view], {\n                type: 'audio/wav'\n            });\n\n            /**\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var buffer = recorder.buffer;\n             * });\n             */\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\n\n            /**\n             * @property {DataView} view - The recorded data-view object.\n             * @memberof StereoAudioRecorder\n             * @example\n             * recorder.stop(function(){\n             *     var view = recorder.view;\n             * });\n             */\n            self.view = view;\n\n            self.sampleRate = desiredSampRate || sampleRate;\n            self.bufferSize = bufferSize;\n\n            // recorded audio length\n            self.length = recordingLength;\n\n            isAudioProcessStarted = false;\n\n            if (callback) {\n                callback(self.blob);\n            }\n        });\n    };\n\n    if (typeof RecordRTC.Storage === 'undefined') {\n        RecordRTC.Storage = {\n            AudioContextConstructor: null,\n            AudioContext: window.AudioContext || window.webkitAudioContext\n        };\n    }\n\n    if (!RecordRTC.Storage.AudioContextConstructor || RecordRTC.Storage.AudioContextConstructor.state === 'closed') {\n        RecordRTC.Storage.AudioContextConstructor = new RecordRTC.Storage.AudioContext();\n    }\n\n    var context = RecordRTC.Storage.AudioContextConstructor;\n\n    // creates an audio node from the microphone incoming stream\n    var audioInput = context.createMediaStreamSource(mediaStream);\n\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\n\n    /**\n     * From the spec: This value controls how frequently the audioprocess event is\n     * dispatched and how many sample-frames need to be processed each call.\n     * Lower values for buffer size will result in a lower (better) latency.\n     * Higher values will be necessary to avoid audio breakup and glitches\n     * The size of the buffer (in sample-frames) which needs to\n     * be processed each time onprocessaudio is called.\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder = new StereoAudioRecorder(mediaStream, {\n     *     bufferSize: 4096\n     * });\n     */\n\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\n\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\n        if (!config.disableLogs) {\n            console.log('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\n        }\n    }\n\n    if (context.createJavaScriptNode) {\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\n    } else if (context.createScriptProcessor) {\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\n    } else {\n        throw 'WebAudio API has no support on this browser.';\n    }\n\n    // connect the stream to the script processor\n    audioInput.connect(jsAudioNode);\n\n    if (!config.bufferSize) {\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\n    }\n\n    /**\n     * The sample rate (in sample-frames per second) at which the\n     * AudioContext handles audio. It is assumed that all AudioNodes\n     * in the context run at this rate. In making this assumption,\n     * sample-rate converters or \"varispeed\" processors are not supported\n     * in real-time processing.\n     * The sampleRate parameter describes the sample-rate of the\n     * linear PCM audio data in the buffer in sample-frames per second.\n     * An implementation must support sample-rates in at least\n     * the range 22050 to 96000.\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder = new StereoAudioRecorder(mediaStream, {\n     *     sampleRate: 44100\n     * });\n     */\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\n\n    if (sampleRate < 22050 || sampleRate > 96000) {\n        // Ref: http://stackoverflow.com/a/26303918/552182\n        if (!config.disableLogs) {\n            console.log('sample-rate must be under range 22050 and 96000.');\n        }\n    }\n\n    if (!config.disableLogs) {\n        if (config.desiredSampRate) {\n            console.log('Desired sample-rate: ' + config.desiredSampRate);\n        }\n    }\n\n    var isPaused = false;\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (isMediaStreamActive() === false) {\n            throw 'Please make sure MediaStream is active.';\n        }\n\n        if (!recording) {\n            if (!config.disableLogs) {\n                console.log('Seems recording has been restarted.');\n            }\n            this.record();\n            return;\n        }\n\n        isPaused = false;\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof StereoAudioRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        config.checkForInactiveTracks = false;\n\n        if (recording) {\n            this.stop(clearRecordedDataCB);\n        }\n\n        clearRecordedDataCB();\n    };\n\n    function resetVariables() {\n        leftchannel = [];\n        rightchannel = [];\n        recordingLength = 0;\n        isAudioProcessStarted = false;\n        recording = false;\n        isPaused = false;\n        context = null;\n\n        self.leftchannel = leftchannel;\n        self.rightchannel = rightchannel;\n        self.numberOfAudioChannels = numberOfAudioChannels;\n        self.desiredSampRate = desiredSampRate;\n        self.sampleRate = sampleRate;\n        self.recordingLength = recordingLength;\n\n        intervalsBasedBuffers = {\n            left: [],\n            right: [],\n            recordingLength: 0\n        };\n    }\n\n    function clearRecordedDataCB() {\n        if (jsAudioNode) {\n            jsAudioNode.onaudioprocess = null;\n            jsAudioNode.disconnect();\n            jsAudioNode = null;\n        }\n\n        if (audioInput) {\n            audioInput.disconnect();\n            audioInput = null;\n        }\n\n        resetVariables();\n    }\n\n    // for debugging\n    this.name = 'StereoAudioRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n\n    var isAudioProcessStarted = false;\n\n    function onAudioProcessDataAvailable(e) {\n        if (isPaused) {\n            return;\n        }\n\n        if (isMediaStreamActive() === false) {\n            if (!config.disableLogs) {\n                console.log('MediaStream seems stopped.');\n            }\n            jsAudioNode.disconnect();\n            recording = false;\n        }\n\n        if (!recording) {\n            if (audioInput) {\n                audioInput.disconnect();\n                audioInput = null;\n            }\n            return;\n        }\n\n        /**\n         * This method is called on \"onaudioprocess\" event's first invocation.\n         * @method {function} onAudioProcessStarted\n         * @memberof StereoAudioRecorder\n         * @example\n         * recorder.onAudioProcessStarted: function() { };\n         */\n        if (!isAudioProcessStarted) {\n            isAudioProcessStarted = true;\n            if (config.onAudioProcessStarted) {\n                config.onAudioProcessStarted();\n            }\n\n            if (config.initCallback) {\n                config.initCallback();\n            }\n        }\n\n        var left = e.inputBuffer.getChannelData(0);\n\n        // we clone the samples\n        var chLeft = new Float32Array(left);\n        leftchannel.push(chLeft);\n\n        if (numberOfAudioChannels === 2) {\n            var right = e.inputBuffer.getChannelData(1);\n            var chRight = new Float32Array(right);\n            rightchannel.push(chRight);\n        }\n\n        recordingLength += bufferSize;\n\n        // export raw PCM\n        self.recordingLength = recordingLength;\n\n        if (typeof config.timeSlice !== 'undefined') {\n            intervalsBasedBuffers.recordingLength += bufferSize;\n            intervalsBasedBuffers.left.push(chLeft);\n\n            if (numberOfAudioChannels === 2) {\n                intervalsBasedBuffers.right.push(chRight);\n            }\n        }\n    }\n\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\n\n    // to prevent self audio to be connected with speakers\n    if (context.createMediaStreamDestination) {\n        jsAudioNode.connect(context.createMediaStreamDestination());\n    } else {\n        jsAudioNode.connect(context.destination);\n    }\n\n    // export raw PCM\n    this.leftchannel = leftchannel;\n    this.rightchannel = rightchannel;\n    this.numberOfAudioChannels = numberOfAudioChannels;\n    this.desiredSampRate = desiredSampRate;\n    this.sampleRate = sampleRate;\n    self.recordingLength = recordingLength;\n\n    // helper for intervals based blobs\n    var intervalsBasedBuffers = {\n        left: [],\n        right: [],\n        recordingLength: 0\n    };\n\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\n    function looper() {\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\n            return;\n        }\n\n        if (intervalsBasedBuffers.left.length) {\n            mergeLeftRightBuffers({\n                desiredSampRate: desiredSampRate,\n                sampleRate: sampleRate,\n                numberOfAudioChannels: numberOfAudioChannels,\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\n                leftBuffers: intervalsBasedBuffers.left,\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\n            }, function(buffer, view) {\n                var blob = new Blob([view], {\n                    type: 'audio/wav'\n                });\n                config.ondataavailable(blob);\n\n                setTimeout(looper, config.timeSlice);\n            });\n\n            intervalsBasedBuffers = {\n                left: [],\n                right: [],\n                recordingLength: 0\n            };\n        } else {\n            setTimeout(looper, config.timeSlice);\n        }\n    }\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\n}\n\n// _________________\n// CanvasRecorder.js\n\n/**\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\n * @summary HTML2Canvas recording into video WebM.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef CanvasRecorder\n * @class\n * @example\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\n * @param {object} config - {disableLogs:true, initCallback: function}\n */\n\nfunction CanvasRecorder(htmlElement, config) {\n    if (typeof html2canvas === 'undefined') {\n        throw 'Please link: https://www.webrtc-experiment.com/screenshot.js';\n    }\n\n    config = config || {};\n    if (!config.frameInterval) {\n        config.frameInterval = 10;\n    }\n\n    // via DetectRTC.js\n    var isCanvasSupportsStreamCapturing = false;\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\n        if (item in document.createElement('canvas')) {\n            isCanvasSupportsStreamCapturing = true;\n        }\n    });\n\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\n\n    var chromeVersion = 50;\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    if (_isChrome && matchArray && matchArray[2]) {\n        chromeVersion = parseInt(matchArray[2], 10);\n    }\n\n    if (_isChrome && chromeVersion < 52) {\n        isCanvasSupportsStreamCapturing = false;\n    }\n\n    if (config.useWhammyRecorder) {\n        isCanvasSupportsStreamCapturing = false;\n    }\n\n    var globalCanvas, mediaStreamRecorder;\n\n    if (isCanvasSupportsStreamCapturing) {\n        if (!config.disableLogs) {\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\n        }\n\n        if (htmlElement instanceof HTMLCanvasElement) {\n            globalCanvas = htmlElement;\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\n            globalCanvas = htmlElement.canvas;\n        } else {\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\n        }\n    } else if (!!navigator.mozGetUserMedia) {\n        if (!config.disableLogs) {\n            console.error('Canvas recording is NOT supported in Firefox.');\n        }\n    }\n\n    var isRecording;\n\n    /**\n     * This method records Canvas.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        isRecording = true;\n\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\n            // CanvasCaptureMediaStream\n            var canvasMediaStream;\n            if ('captureStream' in globalCanvas) {\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\n            } else if ('mozCaptureStream' in globalCanvas) {\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\n            } else if ('webkitCaptureStream' in globalCanvas) {\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\n            }\n\n            try {\n                var mdStream = new MediaStream();\n                mdStream.addTrack(getTracks(canvasMediaStream, 'video')[0]);\n                canvasMediaStream = mdStream;\n            } catch (e) {}\n\n            if (!canvasMediaStream) {\n                throw 'captureStream API are NOT available.';\n            }\n\n            // Note: Jan 18, 2016 status is that,\n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\n                mimeType: config.mimeType || 'video/webm'\n            });\n            mediaStreamRecorder.record();\n        } else {\n            whammy.frames = [];\n            lastTime = new Date().getTime();\n            drawCanvasFrame();\n        }\n\n        if (config.initCallback) {\n            config.initCallback();\n        }\n    };\n\n    this.getWebPImages = function(callback) {\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\n            callback();\n            return;\n        }\n\n        var framesLength = whammy.frames.length;\n        whammy.frames.forEach(function(frame, idx) {\n            var framesRemaining = framesLength - idx;\n            if (!config.disableLogs) {\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\n            }\n\n            if (config.onEncodingCallback) {\n                config.onEncodingCallback(framesRemaining, framesLength);\n            }\n\n            var webp = frame.image.toDataURL('image/webp', 1);\n            whammy.frames[idx].image = webp;\n        });\n\n        if (!config.disableLogs) {\n            console.log('Generating WebM');\n        }\n\n        callback();\n    };\n\n    /**\n     * This method stops recording Canvas.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        isRecording = false;\n\n        var that = this;\n\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\n            mediaStreamRecorder.stop(callback);\n            return;\n        }\n\n        this.getWebPImages(function() {\n            /**\n             * @property {Blob} blob - Recorded frames in video/webm blob.\n             * @memberof CanvasRecorder\n             * @example\n             * recorder.stop(function() {\n             *     var blob = recorder.blob;\n             * });\n             */\n            whammy.compile(function(blob) {\n                if (!config.disableLogs) {\n                    console.log('Recording finished!');\n                }\n\n                that.blob = blob;\n\n                if (that.blob.forEach) {\n                    that.blob = new Blob([], {\n                        type: 'video/webm'\n                    });\n                }\n\n                if (callback) {\n                    callback(that.blob);\n                }\n\n                whammy.frames = [];\n            });\n        });\n    };\n\n    var isPausedRecording = false;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPausedRecording = true;\n\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\n            mediaStreamRecorder.pause();\n            return;\n        }\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPausedRecording = false;\n\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\n            mediaStreamRecorder.resume();\n            return;\n        }\n\n        if (!isRecording) {\n            this.record();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof CanvasRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (isRecording) {\n            this.stop(clearRecordedDataCB);\n        }\n        clearRecordedDataCB();\n    };\n\n    function clearRecordedDataCB() {\n        whammy.frames = [];\n        isRecording = false;\n        isPausedRecording = false;\n    }\n\n    // for debugging\n    this.name = 'CanvasRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n\n    function cloneCanvas() {\n        //create a new canvas\n        var newCanvas = document.createElement('canvas');\n        var context = newCanvas.getContext('2d');\n\n        //set dimensions\n        newCanvas.width = htmlElement.width;\n        newCanvas.height = htmlElement.height;\n\n        //apply the old canvas to the new one\n        context.drawImage(htmlElement, 0, 0);\n\n        //return the new canvas\n        return newCanvas;\n    }\n\n    function drawCanvasFrame() {\n        if (isPausedRecording) {\n            lastTime = new Date().getTime();\n            return setTimeout(drawCanvasFrame, 500);\n        }\n\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\n            var duration = new Date().getTime() - lastTime;\n            // via #206, by Jack i.e. @Seymourr\n            lastTime = new Date().getTime();\n\n            whammy.frames.push({\n                image: cloneCanvas(),\n                duration: duration\n            });\n\n            if (isRecording) {\n                setTimeout(drawCanvasFrame, config.frameInterval);\n            }\n            return;\n        }\n\n        html2canvas(htmlElement, {\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\n            onrendered: function(canvas) {\n                var duration = new Date().getTime() - lastTime;\n                if (!duration) {\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\n                }\n\n                // via #206, by Jack i.e. @Seymourr\n                lastTime = new Date().getTime();\n\n                whammy.frames.push({\n                    image: canvas.toDataURL('image/webp', 1),\n                    duration: duration\n                });\n\n                if (isRecording) {\n                    setTimeout(drawCanvasFrame, config.frameInterval);\n                }\n            }\n        });\n    }\n\n    var lastTime = new Date().getTime();\n\n    var whammy = new Whammy.Video(100);\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.CanvasRecorder = CanvasRecorder;\n}\n\n// _________________\n// WhammyRecorder.js\n\n/**\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\n * @summary Video recording feature in Chrome.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef WhammyRecorder\n * @class\n * @example\n * var recorder = new WhammyRecorder(mediaStream);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\n */\n\nfunction WhammyRecorder(mediaStream, config) {\n\n    config = config || {};\n\n    if (!config.frameInterval) {\n        config.frameInterval = 10;\n    }\n\n    if (!config.disableLogs) {\n        console.log('Using frames-interval:', config.frameInterval);\n    }\n\n    /**\n     * This method records video.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        if (!config.width) {\n            config.width = 320;\n        }\n\n        if (!config.height) {\n            config.height = 240;\n        }\n\n        if (!config.video) {\n            config.video = {\n                width: config.width,\n                height: config.height\n            };\n        }\n\n        if (!config.canvas) {\n            config.canvas = {\n                width: config.width,\n                height: config.height\n            };\n        }\n\n        canvas.width = config.canvas.width || 320;\n        canvas.height = config.canvas.height || 240;\n\n        context = canvas.getContext('2d');\n\n        // setting defaults\n        if (config.video && config.video instanceof HTMLVideoElement) {\n            video = config.video.cloneNode();\n\n            if (config.initCallback) {\n                config.initCallback();\n            }\n        } else {\n            video = document.createElement('video');\n\n            setSrcObject(mediaStream, video);\n\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\n                if (config.initCallback) {\n                    config.initCallback();\n                }\n            };\n\n            video.width = config.video.width;\n            video.height = config.video.height;\n        }\n\n        video.muted = true;\n        video.play();\n\n        lastTime = new Date().getTime();\n        whammy = new Whammy.Video();\n\n        if (!config.disableLogs) {\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\n        }\n\n        drawFrames(config.frameInterval);\n    };\n\n    /**\n     * Draw and push frames to Whammy\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\n     */\n    function drawFrames(frameInterval) {\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\n\n        var duration = new Date().getTime() - lastTime;\n        if (!duration) {\n            return setTimeout(drawFrames, frameInterval, frameInterval);\n        }\n\n        if (isPausedRecording) {\n            lastTime = new Date().getTime();\n            return setTimeout(drawFrames, 100);\n        }\n\n        // via #206, by Jack i.e. @Seymourr\n        lastTime = new Date().getTime();\n\n        if (video.paused) {\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\n            // Tweak for Android Chrome\n            video.play();\n        }\n\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n        whammy.frames.push({\n            duration: duration,\n            image: canvas.toDataURL('image/webp')\n        });\n\n        if (!isStopDrawing) {\n            setTimeout(drawFrames, frameInterval, frameInterval);\n        }\n    }\n\n    function asyncLoop(o) {\n        var i = -1,\n            length = o.length;\n\n        (function loop() {\n            i++;\n            if (i === length) {\n                o.callback();\n                return;\n            }\n\n            // \"setTimeout\" added by Jim McLeod\n            setTimeout(function() {\n                o.functionToLoop(loop, i);\n            }, 1);\n        })();\n    }\n\n\n    /**\n     * remove black frames from the beginning to the specified frame\n     * @param {Array} _frames - array of frames to be checked\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\n     * @returns {Array} - array of frames\n     */\n    // pull#293 by @volodalexey\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\n        var localCanvas = document.createElement('canvas');\n        localCanvas.width = canvas.width;\n        localCanvas.height = canvas.height;\n        var context2d = localCanvas.getContext('2d');\n        var resultFrames = [];\n\n        var checkUntilNotBlack = _framesToCheck === -1;\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\n            _framesToCheck : _frames.length;\n        var sampleColor = {\n            r: 0,\n            g: 0,\n            b: 0\n        };\n        var maxColorDifference = Math.sqrt(\n            Math.pow(255, 2) +\n            Math.pow(255, 2) +\n            Math.pow(255, 2)\n        );\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\n        var doNotCheckNext = false;\n\n        asyncLoop({\n            length: endCheckFrame,\n            functionToLoop: function(loop, f) {\n                var matchPixCount, endPixCheck, maxPixCount;\n\n                var finishImage = function() {\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\n                    } else {\n                        // console.log('frame is passed : ' + f);\n                        if (checkUntilNotBlack) {\n                            doNotCheckNext = true;\n                        }\n                        resultFrames.push(_frames[f]);\n                    }\n                    loop();\n                };\n\n                if (!doNotCheckNext) {\n                    var image = new Image();\n                    image.onload = function() {\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\n                        matchPixCount = 0;\n                        endPixCheck = imageData.data.length;\n                        maxPixCount = imageData.data.length / 4;\n\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\n                            var currentColor = {\n                                r: imageData.data[pix],\n                                g: imageData.data[pix + 1],\n                                b: imageData.data[pix + 2]\n                            };\n                            var colorDifference = Math.sqrt(\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\n                                Math.pow(currentColor.b - sampleColor.b, 2)\n                            );\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\n                                matchPixCount++;\n                            }\n                        }\n                        finishImage();\n                    };\n                    image.src = _frames[f].image;\n                } else {\n                    finishImage();\n                }\n            },\n            callback: function() {\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\n\n                if (resultFrames.length <= 0) {\n                    // at least one last frame should be available for next manipulation\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\n                    resultFrames.push(_frames[_frames.length - 1]);\n                }\n                callback(resultFrames);\n            }\n        });\n    }\n\n    var isStopDrawing = false;\n\n    /**\n     * This method stops recording video.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        callback = callback || function() {};\n\n        isStopDrawing = true;\n\n        var _this = this;\n        // analyse of all frames takes some time!\n        setTimeout(function() {\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\n                whammy.frames = frames;\n\n                // to display advertisement images!\n                if (config.advertisement && config.advertisement.length) {\n                    whammy.frames = config.advertisement.concat(whammy.frames);\n                }\n\n                /**\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\n                 * @memberof WhammyRecorder\n                 * @example\n                 * recorder.stop(function() {\n                 *     var blob = recorder.blob;\n                 * });\n                 */\n                whammy.compile(function(blob) {\n                    _this.blob = blob;\n\n                    if (_this.blob.forEach) {\n                        _this.blob = new Blob([], {\n                            type: 'video/webm'\n                        });\n                    }\n\n                    if (callback) {\n                        callback(_this.blob);\n                    }\n                });\n            });\n        }, 10);\n    };\n\n    var isPausedRecording = false;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPausedRecording = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPausedRecording = false;\n\n        if (isStopDrawing) {\n            this.record();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof WhammyRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (!isStopDrawing) {\n            this.stop(clearRecordedDataCB);\n        }\n        clearRecordedDataCB();\n    };\n\n    function clearRecordedDataCB() {\n        whammy.frames = [];\n        isStopDrawing = true;\n        isPausedRecording = false;\n    }\n\n    // for debugging\n    this.name = 'WhammyRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    var video;\n    var lastTime;\n    var whammy;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.WhammyRecorder = WhammyRecorder;\n}\n\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\n// _________\n// Whammy.js\n\n// todo: Firefox now supports webp for webm containers!\n// their MediaRecorder implementation works well!\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\n\n/**\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\n * @summary A real time javascript webm encoder based on a canvas hack.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef Whammy\n * @class\n * @example\n * var recorder = new Whammy().Video(15);\n * recorder.add(context || canvas || dataURL);\n * var output = recorder.compile();\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\n\nvar Whammy = (function() {\n    // a more abstract-ish API\n\n    function WhammyVideo(duration) {\n        this.frames = [];\n        this.duration = duration || 1;\n        this.quality = 0.8;\n    }\n\n    /**\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.add(canvas || context || 'image/webp');\n     * @param {string} frame - Canvas || Context || image/webp\n     * @param {number} duration - Stick a duration (in milliseconds)\n     */\n    WhammyVideo.prototype.add = function(frame, duration) {\n        if ('canvas' in frame) { //CanvasRenderingContext2D\n            frame = frame.canvas;\n        }\n\n        if ('toDataURL' in frame) {\n            frame = frame.toDataURL('image/webp', this.quality);\n        }\n\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\n        }\n        this.frames.push({\n            image: frame,\n            duration: duration || this.duration\n        });\n    };\n\n    function processInWebWorker(_function) {\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\n            'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\n        ], {\n            type: 'application/javascript'\n        }));\n\n        var worker = new Worker(blob);\n        URL.revokeObjectURL(blob);\n        return worker;\n    }\n\n    function whammyInWebWorker(frames) {\n        function ArrayToWebM(frames) {\n            var info = checkFrames(frames);\n            if (!info) {\n                return [];\n            }\n\n            var clusterMaxDuration = 30000;\n\n            var EBML = [{\n                'id': 0x1a45dfa3, // EBML\n                'data': [{\n                    'data': 1,\n                    'id': 0x4286 // EBMLVersion\n                }, {\n                    'data': 1,\n                    'id': 0x42f7 // EBMLReadVersion\n                }, {\n                    'data': 4,\n                    'id': 0x42f2 // EBMLMaxIDLength\n                }, {\n                    'data': 8,\n                    'id': 0x42f3 // EBMLMaxSizeLength\n                }, {\n                    'data': 'webm',\n                    'id': 0x4282 // DocType\n                }, {\n                    'data': 2,\n                    'id': 0x4287 // DocTypeVersion\n                }, {\n                    'data': 2,\n                    'id': 0x4285 // DocTypeReadVersion\n                }]\n            }, {\n                'id': 0x18538067, // Segment\n                'data': [{\n                    'id': 0x1549a966, // Info\n                    'data': [{\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\n                        'id': 0x2ad7b1 // TimecodeScale\n                    }, {\n                        'data': 'whammy',\n                        'id': 0x4d80 // MuxingApp\n                    }, {\n                        'data': 'whammy',\n                        'id': 0x5741 // WritingApp\n                    }, {\n                        'data': doubleToString(info.duration),\n                        'id': 0x4489 // Duration\n                    }]\n                }, {\n                    'id': 0x1654ae6b, // Tracks\n                    'data': [{\n                        'id': 0xae, // TrackEntry\n                        'data': [{\n                            'data': 1,\n                            'id': 0xd7 // TrackNumber\n                        }, {\n                            'data': 1,\n                            'id': 0x73c5 // TrackUID\n                        }, {\n                            'data': 0,\n                            'id': 0x9c // FlagLacing\n                        }, {\n                            'data': 'und',\n                            'id': 0x22b59c // Language\n                        }, {\n                            'data': 'V_VP8',\n                            'id': 0x86 // CodecID\n                        }, {\n                            'data': 'VP8',\n                            'id': 0x258688 // CodecName\n                        }, {\n                            'data': 1,\n                            'id': 0x83 // TrackType\n                        }, {\n                            'id': 0xe0, // Video\n                            'data': [{\n                                'data': info.width,\n                                'id': 0xb0 // PixelWidth\n                            }, {\n                                'data': info.height,\n                                'id': 0xba // PixelHeight\n                            }]\n                        }]\n                    }]\n                }]\n            }];\n\n            //Generate clusters (max duration)\n            var frameNumber = 0;\n            var clusterTimecode = 0;\n            while (frameNumber < frames.length) {\n\n                var clusterFrames = [];\n                var clusterDuration = 0;\n                do {\n                    clusterFrames.push(frames[frameNumber]);\n                    clusterDuration += frames[frameNumber].duration;\n                    frameNumber++;\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\n\n                var clusterCounter = 0;\n                var cluster = {\n                    'id': 0x1f43b675, // Cluster\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\n                }; //Add cluster to segment\n                EBML[1].data.push(cluster);\n                clusterTimecode += clusterDuration;\n            }\n\n            return generateEBML(EBML);\n        }\n\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\n            return [{\n                'data': clusterTimecode,\n                'id': 0xe7 // Timecode\n            }].concat(clusterFrames.map(function(webp) {\n                var block = makeSimpleBlock({\n                    discardable: 0,\n                    frame: webp.data.slice(4),\n                    invisible: 0,\n                    keyframe: 1,\n                    lacing: 0,\n                    trackNum: 1,\n                    timecode: Math.round(clusterCounter)\n                });\n                clusterCounter += webp.duration;\n                return {\n                    data: block,\n                    id: 0xa3\n                };\n            }));\n        }\n\n        // sums the lengths of all the frames and gets the duration\n\n        function checkFrames(frames) {\n            if (!frames[0]) {\n                postMessage({\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\n                });\n                return;\n            }\n\n            var width = frames[0].width,\n                height = frames[0].height,\n                duration = frames[0].duration;\n\n            for (var i = 1; i < frames.length; i++) {\n                duration += frames[i].duration;\n            }\n            return {\n                duration: duration,\n                width: width,\n                height: height\n            };\n        }\n\n        function numToBuffer(num) {\n            var parts = [];\n            while (num > 0) {\n                parts.push(num & 0xff);\n                num = num >> 8;\n            }\n            return new Uint8Array(parts.reverse());\n        }\n\n        function strToBuffer(str) {\n            return new Uint8Array(str.split('').map(function(e) {\n                return e.charCodeAt(0);\n            }));\n        }\n\n        function bitsToBuffer(bits) {\n            var data = [];\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data.push(parseInt(bits.substr(i, 8), 2));\n            }\n            return new Uint8Array(data);\n        }\n\n        function generateEBML(json) {\n            var ebml = [];\n            for (var i = 0; i < json.length; i++) {\n                var data = json[i].data;\n\n                if (typeof data === 'object') {\n                    data = generateEBML(data);\n                }\n\n                if (typeof data === 'number') {\n                    data = bitsToBuffer(data.toString(2));\n                }\n\n                if (typeof data === 'string') {\n                    data = strToBuffer(data);\n                }\n\n                var len = data.size || data.byteLength || data.length;\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\n                var sizeToString = len.toString(2);\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\n\n                ebml.push(numToBuffer(json[i].id));\n                ebml.push(bitsToBuffer(size));\n                ebml.push(data);\n            }\n\n            return new Blob(ebml, {\n                type: 'video/webm'\n            });\n        }\n\n        function toBinStrOld(bits) {\n            var data = '';\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\n            bits = pad + bits;\n            for (var i = 0; i < bits.length; i += 8) {\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\n            }\n            return data;\n        }\n\n        function makeSimpleBlock(data) {\n            var flags = 0;\n\n            if (data.keyframe) {\n                flags |= 128;\n            }\n\n            if (data.invisible) {\n                flags |= 8;\n            }\n\n            if (data.lacing) {\n                flags |= (data.lacing << 1);\n            }\n\n            if (data.discardable) {\n                flags |= 1;\n            }\n\n            if (data.trackNum > 127) {\n                throw 'TrackNumber > 127 not supported';\n            }\n\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\n                return String.fromCharCode(e);\n            }).join('') + data.frame;\n\n            return out;\n        }\n\n        function parseWebP(riff) {\n            var VP8 = riff.RIFF[0].WEBP[0];\n\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\n            for (var i = 0, c = []; i < 4; i++) {\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\n            }\n\n            var width, height, tmp;\n\n            //the code below is literally copied verbatim from the bitstream spec\n            tmp = (c[1] << 8) | c[0];\n            width = tmp & 0x3FFF;\n            tmp = (c[3] << 8) | c[2];\n            height = tmp & 0x3FFF;\n            return {\n                width: width,\n                height: height,\n                data: VP8,\n                riff: riff\n            };\n        }\n\n        function getStrLength(string, offset) {\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\n                var unpadded = i.charCodeAt(0).toString(2);\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\n            }).join(''), 2);\n        }\n\n        function parseRIFF(string) {\n            var offset = 0;\n            var chunks = {};\n\n            while (offset < string.length) {\n                var id = string.substr(offset, 4);\n                var len = getStrLength(string, offset);\n                var data = string.substr(offset + 4 + 4, len);\n                offset += 4 + 4 + len;\n                chunks[id] = chunks[id] || [];\n\n                if (id === 'RIFF' || id === 'LIST') {\n                    chunks[id].push(parseRIFF(data));\n                } else {\n                    chunks[id].push(data);\n                }\n            }\n            return chunks;\n        }\n\n        function doubleToString(num) {\n            return [].slice.call(\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\n                return String.fromCharCode(e);\n            }).reverse().join('');\n        }\n\n        var webm = new ArrayToWebM(frames.map(function(frame) {\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\n            webp.duration = frame.duration;\n            return webp;\n        }));\n\n        postMessage(webm);\n    }\n\n    /**\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof Whammy\n     * @example\n     * recorder = new Whammy().Video(0.8, 100);\n     * recorder.compile(function(blob) {\n     *    // blob.size - blob.type\n     * });\n     */\n    WhammyVideo.prototype.compile = function(callback) {\n        var webWorker = processInWebWorker(whammyInWebWorker);\n\n        webWorker.onmessage = function(event) {\n            if (event.data.error) {\n                console.error(event.data.error);\n                return;\n            }\n            callback(event.data);\n        };\n\n        webWorker.postMessage(this.frames);\n    };\n\n    return {\n        /**\n         * A more abstract-ish API.\n         * @method\n         * @memberof Whammy\n         * @example\n         * recorder = new Whammy().Video(0.8, 100);\n         * @param {?number} speed - 0.8\n         * @param {?number} quality - 100\n         */\n        Video: WhammyVideo\n    };\n})();\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.Whammy = Whammy;\n}\n\n// ______________ (indexed-db)\n// DiskStorage.js\n\n/**\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\n * @summary Writing blobs into IndexedDB.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @example\n * DiskStorage.Store({\n *     audioBlob: yourAudioBlob,\n *     videoBlob: yourVideoBlob,\n *     gifBlob  : yourGifBlob\n * });\n * DiskStorage.Fetch(function(dataURL, type) {\n *     if(type === 'audioBlob') { }\n *     if(type === 'videoBlob') { }\n *     if(type === 'gifBlob')   { }\n * });\n * // DiskStorage.dataStoreName = 'recordRTC';\n * // DiskStorage.onError = function(error) { };\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\n * @property {function} Store - This method stores blobs in IndexedDB.\n * @property {function} onError - This function is invoked for any known/unknown error.\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n */\n\n\nvar DiskStorage = {\n    /**\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.init();\n     */\n    init: function() {\n        var self = this;\n\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\n            console.error('IndexedDB API are not available in this browser.');\n            return;\n        }\n\n        var dbVersion = 1;\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\n            db;\n        var request = indexedDB.open(dbName, dbVersion);\n\n        function createObjectStore(dataBase) {\n            dataBase.createObjectStore(self.dataStoreName);\n        }\n\n        function putInDB() {\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\n\n            if (self.videoBlob) {\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\n            }\n\n            if (self.gifBlob) {\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\n            }\n\n            if (self.audioBlob) {\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\n            }\n\n            function getFromStore(portionName) {\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\n                    if (self.callback) {\n                        self.callback(event.target.result, portionName);\n                    }\n                };\n            }\n\n            getFromStore('audioBlob');\n            getFromStore('videoBlob');\n            getFromStore('gifBlob');\n        }\n\n        request.onerror = self.onError;\n\n        request.onsuccess = function() {\n            db = request.result;\n            db.onerror = self.onError;\n\n            if (db.setVersion) {\n                if (db.version !== dbVersion) {\n                    var setVersion = db.setVersion(dbVersion);\n                    setVersion.onsuccess = function() {\n                        createObjectStore(db);\n                        putInDB();\n                    };\n                } else {\n                    putInDB();\n                }\n            } else {\n                putInDB();\n            }\n        };\n        request.onupgradeneeded = function(event) {\n            createObjectStore(event.target.result);\n        };\n    },\n    /**\n     * This method fetches stored blobs from IndexedDB.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.Fetch(function(dataURL, type) {\n     *     if(type === 'audioBlob') { }\n     *     if(type === 'videoBlob') { }\n     *     if(type === 'gifBlob')   { }\n     * });\n     */\n    Fetch: function(callback) {\n        this.callback = callback;\n        this.init();\n\n        return this;\n    },\n    /**\n     * This method stores blobs in IndexedDB.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.Store({\n     *     audioBlob: yourAudioBlob,\n     *     videoBlob: yourVideoBlob,\n     *     gifBlob  : yourGifBlob\n     * });\n     */\n    Store: function(config) {\n        this.audioBlob = config.audioBlob;\n        this.videoBlob = config.videoBlob;\n        this.gifBlob = config.gifBlob;\n\n        this.init();\n\n        return this;\n    },\n    /**\n     * This function is invoked for any known/unknown error.\n     * @method\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.onError = function(error){\n     *     alerot( JSON.stringify(error) );\n     * };\n     */\n    onError: function(error) {\n        console.error(JSON.stringify(error, null, '\\t'));\n    },\n\n    /**\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\n     * @memberof DiskStorage\n     * @internal\n     * @example\n     * DiskStorage.dataStoreName = 'recordRTC';\n     */\n    dataStoreName: 'recordRTC',\n    dbName: null\n};\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.DiskStorage = DiskStorage;\n}\n\n// ______________\n// GifRecorder.js\n\n/**\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef GifRecorder\n * @class\n * @example\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\n * recorder.record();\n * recorder.stop(function(blob) {\n *     img.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\n */\n\nfunction GifRecorder(mediaStream, config) {\n    if (typeof GIFEncoder === 'undefined') {\n        var script = document.createElement('script');\n        script.src = 'https://www.webrtc-experiment.com/gif-recorder.js';\n        (document.body || document.documentElement).appendChild(script);\n    }\n\n    config = config || {};\n\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        if (typeof GIFEncoder === 'undefined') {\n            setTimeout(self.record, 1000);\n            return;\n        }\n\n        if (!isLoadedMetaData) {\n            setTimeout(self.record, 1000);\n            return;\n        }\n\n        if (!isHTMLObject) {\n            if (!config.width) {\n                config.width = video.offsetWidth || 320;\n            }\n\n            if (!config.height) {\n                config.height = video.offsetHeight || 240;\n            }\n\n            if (!config.video) {\n                config.video = {\n                    width: config.width,\n                    height: config.height\n                };\n            }\n\n            if (!config.canvas) {\n                config.canvas = {\n                    width: config.width,\n                    height: config.height\n                };\n            }\n\n            canvas.width = config.canvas.width || 320;\n            canvas.height = config.canvas.height || 240;\n\n            video.width = config.video.width || 320;\n            video.height = config.video.height || 240;\n        }\n\n        // external library to record as GIF images\n        gifEncoder = new GIFEncoder();\n\n        // void setRepeat(int iter)\n        // Sets the number of times the set of GIF frames should be played.\n        // Default is 1; 0 means play indefinitely.\n        gifEncoder.setRepeat(0);\n\n        // void setFrameRate(Number fps)\n        // Sets frame rate in frames per second.\n        // Equivalent to setDelay(1000/fps).\n        // Using \"setDelay\" instead of \"setFrameRate\"\n        gifEncoder.setDelay(config.frameRate || 200);\n\n        // void setQuality(int quality)\n        // Sets quality of color quantization (conversion of images to the\n        // maximum 256 colors allowed by the GIF specification).\n        // Lower values (minimum = 1) produce better colors,\n        // but slow processing significantly. 10 is the default,\n        // and produces good color mapping at reasonable speeds.\n        // Values greater than 20 do not yield significant improvements in speed.\n        gifEncoder.setQuality(config.quality || 10);\n\n        // Boolean start()\n        // This writes the GIF Header and returns false if it fails.\n        gifEncoder.start();\n\n        if (typeof config.onGifRecordingStarted === 'function') {\n            config.onGifRecordingStarted();\n        }\n\n        startTime = Date.now();\n\n        function drawVideoFrame(time) {\n            if (self.clearedRecordedData === true) {\n                return;\n            }\n\n            if (isPausedRecording) {\n                return setTimeout(function() {\n                    drawVideoFrame(time);\n                }, 100);\n            }\n\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n            if (typeof lastFrameTime === undefined) {\n                lastFrameTime = time;\n            }\n\n            // ~10 fps\n            if (time - lastFrameTime < 90) {\n                return;\n            }\n\n            if (!isHTMLObject && video.paused) {\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\n                // Tweak for Android Chrome\n                video.play();\n            }\n\n            if (!isHTMLObject) {\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\n            }\n\n            if (config.onGifPreview) {\n                config.onGifPreview(canvas.toDataURL('image/png'));\n            }\n\n            gifEncoder.addFrame(context);\n            lastFrameTime = time;\n        }\n\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\n\n        if (config.initCallback) {\n            config.initCallback();\n        }\n    };\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     img.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        callback = callback || function() {};\n\n        if (lastAnimationFrame) {\n            cancelAnimationFrame(lastAnimationFrame);\n        }\n\n        endTime = Date.now();\n\n        /**\n         * @property {Blob} blob - The recorded blob object.\n         * @memberof GifRecorder\n         * @example\n         * recorder.stop(function(){\n         *     var blob = recorder.blob;\n         * });\n         */\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\n            type: 'image/gif'\n        });\n\n        callback(this.blob);\n\n        // bug: find a way to clear old recorded blobs\n        gifEncoder.stream().bin = [];\n    };\n\n    var isPausedRecording = false;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPausedRecording = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPausedRecording = false;\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof GifRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        self.clearedRecordedData = true;\n        clearRecordedDataCB();\n    };\n\n    function clearRecordedDataCB() {\n        if (gifEncoder) {\n            gifEncoder.stream().bin = [];\n        }\n    }\n\n    // for debugging\n    this.name = 'GifRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    if (isHTMLObject) {\n        if (mediaStream instanceof CanvasRenderingContext2D) {\n            context = mediaStream;\n            canvas = context.canvas;\n        } else if (mediaStream instanceof HTMLCanvasElement) {\n            context = mediaStream.getContext('2d');\n            canvas = mediaStream;\n        }\n    }\n\n    var isLoadedMetaData = true;\n\n    if (!isHTMLObject) {\n        var video = document.createElement('video');\n        video.muted = true;\n        video.autoplay = true;\n        video.playsInline = true;\n\n        isLoadedMetaData = false;\n        video.onloadedmetadata = function() {\n            isLoadedMetaData = true;\n        };\n\n        setSrcObject(mediaStream, video);\n\n        video.play();\n    }\n\n    var lastAnimationFrame = null;\n    var startTime, endTime, lastFrameTime;\n\n    var gifEncoder;\n\n    var self = this;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.GifRecorder = GifRecorder;\n}\n\n// Last time updated: 2019-06-21 4:09:42 AM UTC\n\n// ________________________\n// MultiStreamsMixer v1.2.2\n\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\n\n// --------------------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n// --------------------------------------------------\n\nfunction MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\n\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\n\n    (function(that) {\n        if (typeof RecordRTC !== 'undefined') {\n            return;\n        }\n\n        if (!that) {\n            return;\n        }\n\n        if (typeof window !== 'undefined') {\n            return;\n        }\n\n        if (typeof global === 'undefined') {\n            return;\n        }\n\n        global.navigator = {\n            userAgent: browserFakeUserAgent,\n            getUserMedia: function() {}\n        };\n\n        if (!global.console) {\n            global.console = {};\n        }\n\n        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\n            global.console.error = global.console.log = global.console.log || function() {\n                console.log(arguments);\n            };\n        }\n\n        if (typeof document === 'undefined') {\n            /*global document:true */\n            that.document = {\n                documentElement: {\n                    appendChild: function() {\n                        return '';\n                    }\n                }\n            };\n\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\n                var obj = {\n                    getContext: function() {\n                        return obj;\n                    },\n                    play: function() {},\n                    pause: function() {},\n                    drawImage: function() {},\n                    toDataURL: function() {\n                        return '';\n                    },\n                    style: {}\n                };\n                return obj;\n            };\n\n            that.HTMLVideoElement = function() {};\n        }\n\n        if (typeof location === 'undefined') {\n            /*global location:true */\n            that.location = {\n                protocol: 'file:',\n                href: '',\n                hash: ''\n            };\n        }\n\n        if (typeof screen === 'undefined') {\n            /*global screen:true */\n            that.screen = {\n                width: 0,\n                height: 0\n            };\n        }\n\n        if (typeof URL === 'undefined') {\n            /*global screen:true */\n            that.URL = {\n                createObjectURL: function() {\n                    return '';\n                },\n                revokeObjectURL: function() {\n                    return '';\n                }\n            };\n        }\n\n        /*global window:true */\n        that.window = global;\n    })(typeof global !== 'undefined' ? global : null);\n\n    // requires: chrome://flags/#enable-experimental-web-platform-features\n\n    elementClass = elementClass || 'multi-streams-mixer';\n\n    var videos = [];\n    var isStopDrawingFrames = false;\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.style.opacity = 0;\n    canvas.style.position = 'absolute';\n    canvas.style.zIndex = -1;\n    canvas.style.top = '-1000em';\n    canvas.style.left = '-1000em';\n    canvas.className = elementClass;\n    (document.body || document.documentElement).appendChild(canvas);\n\n    this.disableLogs = false;\n    this.frameInterval = 10;\n\n    this.width = 360;\n    this.height = 240;\n\n    // use gain node to prevent echo\n    this.useGainNode = true;\n\n    var self = this;\n\n    // _____________________________\n    // Cross-Browser-Declarations.js\n\n    // WebAudio API representer\n    var AudioContext = window.AudioContext;\n\n    if (typeof AudioContext === 'undefined') {\n        if (typeof webkitAudioContext !== 'undefined') {\n            /*global AudioContext:true */\n            AudioContext = webkitAudioContext;\n        }\n\n        if (typeof mozAudioContext !== 'undefined') {\n            /*global AudioContext:true */\n            AudioContext = mozAudioContext;\n        }\n    }\n\n    /*jshint -W079 */\n    var URL = window.URL;\n\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\n        /*global URL:true */\n        URL = webkitURL;\n    }\n\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\n        }\n\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\n            navigator.getUserMedia = navigator.mozGetUserMedia;\n        }\n    }\n\n    var MediaStream = window.MediaStream;\n\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\n        MediaStream = webkitMediaStream;\n    }\n\n    /*global MediaStream:true */\n    if (typeof MediaStream !== 'undefined') {\n        // override \"stop\" method for all browsers\n        if (typeof MediaStream.prototype.stop === 'undefined') {\n            MediaStream.prototype.stop = function() {\n                this.getTracks().forEach(function(track) {\n                    track.stop();\n                });\n            };\n        }\n    }\n\n    var Storage = {};\n\n    if (typeof AudioContext !== 'undefined') {\n        Storage.AudioContext = AudioContext;\n    } else if (typeof webkitAudioContext !== 'undefined') {\n        Storage.AudioContext = webkitAudioContext;\n    }\n\n    function setSrcObject(stream, element) {\n        if ('srcObject' in element) {\n            element.srcObject = stream;\n        } else if ('mozSrcObject' in element) {\n            element.mozSrcObject = stream;\n        } else {\n            element.srcObject = stream;\n        }\n    }\n\n    this.startDrawingFrames = function() {\n        drawVideosToCanvas();\n    };\n\n    function drawVideosToCanvas() {\n        if (isStopDrawingFrames) {\n            return;\n        }\n\n        var videosLength = videos.length;\n\n        var fullcanvas = false;\n        var remaining = [];\n        videos.forEach(function(video) {\n            if (!video.stream) {\n                video.stream = {};\n            }\n\n            if (video.stream.fullcanvas) {\n                fullcanvas = video;\n            } else {\n                // todo: video.stream.active or video.stream.live to fix blank frames issues?\n                remaining.push(video);\n            }\n        });\n\n        if (fullcanvas) {\n            canvas.width = fullcanvas.stream.width;\n            canvas.height = fullcanvas.stream.height;\n        } else if (remaining.length) {\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\n\n            var height = 1;\n            if (videosLength === 3 || videosLength === 4) {\n                height = 2;\n            }\n            if (videosLength === 5 || videosLength === 6) {\n                height = 3;\n            }\n            if (videosLength === 7 || videosLength === 8) {\n                height = 4;\n            }\n            if (videosLength === 9 || videosLength === 10) {\n                height = 5;\n            }\n            canvas.height = remaining[0].height * height;\n        } else {\n            canvas.width = self.width || 360;\n            canvas.height = self.height || 240;\n        }\n\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\n            drawImage(fullcanvas);\n        }\n\n        remaining.forEach(function(video, idx) {\n            drawImage(video, idx);\n        });\n\n        setTimeout(drawVideosToCanvas, self.frameInterval);\n    }\n\n    function drawImage(video, idx) {\n        if (isStopDrawingFrames) {\n            return;\n        }\n\n        var x = 0;\n        var y = 0;\n        var width = video.width;\n        var height = video.height;\n\n        if (idx === 1) {\n            x = video.width;\n        }\n\n        if (idx === 2) {\n            y = video.height;\n        }\n\n        if (idx === 3) {\n            x = video.width;\n            y = video.height;\n        }\n\n        if (idx === 4) {\n            y = video.height * 2;\n        }\n\n        if (idx === 5) {\n            x = video.width;\n            y = video.height * 2;\n        }\n\n        if (idx === 6) {\n            y = video.height * 3;\n        }\n\n        if (idx === 7) {\n            x = video.width;\n            y = video.height * 3;\n        }\n\n        if (typeof video.stream.left !== 'undefined') {\n            x = video.stream.left;\n        }\n\n        if (typeof video.stream.top !== 'undefined') {\n            y = video.stream.top;\n        }\n\n        if (typeof video.stream.width !== 'undefined') {\n            width = video.stream.width;\n        }\n\n        if (typeof video.stream.height !== 'undefined') {\n            height = video.stream.height;\n        }\n\n        context.drawImage(video, x, y, width, height);\n\n        if (typeof video.stream.onRender === 'function') {\n            video.stream.onRender(context, x, y, width, height, idx);\n        }\n    }\n\n    function getMixedStream() {\n        isStopDrawingFrames = false;\n        var mixedVideoStream = getMixedVideoStream();\n\n        var mixedAudioStream = getMixedAudioStream();\n        if (mixedAudioStream) {\n            mixedAudioStream.getTracks().filter(function(t) {\n                return t.kind === 'audio';\n            }).forEach(function(track) {\n                mixedVideoStream.addTrack(track);\n            });\n        }\n\n        var fullcanvas;\n        arrayOfMediaStreams.forEach(function(stream) {\n            if (stream.fullcanvas) {\n                fullcanvas = true;\n            }\n        });\n\n        // mixedVideoStream.prototype.appendStreams = appendStreams;\n        // mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\n        // mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\n\n        return mixedVideoStream;\n    }\n\n    function getMixedVideoStream() {\n        resetVideoStreams();\n\n        var capturedStream;\n\n        if ('captureStream' in canvas) {\n            capturedStream = canvas.captureStream();\n        } else if ('mozCaptureStream' in canvas) {\n            capturedStream = canvas.mozCaptureStream();\n        } else if (!self.disableLogs) {\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\n        }\n\n        var videoStream = new MediaStream();\n\n        capturedStream.getTracks().filter(function(t) {\n            return t.kind === 'video';\n        }).forEach(function(track) {\n            videoStream.addTrack(track);\n        });\n\n        canvas.stream = videoStream;\n\n        return videoStream;\n    }\n\n    function getMixedAudioStream() {\n        // via: @pehrsons\n        if (!Storage.AudioContextConstructor) {\n            Storage.AudioContextConstructor = new Storage.AudioContext();\n        }\n\n        self.audioContext = Storage.AudioContextConstructor;\n\n        self.audioSources = [];\n\n        if (self.useGainNode === true) {\n            self.gainNode = self.audioContext.createGain();\n            self.gainNode.connect(self.audioContext.destination);\n            self.gainNode.gain.value = 0; // don't hear self\n        }\n\n        var audioTracksLength = 0;\n        arrayOfMediaStreams.forEach(function(stream) {\n            if (!stream.getTracks().filter(function(t) {\n                    return t.kind === 'audio';\n                }).length) {\n                return;\n            }\n\n            audioTracksLength++;\n\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\n\n            if (self.useGainNode === true) {\n                audioSource.connect(self.gainNode);\n            }\n\n            self.audioSources.push(audioSource);\n        });\n\n        if (!audioTracksLength) {\n            // because \"self.audioContext\" is not initialized\n            // that's why we've to ignore rest of the code\n            return;\n        }\n\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\n        self.audioSources.forEach(function(audioSource) {\n            audioSource.connect(self.audioDestination);\n        });\n        return self.audioDestination.stream;\n    }\n\n    function getVideo(stream) {\n        var video = document.createElement('video');\n\n        setSrcObject(stream, video);\n\n        video.className = elementClass;\n\n        video.muted = true;\n        video.volume = 0;\n\n        video.width = stream.width || self.width || 360;\n        video.height = stream.height || self.height || 240;\n\n        video.play();\n\n        return video;\n    }\n\n    // this.appendStreams = function(streams) {\n    //     if (!streams) {\n    //         throw 'First parameter is required.';\n    //     }\n\n    //     if (!(streams instanceof Array)) {\n    //         streams = [streams];\n    //     }\n\n    //     streams.forEach(function(stream) {\n    //         var newStream = new MediaStream();\n\n    //         if (stream.getTracks().filter(function(t) {\n    //                 return t.kind === 'video';\n    //             }).length) {\n    //             var video = getVideo(stream);\n    //             video.stream = stream;\n    //             videos.push(video);\n\n    //             newStream.addTrack(stream.getTracks().filter(function(t) {\n    //                 return t.kind === 'video';\n    //             })[0]);\n    //         }\n\n    //         if (stream.getTracks().filter(function(t) {\n    //                 return t.kind === 'audio';\n    //             }).length) {\n    //             var audioSource = self.audioContext.createMediaStreamSource(stream);\n    //             self.audioDestination = self.audioContext.createMediaStreamDestination();\n    //             audioSource.connect(self.audioDestination);\n\n    //             newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\n    //                 return t.kind === 'audio';\n    //             })[0]);\n    //         }\n\n    //         arrayOfMediaStreams.push(newStream);\n    //     });\n    // };\n\n\n\n\n    // START - ADDED BY KODEMINT\n\n    function getVideoTracks() {\n        var tracks = [];\n        arrayOfMediaStreams.forEach(function(stream) {\n            stream.getVideoTracks().forEach(function(track) {\n                tracks.push(track);\n            });\n        });\n        return tracks;\n    }\n\n    this.appendStreams = function (streams) {\n        debugger\n        if (!streams) {\n            throw 'First parameter is required.';\n        }\n\n        if (!(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        arrayOfMediaStreams.concat(streams);\n\n        streams.forEach(stream => {\n            if (stream.getVideoTracks().length) {\n                var video = getVideo(stream);\n                video.stream = stream;\n                videos.push(video);\n            }\n\n            if (stream.getAudioTracks().length && self.audioContext) {\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\n                audioSource.connect(self.audioDestination);\n                self.audioSources.push(audioSource);\n            }\n        });\n    };\n\n    // END - ADDED BY KODEMINT\n\n\n\n    this.releaseStreams = function() {\n        videos = [];\n        isStopDrawingFrames = true;\n\n        if (self.gainNode) {\n            self.gainNode.disconnect();\n            self.gainNode = null;\n        }\n\n        if (self.audioSources.length) {\n            self.audioSources.forEach(function(source) {\n                source.disconnect();\n            });\n            self.audioSources = [];\n        }\n\n        if (self.audioDestination) {\n            self.audioDestination.disconnect();\n            self.audioDestination = null;\n        }\n\n        if (self.audioContext) {\n            self.audioContext.close();\n        }\n\n        self.audioContext = null;\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        if (canvas.stream) {\n            canvas.stream.stop();\n            canvas.stream = null;\n        }\n    };\n\n    this.resetVideoStreams = function(streams) {\n        if (streams && !(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        resetVideoStreams(streams);\n    };\n\n    function resetVideoStreams(streams) {\n        videos = [];\n        streams = streams || arrayOfMediaStreams;\n\n        // via: @adrian-ber\n        streams.forEach(function(stream) {\n            if (!stream.getTracks().filter(function(t) {\n                    return t.kind === 'video';\n                }).length) {\n                return;\n            }\n\n            var video = getVideo(stream);\n            video.stream = stream;\n            videos.push(video);\n        });\n    }\n\n    // for debugging\n    this.name = 'MultiStreamsMixer';\n    this.toString = function() {\n        return this.name;\n    };\n\n    this.getMixedStream = getMixedStream;\n\n}\n\nif (typeof RecordRTC === 'undefined') {\n    if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\n        module.exports = MultiStreamsMixer;\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('MultiStreamsMixer', [], function() {\n            return MultiStreamsMixer;\n        });\n    }\n}\n\n// ______________________\n// MultiStreamRecorder.js\n\n/*\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\n */\n\n/**\n * MultiStreamRecorder can record multiple videos in single container.\n * @summary Multi-videos recorder.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef MultiStreamRecorder\n * @class\n * @example\n * var options = {\n *     mimeType: 'video/webm'\n * }\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n *\n *     // or\n *     var blob = recorder.blob;\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\n */\n\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\n    var self = this;\n\n    var mixer;\n    var mediaRecorder;\n\n    options = options || {\n        elementClass: 'multi-streams-mixer',\n        mimeType: 'video/webm',\n        video: {\n            width: 360,\n            height: 240\n        }\n    };\n\n    if (!options.frameInterval) {\n        options.frameInterval = 10;\n    }\n\n    if (!options.video) {\n        options.video = {};\n    }\n\n    if (!options.video.width) {\n        options.video.width = 360;\n    }\n\n    if (!options.video.height) {\n        options.video.height = 240;\n    }\n\n    /**\n     * This method records all MediaStreams.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        // github/muaz-khan/MultiStreamsMixer\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || 'multi-streams-mixer');\n\n        if (getAllVideoTracks().length) {\n            mixer.frameInterval = options.frameInterval || 10;\n            mixer.width = options.video.width || 360;\n            mixer.height = options.video.height || 240;\n            mixer.startDrawingFrames();\n        }\n\n        if (options.previewStream && typeof options.previewStream === 'function') {\n            options.previewStream(mixer.getMixedStream());\n        }\n\n        // record using MediaRecorder API\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\n        mediaRecorder.record();\n    };\n\n    function getAllVideoTracks() {\n        var tracks = [];\n        arrayOfMediaStreams.forEach(function(stream) {\n            getTracks(stream, 'video').forEach(function(track) {\n                tracks.push(track);\n            });\n        });\n        return tracks;\n    }\n\n    /**\n     * This method stops recording MediaStream.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        if (!mediaRecorder) {\n            return;\n        }\n\n        mediaRecorder.stop(function(blob) {\n            self.blob = blob;\n\n            callback(blob);\n\n            self.clearRecordedData();\n        });\n    };\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        if (mediaRecorder) {\n            mediaRecorder.pause();\n        }\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        if (mediaRecorder) {\n            mediaRecorder.resume();\n        }\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        if (mediaRecorder) {\n            mediaRecorder.clearRecordedData();\n            mediaRecorder = null;\n        }\n\n        if (mixer) {\n            mixer.releaseStreams();\n            mixer = null;\n        }\n    };\n\n    /**\n     * Add extra media-streams to existing recordings.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\n     * @example\n     * recorder.addStreams([newAudioStream, newVideoStream]);\n     */\n    this.addStreams = function(streams) {\n        if (!streams) {\n            throw 'First parameter is required.';\n        }\n\n        if (!(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        arrayOfMediaStreams.concat(streams);\n\n        if (!mediaRecorder || !mixer) {\n            return;\n        }\n\n        mixer.appendStreams(streams);\n\n        if (options.previewStream && typeof options.previewStream === 'function') {\n            options.previewStream(mixer.getMixedStream());\n        }\n    };\n\n    /**\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\n     * @method\n     * @memberof MultiStreamRecorder\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\n     * @example\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\n     */\n    this.resetVideoStreams = function(streams) {\n        if (!mixer) {\n            return;\n        }\n\n        if (streams && !(streams instanceof Array)) {\n            streams = [streams];\n        }\n\n        mixer.resetVideoStreams(streams);\n    };\n\n    /**\n     * Returns MultiStreamsMixer\n     * @method\n     * @memberof MultiStreamRecorder\n     * @example\n     * let mixer = recorder.getMixer();\n     * mixer.appendStreams([newStream]);\n     */\n    this.getMixer = function() {\n        return mixer;\n    };\n\n    // for debugging\n    this.name = 'MultiStreamRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\n}\n\n// _____________________\n// RecordRTC.promises.js\n\n/**\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\n * @summary Promises for {@link RecordRTC}\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef RecordRTCPromisesHandler\n * @class\n * @example\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\n * recorder.startRecording()\n *         .then(successCB)\n *         .catch(errorCB);\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g.\n * recorder.recordRTC.onStateChanged = function(state) {};\n * recorder.recordRTC.setRecordingDuration(5000);\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\n * @requires {@link RecordRTC}\n */\n\nfunction RecordRTCPromisesHandler(mediaStream, options) {\n    if (!this) {\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\n    }\n\n    if (typeof mediaStream === 'undefined') {\n        throw 'First argument \"MediaStream\" is required.';\n    }\n\n    var self = this;\n\n    /**\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * let internal = recorder.recordRTC.getInternalRecorder();\n     * alert(internal instanceof MediaStreamRecorder);\n     * recorder.recordRTC.onStateChanged = function(state) {};\n     */\n    self.recordRTC = new RecordRTC(mediaStream, options);\n\n    /**\n     * This method records MediaStream.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.startRecording()\n     *         .then(successCB)\n     *         .catch(errorCB);\n     */\n    this.startRecording = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                self.recordRTC.startRecording();\n                resolve();\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method stops the recording.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.stopRecording().then(function() {\n     *     var blob = recorder.getBlob();\n     * }).catch(errorCB);\n     */\n    this.stopRecording = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                self.recordRTC.stopRecording(function(url) {\n                    self.blob = self.recordRTC.getBlob();\n\n                    if (!self.blob || !self.blob.size) {\n                        reject('Empty blob.', self.blob);\n                        return;\n                    }\n\n                    resolve(url);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.pauseRecording()\n     *         .then(successCB)\n     *         .catch(errorCB);\n     */\n    this.pauseRecording = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                self.recordRTC.pauseRecording();\n                resolve();\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method resumes the recording.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.resumeRecording()\n     *         .then(successCB)\n     *         .catch(errorCB);\n     */\n    this.resumeRecording = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                self.recordRTC.resumeRecording();\n                resolve();\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method returns data-url for the recorded blob.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.stopRecording().then(function() {\n     *     recorder.getDataURL().then(function(dataURL) {\n     *         window.open(dataURL);\n     *     }).catch(errorCB);;\n     * }).catch(errorCB);\n     */\n    this.getDataURL = function(callback) {\n        return new Promise(function(resolve, reject) {\n            try {\n                self.recordRTC.getDataURL(function(dataURL) {\n                    resolve(dataURL);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method returns the recorded blob.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.stopRecording().then(function() {\n     *     recorder.getBlob().then(function(blob) {})\n     * }).catch(errorCB);\n     */\n    this.getBlob = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                resolve(self.recordRTC.getBlob());\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method returns the internal recording object.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * let internalRecorder = await recorder.getInternalRecorder();\n     * if(internalRecorder instanceof MultiStreamRecorder) {\n     *     internalRecorder.addStreams([newAudioStream]);\n     *     internalRecorder.resetVideoStreams([screenStream]);\n     * }\n     * @returns {Object}\n     */\n    this.getInternalRecorder = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                resolve(self.recordRTC.getInternalRecorder());\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * await recorder.reset();\n     * recorder.startRecording(); // record again\n     */\n    this.reset = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                resolve(self.recordRTC.reset());\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * Destroy RecordRTC instance. Clear all recorders and objects.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * recorder.destroy().then(successCB).catch(errorCB);\n     */\n    this.destroy = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                resolve(self.recordRTC.destroy());\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * Get recorder's readonly state.\n     * @method\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * let state = await recorder.getState();\n     * // or\n     * recorder.getState().then(state => { console.log(state); })\n     * @returns {String} Returns recording state.\n     */\n    this.getState = function() {\n        return new Promise(function(resolve, reject) {\n            try {\n                resolve(self.recordRTC.getState());\n            } catch (e) {\n                reject(e);\n            }\n        });\n    };\n\n    /**\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\n     * @memberof RecordRTCPromisesHandler\n     * @example\n     * await recorder.stopRecording();\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\n     * invokeSaveAsDialog(blob);\n     */\n    this.blob = null;\n\n    /**\n     * RecordRTC version number\n     * @property {String} version - Release version number.\n     * @memberof RecordRTCPromisesHandler\n     * @static\n     * @readonly\n     * @example\n     * alert(recorder.version);\n     */\n    this.version = '5.6.2';\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\n}\n\n// ______________________\n// WebAssemblyRecorder.js\n\n/**\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\n * @author {@link https://MuazKhan.com|Muaz Khan}\n * @typedef WebAssemblyRecorder\n * @class\n * @example\n * var recorder = new WebAssemblyRecorder(mediaStream);\n * recorder.record();\n * recorder.stop(function(blob) {\n *     video.src = URL.createObjectURL(blob);\n * });\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\n */\nfunction WebAssemblyRecorder(stream, config) {\n    // based on: github.com/GoogleChromeLabs/webm-wasm\n\n    if (typeof ReadableStream === 'undefined' || typeof WritableStream === 'undefined') {\n        // because it fixes readable/writable streams issues\n        console.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');\n    }\n\n    config = config || {};\n\n    config.width = config.width || 640;\n    config.height = config.height || 480;\n    config.frameRate = config.frameRate || 30;\n    config.bitrate = config.bitrate || 1200;\n    config.realtime = config.realtime || true;\n\n    function createBufferURL(buffer, type) {\n        return URL.createObjectURL(new Blob([buffer], {\n            type: type || ''\n        }));\n    }\n\n    var finished;\n\n    function cameraStream() {\n        return new ReadableStream({\n            start: function(controller) {\n                var cvs = document.createElement('canvas');\n                var video = document.createElement('video');\n                var first = true;\n                video.srcObject = stream;\n                video.muted = true;\n                video.height = config.height;\n                video.width = config.width;\n                video.volume = 0;\n                video.onplaying = function() {\n                    cvs.width = config.width;\n                    cvs.height = config.height;\n                    var ctx = cvs.getContext('2d');\n                    var frameTimeout = 1000 / config.frameRate;\n                    var cameraTimer = setInterval(function f() {\n                        if (finished) {\n                            clearInterval(cameraTimer);\n                            controller.close();\n                        }\n\n                        if (first) {\n                            first = false;\n                            if (config.onVideoProcessStarted) {\n                                config.onVideoProcessStarted();\n                            }\n                        }\n\n                        ctx.drawImage(video, 0, 0);\n                        if (controller._controlledReadableStream.state !== 'closed') {\n                            try {\n                                controller.enqueue(\n                                    ctx.getImageData(0, 0, config.width, config.height)\n                                );\n                            } catch (e) {}\n                        }\n                    }, frameTimeout);\n                };\n                video.play();\n            }\n        });\n    }\n\n    var worker;\n\n    function startRecording(stream, buffer) {\n        if (!config.workerPath && !buffer) {\n            finished = false;\n\n            // is it safe to use @latest ?\n\n            fetch(\n                'https://unpkg.com/webm-wasm@latest/dist/webm-worker.js'\n            ).then(function(r) {\n                r.arrayBuffer().then(function(buffer) {\n                    startRecording(stream, buffer);\n                });\n            });\n            return;\n        }\n\n        if (!config.workerPath && buffer instanceof ArrayBuffer) {\n            var blob = new Blob([buffer], {\n                type: 'text/javascript'\n            });\n            config.workerPath = URL.createObjectURL(blob);\n        }\n\n        if (!config.workerPath) {\n            console.error('workerPath parameter is missing.');\n        }\n\n        worker = new Worker(config.workerPath);\n\n        worker.postMessage(config.webAssemblyPath || 'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');\n        worker.addEventListener('message', function(event) {\n            if (event.data === 'READY') {\n                worker.postMessage({\n                    width: config.width,\n                    height: config.height,\n                    bitrate: config.bitrate || 1200,\n                    timebaseDen: config.frameRate || 30,\n                    realtime: config.realtime\n                });\n\n                cameraStream().pipeTo(new WritableStream({\n                    write: function(image) {\n                        if (finished) {\n                            console.error('Got image, but recorder is finished!');\n                            return;\n                        }\n\n                        worker.postMessage(image.data.buffer, [image.data.buffer]);\n                    }\n                }));\n            } else if (!!event.data) {\n                if (!isPaused) {\n                    arrayOfBuffers.push(event.data);\n                }\n            }\n        });\n    }\n\n    /**\n     * This method records video.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.record();\n     */\n    this.record = function() {\n        arrayOfBuffers = [];\n        isPaused = false;\n        this.blob = null;\n        startRecording(stream);\n\n        if (typeof config.initCallback === 'function') {\n            config.initCallback();\n        }\n    };\n\n    var isPaused;\n\n    /**\n     * This method pauses the recording process.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.pause();\n     */\n    this.pause = function() {\n        isPaused = true;\n    };\n\n    /**\n     * This method resumes the recording process.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.resume();\n     */\n    this.resume = function() {\n        isPaused = false;\n    };\n\n    function terminate(callback) {\n        if (!worker) {\n            if (callback) {\n                callback();\n            }\n\n            return;\n        }\n\n        // Wait for null event data to indicate that the encoding is complete\n        worker.addEventListener('message', function(event) {\n            if (event.data === null) {\n                worker.terminate();\n                worker = null;\n\n                if (callback) {\n                    callback();\n                }\n            }\n        });\n\n        worker.postMessage(null);\n    }\n\n    var arrayOfBuffers = [];\n\n    /**\n     * This method stops recording video.\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.stop(function(blob) {\n     *     video.src = URL.createObjectURL(blob);\n     * });\n     */\n    this.stop = function(callback) {\n        finished = true;\n\n        var recorder = this;\n\n        terminate(function() {\n            recorder.blob = new Blob(arrayOfBuffers, {\n                type: 'video/webm'\n            });\n\n            callback(recorder.blob);\n        });\n    };\n\n    // for debugging\n    this.name = 'WebAssemblyRecorder';\n    this.toString = function() {\n        return this.name;\n    };\n\n    /**\n     * This method resets currently recorded data.\n     * @method\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.clearRecordedData();\n     */\n    this.clearRecordedData = function() {\n        arrayOfBuffers = [];\n        isPaused = false;\n        this.blob = null;\n\n        // todo: if recording-ON then STOP it first\n    };\n\n    /**\n     * @property {Blob} blob - The recorded blob object.\n     * @memberof WebAssemblyRecorder\n     * @example\n     * recorder.stop(function(){\n     *     var blob = recorder.blob;\n     * });\n     */\n    this.blob = null;\n}\n\nif (typeof RecordRTC !== 'undefined') {\n    RecordRTC.WebAssemblyRecorder = WebAssemblyRecorder;\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAjEA;AAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AALA;AAWA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AACA;AAgBA;AACA;AAAA;AACA;AAhDA;AACA;AAeA;AAAA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAWA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjSA;AAmSA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAjZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC0lBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAfA;AAzBA;;;;;;;;;;;AChsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnlrzJA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAGA;AACA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAIA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAVA;AAaA;AA9EA;AAgFA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAZA;AAXA;AA0BA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAtCA;AAwCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAVA;AAYA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AACA;AAhBA;AAmBA;AACA;AApBA;AAqBA;AAAA;AAAA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwFA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxPA;AA0PA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AA9aA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AADA;AAIA;AACA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAgBA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AACA;AASA;AAVA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AACA;AACA;AA7FA;AA+FA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AAAA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAIA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAUA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAlBA;AAygCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AAjBA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AAjBA;AAmBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhOA;AAkOA;AACA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AArDA;AAuDA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AADA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AANA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AASA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AASA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAUA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AArEA;AACA;AAKA;AAAA;AAgEA;AACA;AACA;AACA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAjkdA;AACA;AAgfA;AACA;AAipBA;AACA;AAqBA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAHA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AALA;AAOA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAdA;AAgBA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAnBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAnBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAnBA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAnBA;AAqBA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAvvGA;AAyvGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAl3HA;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACvCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnbA;AACA;AAqbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAdA;AACA;AAenBA;AAqBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AA3DA;AA6DA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAGA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AApBA;AAyBA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAXA;AAgBA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AAHA;AALA;AAvBA;AAFA;AAjBA;AACA;AAwDA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3IA;AACA;AA6IA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAvCA;AAypMA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}