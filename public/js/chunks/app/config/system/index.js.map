{"version":3,"file":"js/chunks/app/config/system/index.js?id=14a7a8ed624681efe0fa","sources":["webpack:///index.vue","webpack:///./resources/js/views/app/config/system/index.vue?3c66","webpack:///./resources/js/mixins/config-form.js","webpack:///./resources/js/views/app/config/system/index.vue","webpack:///./resources/js/views/app/config/system/index.vue?b93b","webpack:///./resources/js/views/app/config/system/index.vue?68e6"],"sourcesContent":["<template>\n  <base-container\n    boxed\n    with-loader\n    :is-loading=\"isLoading\"\n    :loader-color=\"vars.loaderColor\"\n  >\n    <form @submit.prevent=\"submit\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-4 mb-3\">\n          <switch-wrapper :label=\"$t('config.system.enable_todo')\">\n            <base-switch v-model=\"formData.todo\"></base-switch>\n          </switch-wrapper>\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-3\">\n          <switch-wrapper :label=\"$t('config.system.enable_maintenance_mode')\">\n            <base-switch v-model=\"formData.maintenanceMode\"></base-switch>\n          </switch-wrapper>\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-3\">\n          <switch-wrapper :label=\"$t('config.system.enable_aths_alert')\">\n            <base-switch v-model=\"formData.enableAthsAlert\"></base-switch>\n          </switch-wrapper>\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-3\">\n          <switch-wrapper :label=\"$t('config.system.allow_date_input')\">\n            <base-switch v-model=\"formData.allowDateInput\"></base-switch>\n          </switch-wrapper>\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-3\">\n          <switch-wrapper :label=\"$t('config.system.enable_tour')\">\n            <base-switch v-model=\"formData.enableTour\"></base-switch>\n          </switch-wrapper>\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-3\">\n          <switch-wrapper :label=\"$t('config.system.enable_print_preview')\">\n            <base-switch v-model=\"formData.printPreview\"></base-switch>\n          </switch-wrapper>\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-3 secure-content\">\n          <switch-wrapper :label=\"$t('config.system.enable_mes')\">\n            <base-switch v-model=\"formData.enableMes\"></base-switch>\n          </switch-wrapper>\n        </div>\n      </div>\n\n      <div class=\"row mt-4\">\n        <div class=\"col-12 col-md-4 mb-4\">\n          <base-select\n            :options=\"preRequisite.dateFormats\"\n            v-model=\"formData.dateFormat\"\n            :label=\"$t('config.system.date_format')\"\n            :allow-empty=\"false\"\n            simple\n            :disabled=\"isLoading\"\n            required\n          >\n            <template slot=\"selectedOption\" slot-scope=\"{ option }\"\n              >{{ now | moment(option.uuid) }}\n              <small class=\"bracketed text-muted\">{{\n                option.name\n              }}</small></template\n            >\n\n            <template slot=\"listOption\" slot-scope=\"{ option }\">\n              {{ now | moment(option.uuid) }}\n              <small class=\"bracketed text-muted\">{{ option.name }}</small>\n            </template>\n          </base-select>\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-4\">\n          <base-select\n            :options=\"preRequisite.timeFormats\"\n            v-model=\"formData.timeFormat\"\n            :label=\"$t('config.system.time_format')\"\n            :allow-empty=\"false\"\n            simple\n            :disabled=\"isLoading\"\n            required\n          >\n            <template slot=\"selectedOption\" slot-scope=\"{ option }\"\n              >{{ now | moment(option.uuid) }}\n              <small class=\"bracketed text-muted\">{{\n                option.name\n              }}</small></template\n            >\n\n            <template slot=\"listOption\" slot-scope=\"{ option }\">\n              {{ now | moment(option.uuid) }}\n              <small class=\"bracketed text-muted\">{{ option.name }}</small>\n            </template>\n          </base-select>\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-4\">\n          <base-select\n            :options=\"preRequisite.timezones\"\n            v-model=\"formData.timezone\"\n            :label=\"$t('config.system.timezone')\"\n            :allow-empty=\"false\"\n            simple\n            :disabled=\"isLoading\"\n            required\n          />\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-4\">\n          <base-select\n            :options=\"preRequisite.locales\"\n            v-model=\"formData.locale\"\n            :label=\"$t('config.system.locale')\"\n            :allow-empty=\"false\"\n            simple\n            :disabled=\"isLoading\"\n            required\n          />\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-4\">\n          <base-select\n            :options=\"preRequisite.currencies\"\n            track-by=\"name\"\n            show-by=\"description\"\n            v-model=\"formData.currency\"\n            :label=\"$t('config.system.currency')\"\n            :allow-empty=\"false\"\n            :disabled=\"isLoading\"\n            required\n          />\n        </div>\n\n        <div class=\"col-12 col-md-4 mb-4\">\n          <base-select\n            :options=\"preRequisite.paginations\"\n            v-model=\"formData.perPage\"\n            :label=\"$t('config.system.page_length')\"\n            :allow-empty=\"false\"\n            simple\n            :disabled=\"isLoading\"\n            required\n          >\n            <template slot=\"selectedOption\" slot-scope=\"{ option }\">{{\n              $t(\"config.system.per_page\", { attribute: option.name })\n            }}</template>\n\n            <template slot=\"listOption\" slot-scope=\"{ option }\">{{ \n              $t(\"config.system.per_page\", { attribute: option.name })\n            }}</template>\n          </base-select>\n        </div>\n\n        <collapse-transition>\n          <div class=\"col-12\">\n            <base-input\n              class=\"mb-5\"\n              :label=\"$t('config.system.azure_api_key')\"\n              type=\"text\"\n              v-model=\"formData.azureApikey\"\n              :error.sync=\"formErrors.azureApikey\"\n            />\n            <label class=\"input-group-material-label\">\n              {{ $t(\"config.system.google_api_key\") }}\n            </label>\n            <file-uploader\n              class=\"mb-5\"\n              name-label=\"config.system.google_api_key\"\n              :options=\"uploaderConfig\"\n              @updated=\"handleFileUpload\"\n              :multiple=\"false\"\n              url=\"/config/system/google_api_key_json/start\"\n              button-classes=\"justify-content-center\"\n              :hideAfterUpload=\"false\"\n            />\n          </div>\n        </collapse-transition>\n\n        <collapse-transition>\n          <div class=\"col-12\">\n            <base-input\n              class=\"mb-5\"\n              :label=\"$t('config.system.footer_credit')\"\n              type=\"text\"\n              v-model=\"formData.footerCredit\"\n              :error.sync=\"formErrors.footerCredit\"\n            />\n          </div>\n        </collapse-transition>\n\n        <collapse-transition>\n          <div class=\"col-12\">\n            <base-textarea\n              rows=\"4\"\n              :label=\"$t('config.system.allowed_file_extensions')\"\n              v-model=\"formData.allowedFileExtensions\"\n              :error.sync=\"formErrors.allowedFileExtensions\"\n              class=\"mb-4\"\n            />\n          </div>\n        </collapse-transition>\n\n        <collapse-transition>\n          <div class=\"col-12\" v-if=\"formData.maintenanceMode\">\n            <base-textarea\n              rows=\"4\"\n              :label=\"$t('config.system.maintenance_mode_message')\"\n              v-model=\"formData.maintenanceModeMessage\"\n              :error.sync=\"formErrors.maintenanceModeMessage\"\n              class=\"mb-4\"\n            />\n          </div>\n        </collapse-transition>\n      </div>\n\n      <div class=\"text-right mt-5\">\n        <base-button type=\"button\" design=\"light\" @click=\"reset\">{{\n          $t(\"general.reset\")\n        }}</base-button>\n        <base-button type=\"submit\" design=\"primary\">{{\n          $t(\"general.save\")\n        }}</base-button>\n      </div>\n    </form>\n  </base-container>\n</template>\n\n<script>\nimport form from \"@mixins/config-form\";\nimport { CollapseTransition } from \"vue2-transitions\";\nimport FileUploader from \"@components/FileUploader\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  extends: form,\n  components: {\n    CollapseTransition,\n    FileUploader,\n  },\n  data() {\n    return {\n      now: moment(),\n      formData: {\n        dateFormat: \"\",\n        timeFormat: \"\",\n        timezone: \"\",\n        fyStart: \"\",\n        perPage: 10,\n        locale: \"\",\n        currency: \"\",\n        azureApikey: \"\",\n        googleApikey: \"\",\n        footerCredit: \"\",\n        https: false,\n        errorDisplay: false,\n        printPreview: true,\n        frontendWebsite: false,\n        ipFilter: false,\n        emailLog: false,\n        emailTemplate: false,\n        todo: false,\n        enableAthsAlert: false,\n        backup: false,\n        dateTimeAlwaysEng: false,\n        maintenanceMode: false,\n        allowDateInput: false,\n        enableTour: false,\n        enableMes: false,\n        allowedFileExtensions: \"\",\n        maintenanceModeMessage: \"\",\n        type: \"system\",\n      },\n      preRequisite: {\n        dateFormats: [],\n        timeFormats: [],\n        timezones: [],\n        locales: [],\n        currencies: [],\n        paginations: [],\n      },\n      uploaderConfig: {\n        allowedExtensions: [\"json\"],\n        maxNoOfFiles: 1,\n      },\n    };\n  },\n  computed: {\n    ...mapGetters(\"config\", [\"vars\"]),\n  },\n  methods: {\n    ...mapActions(\"common\", [\"Store\", \"Init\"]),\n    regenerateNavigation() {\n      this.Generate().then(() => {\n        this.isLoading = false;\n\n        if (this.formData.azureApikey.length > 0) {\n          let asterisk_str = this.formData.azureApikey.substr(\n            0,\n            this.formData.azureApikey.length - 4\n          ); // this.formData.azureApikey;\n          asterisk_str = asterisk_str.replace(/[a-z0-9-]/gi, \"*\");\n          let nonAsterisk_str = this.formData.azureApikey.substr(\n            this.formData.azureApikey.length - 4,\n            this.formData.azureApikey.length\n          );\n          this.formData.azureApikey = asterisk_str + nonAsterisk_str;\n        }\n      });\n    },\n    beforeSubmit() {\n      this.formData.allowedFileExtensions = this.formData.allowedFileExtensions.replace(/\\s+|\\r?\\n|\\r/gim, \"\");\n\n      if (!this.formData.allowedFileExtensions) {\n        this.$toasted.error(\n          this.$t(\"global.required\", {\n            attribute: $t(\"config.system.allowed_file_extensions\"),\n          }),\n          this.$toastConfig.error\n        );\n        return false;\n      }\n    },\n    afterSubmit() {\n      this.regenerateNavigation();\n    },\n    handleFileUpload(response) {\n      if (response.uuid) {\n        this.formData.googleApikey = response.uuid;\n      } else if (response === true) {\n        this.formData.googleApikey = \"\";\n      }\n    },\n  },\n  mounted() {\n    this.getInitialData();\n\n    if (this.formData.azureApikey.length > 0) {\n      let asterisk_str = this.formData.azureApikey.substr(\n        0,\n        this.formData.azureApikey.length - 4\n      ); // this.formData.azureApikey;\n      asterisk_str = asterisk_str.replace(/[a-z0-9-]/gi, \"*\");\n      let nonAsterisk_str = this.formData.azureApikey.substr(\n        this.formData.azureApikey.length - 4,\n        this.formData.azureApikey.length\n      );\n      this.formData.azureApikey = asterisk_str + nonAsterisk_str;\n    }\n  },\n};\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"base-container\",\n    {\n      attrs: {\n        boxed: \"\",\n        \"with-loader\": \"\",\n        \"is-loading\": _vm.isLoading,\n        \"loader-color\": _vm.vars.loaderColor\n      }\n    },\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.submit.apply(null, arguments)\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-3\" },\n              [\n                _c(\n                  \"switch-wrapper\",\n                  { attrs: { label: _vm.$t(\"config.system.enable_todo\") } },\n                  [\n                    _c(\"base-switch\", {\n                      model: {\n                        value: _vm.formData.todo,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"todo\", $$v)\n                        },\n                        expression: \"formData.todo\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-3\" },\n              [\n                _c(\n                  \"switch-wrapper\",\n                  {\n                    attrs: {\n                      label: _vm.$t(\"config.system.enable_maintenance_mode\")\n                    }\n                  },\n                  [\n                    _c(\"base-switch\", {\n                      model: {\n                        value: _vm.formData.maintenanceMode,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"maintenanceMode\", $$v)\n                        },\n                        expression: \"formData.maintenanceMode\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-3\" },\n              [\n                _c(\n                  \"switch-wrapper\",\n                  {\n                    attrs: { label: _vm.$t(\"config.system.enable_aths_alert\") }\n                  },\n                  [\n                    _c(\"base-switch\", {\n                      model: {\n                        value: _vm.formData.enableAthsAlert,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"enableAthsAlert\", $$v)\n                        },\n                        expression: \"formData.enableAthsAlert\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-3\" },\n              [\n                _c(\n                  \"switch-wrapper\",\n                  {\n                    attrs: { label: _vm.$t(\"config.system.allow_date_input\") }\n                  },\n                  [\n                    _c(\"base-switch\", {\n                      model: {\n                        value: _vm.formData.allowDateInput,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"allowDateInput\", $$v)\n                        },\n                        expression: \"formData.allowDateInput\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-3\" },\n              [\n                _c(\n                  \"switch-wrapper\",\n                  { attrs: { label: _vm.$t(\"config.system.enable_tour\") } },\n                  [\n                    _c(\"base-switch\", {\n                      model: {\n                        value: _vm.formData.enableTour,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"enableTour\", $$v)\n                        },\n                        expression: \"formData.enableTour\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-3\" },\n              [\n                _c(\n                  \"switch-wrapper\",\n                  {\n                    attrs: {\n                      label: _vm.$t(\"config.system.enable_print_preview\")\n                    }\n                  },\n                  [\n                    _c(\"base-switch\", {\n                      model: {\n                        value: _vm.formData.printPreview,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"printPreview\", $$v)\n                        },\n                        expression: \"formData.printPreview\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-3 secure-content\" },\n              [\n                _c(\n                  \"switch-wrapper\",\n                  { attrs: { label: _vm.$t(\"config.system.enable_mes\") } },\n                  [\n                    _c(\"base-switch\", {\n                      model: {\n                        value: _vm.formData.enableMes,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"enableMes\", $$v)\n                        },\n                        expression: \"formData.enableMes\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"row mt-4\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\"base-select\", {\n                    attrs: {\n                      options: _vm.preRequisite.dateFormats,\n                      label: _vm.$t(\"config.system.date_format\"),\n                      \"allow-empty\": false,\n                      simple: \"\",\n                      disabled: _vm.isLoading,\n                      required: \"\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"selectedOption\",\n                        fn: function(ref) {\n                          var option = ref.option\n                          return [\n                            _vm._v(\n                              _vm._s(_vm._f(\"moment\")(_vm.now, option.uuid)) +\n                                \"\\n            \"\n                            ),\n                            _c(\n                              \"small\",\n                              { staticClass: \"bracketed text-muted\" },\n                              [_vm._v(_vm._s(option.name))]\n                            )\n                          ]\n                        }\n                      },\n                      {\n                        key: \"listOption\",\n                        fn: function(ref) {\n                          var option = ref.option\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(_vm._f(\"moment\")(_vm.now, option.uuid)) +\n                                \"\\n            \"\n                            ),\n                            _c(\n                              \"small\",\n                              { staticClass: \"bracketed text-muted\" },\n                              [_vm._v(_vm._s(option.name))]\n                            )\n                          ]\n                        }\n                      }\n                    ]),\n                    model: {\n                      value: _vm.formData.dateFormat,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"dateFormat\", $$v)\n                      },\n                      expression: \"formData.dateFormat\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\"base-select\", {\n                    attrs: {\n                      options: _vm.preRequisite.timeFormats,\n                      label: _vm.$t(\"config.system.time_format\"),\n                      \"allow-empty\": false,\n                      simple: \"\",\n                      disabled: _vm.isLoading,\n                      required: \"\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"selectedOption\",\n                        fn: function(ref) {\n                          var option = ref.option\n                          return [\n                            _vm._v(\n                              _vm._s(_vm._f(\"moment\")(_vm.now, option.uuid)) +\n                                \"\\n            \"\n                            ),\n                            _c(\n                              \"small\",\n                              { staticClass: \"bracketed text-muted\" },\n                              [_vm._v(_vm._s(option.name))]\n                            )\n                          ]\n                        }\n                      },\n                      {\n                        key: \"listOption\",\n                        fn: function(ref) {\n                          var option = ref.option\n                          return [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(_vm._f(\"moment\")(_vm.now, option.uuid)) +\n                                \"\\n            \"\n                            ),\n                            _c(\n                              \"small\",\n                              { staticClass: \"bracketed text-muted\" },\n                              [_vm._v(_vm._s(option.name))]\n                            )\n                          ]\n                        }\n                      }\n                    ]),\n                    model: {\n                      value: _vm.formData.timeFormat,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"timeFormat\", $$v)\n                      },\n                      expression: \"formData.timeFormat\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\"base-select\", {\n                    attrs: {\n                      options: _vm.preRequisite.timezones,\n                      label: _vm.$t(\"config.system.timezone\"),\n                      \"allow-empty\": false,\n                      simple: \"\",\n                      disabled: _vm.isLoading,\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.formData.timezone,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"timezone\", $$v)\n                      },\n                      expression: \"formData.timezone\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\"base-select\", {\n                    attrs: {\n                      options: _vm.preRequisite.locales,\n                      label: _vm.$t(\"config.system.locale\"),\n                      \"allow-empty\": false,\n                      simple: \"\",\n                      disabled: _vm.isLoading,\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.formData.locale,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"locale\", $$v)\n                      },\n                      expression: \"formData.locale\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\"base-select\", {\n                    attrs: {\n                      options: _vm.preRequisite.currencies,\n                      \"track-by\": \"name\",\n                      \"show-by\": \"description\",\n                      label: _vm.$t(\"config.system.currency\"),\n                      \"allow-empty\": false,\n                      disabled: _vm.isLoading,\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.formData.currency,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"currency\", $$v)\n                      },\n                      expression: \"formData.currency\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\"base-select\", {\n                    attrs: {\n                      options: _vm.preRequisite.paginations,\n                      label: _vm.$t(\"config.system.page_length\"),\n                      \"allow-empty\": false,\n                      simple: \"\",\n                      disabled: _vm.isLoading,\n                      required: \"\"\n                    },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"selectedOption\",\n                        fn: function(ref) {\n                          var option = ref.option\n                          return [\n                            _vm._v(\n                              _vm._s(\n                                _vm.$t(\"config.system.per_page\", {\n                                  attribute: option.name\n                                })\n                              )\n                            )\n                          ]\n                        }\n                      },\n                      {\n                        key: \"listOption\",\n                        fn: function(ref) {\n                          var option = ref.option\n                          return [\n                            _vm._v(\n                              _vm._s(\n                                _vm.$t(\"config.system.per_page\", {\n                                  attribute: option.name\n                                })\n                              )\n                            )\n                          ]\n                        }\n                      }\n                    ]),\n                    model: {\n                      value: _vm.formData.perPage,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"perPage\", $$v)\n                      },\n                      expression: \"formData.perPage\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"collapse-transition\", [\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12\" },\n                  [\n                    _c(\"base-input\", {\n                      staticClass: \"mb-5\",\n                      attrs: {\n                        label: _vm.$t(\"config.system.azure_api_key\"),\n                        type: \"text\",\n                        error: _vm.formErrors.azureApikey\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(_vm.formErrors, \"azureApikey\", $event)\n                        }\n                      },\n                      model: {\n                        value: _vm.formData.azureApikey,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"azureApikey\", $$v)\n                        },\n                        expression: \"formData.azureApikey\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"label\", { staticClass: \"input-group-material-label\" }, [\n                      _vm._v(\n                        \"\\n            \" +\n                          _vm._s(_vm.$t(\"config.system.google_api_key\")) +\n                          \"\\n          \"\n                      )\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"file-uploader\", {\n                      staticClass: \"mb-5\",\n                      attrs: {\n                        \"name-label\": \"config.system.google_api_key\",\n                        options: _vm.uploaderConfig,\n                        multiple: false,\n                        url: \"/config/system/google_api_key_json/start\",\n                        \"button-classes\": \"justify-content-center\",\n                        hideAfterUpload: false\n                      },\n                      on: { updated: _vm.handleFileUpload }\n                    })\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"collapse-transition\", [\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12\" },\n                  [\n                    _c(\"base-input\", {\n                      staticClass: \"mb-5\",\n                      attrs: {\n                        label: _vm.$t(\"config.system.footer_credit\"),\n                        type: \"text\",\n                        error: _vm.formErrors.footerCredit\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(\n                            _vm.formErrors,\n                            \"footerCredit\",\n                            $event\n                          )\n                        }\n                      },\n                      model: {\n                        value: _vm.formData.footerCredit,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"footerCredit\", $$v)\n                        },\n                        expression: \"formData.footerCredit\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"collapse-transition\", [\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12\" },\n                  [\n                    _c(\"base-textarea\", {\n                      staticClass: \"mb-4\",\n                      attrs: {\n                        rows: \"4\",\n                        label: _vm.$t(\"config.system.allowed_file_extensions\"),\n                        error: _vm.formErrors.allowedFileExtensions\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(\n                            _vm.formErrors,\n                            \"allowedFileExtensions\",\n                            $event\n                          )\n                        }\n                      },\n                      model: {\n                        value: _vm.formData.allowedFileExtensions,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"allowedFileExtensions\", $$v)\n                        },\n                        expression: \"formData.allowedFileExtensions\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"collapse-transition\", [\n                _vm.formData.maintenanceMode\n                  ? _c(\n                      \"div\",\n                      { staticClass: \"col-12\" },\n                      [\n                        _c(\"base-textarea\", {\n                          staticClass: \"mb-4\",\n                          attrs: {\n                            rows: \"4\",\n                            label: _vm.$t(\n                              \"config.system.maintenance_mode_message\"\n                            ),\n                            error: _vm.formErrors.maintenanceModeMessage\n                          },\n                          on: {\n                            \"update:error\": function($event) {\n                              return _vm.$set(\n                                _vm.formErrors,\n                                \"maintenanceModeMessage\",\n                                $event\n                              )\n                            }\n                          },\n                          model: {\n                            value: _vm.formData.maintenanceModeMessage,\n                            callback: function($$v) {\n                              _vm.$set(\n                                _vm.formData,\n                                \"maintenanceModeMessage\",\n                                $$v\n                              )\n                            },\n                            expression: \"formData.maintenanceModeMessage\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ])\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"text-right mt-5\" },\n            [\n              _c(\n                \"base-button\",\n                {\n                  attrs: { type: \"button\", design: \"light\" },\n                  on: { click: _vm.reset }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"general.reset\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"base-button\",\n                { attrs: { type: \"submit\", design: \"primary\" } },\n                [_vm._v(_vm._s(_vm.$t(\"general.save\")))]\n              )\n            ],\n            1\n          )\n        ]\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { mapGetters, mapActions } from 'vuex'\nimport * as ConfigAPI from '@api/config'\nimport { formatKeysToSnakeCase } from '@js/core/utils/formatter'\n\nexport default {\n    components: {},\n    data() {\n        return {\n            formData: {},\n            formErrors: {},\n            initialFormData: null,\n            initianLength: 0,\n            emptyFormData: null,\n            entity: null,\n            preRequisite: {},\n            isLoading: true,\n            useUserPreference: false,\n            dataType: null,\n            configType: '',\n        }\n    },\n    computed: {\n        ...mapGetters('config', {\n            configsWithPreference: 'configs',\n            configs: 'configsOriginal',\n            vars: 'vars',\n            allowExtraInput: 'allowExtraInput',\n        }),\n        formHasErrors() {\n            let ans = false\n            this.formErrors.objForEach(er => {\n                ans = er !== '' ? true : ans\n            })\n            return ans\n        },\n    },\n    methods: {\n        ...mapActions('config', [\n            'GetConfig',\n        ]),\n        ...mapActions('user', [\n            'GetUser',\n        ]),\n        ...mapActions('navigation', [\n            'Generate',\n        ]),\n        ...mapActions('common', [\n            'Custom',\n        ]),\n        findActualValue(value, options, key = 'uuid') {\n            return options.find(option => option[key] === value) || null\n        },\n        submit(preference = false) {\n            if(formUtil.isUnchanged(this.initialFormData, this.formData)) {\n                this.$toasted.info(this.$t('general.nothing_changed'), this.$toastConfig.info)\n                return false\n            }\n\n            this.isLoading = true\n\n            if(this.formData.hasOwnProperty('type')) {\n                this.formData.type = this.formData.type.snakeCase()\n            }\n\n            const storeFn = preference === true || this.useUserPreference ? ConfigAPI.updateUserPref : (this.configType === 'module' ? ConfigAPI.updateModule : ConfigAPI.update)\n\n            if (this.beforeSubmit && typeof this.beforeSubmit === \"function\") {\n                const shouldProceed = this.beforeSubmit()\n                if(shouldProceed === false) {\n                    this.isLoading = false\n                    return\n                }\n            }\n\n            storeFn(this.formData)\n                .then(response => {\n                    const fnToCall = preference === true || this.useUserPreference ? this.GetUser : this.GetConfig\n                    fnToCall()\n                        .then(() => {\n                            this.$toasted.success(response.message, this.$toastConfig)\n                            this.initialFormData = _.cloneDeep(this.formData)\n                            this.isLoading = false\n                        })\n                        .catch(error => {\n                            this.isLoading = false\n                            this.formErrors = formUtil.handleErrors(error)\n                        })\n\n                    if (typeof this.afterSubmit === \"function\") {\n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitSuccess === \"function\") {\n                        this.afterSubmitSuccess()\n                    }\n                })\n                .catch(error => {\n                    this.isLoading = false\n                    this.formErrors = formUtil.handleErrors(error)\n\n                    if (typeof this.afterSubmit === \"function\") {\n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitError === \"function\") {\n                        this.afterSubmitError()\n                    }\n                })\n        },\n        reset() {\n            formUtil.confirmAction()\n                .then((result) => {\n                    if (result.value) {\n                        this.formData = Object.assign({}, this.formData, _.cloneDeep(this.initialFormData))\n                    }\n                })\n        },\n        unsavedCheck(next) {\n            formUtil.unsavedCheckAlert(this.initialFormData, this.formData, next)\n        },\n        fillPreRequisite(response) {\n            this.preRequisite.objForEach((value, key) => {\n                this.preRequisite[key] = response.hasOwnProperty(key) ? response[key] : value\n            })\n\n            this.isLoading = false\n        },\n        fillFormData() {\n            this.isLoading = true\n            const configsToUse = this.useUserPreference ? this.configsWithPreference : this.configs\n            if(this.formData.type && configsToUse[this.formData.type]) {\n                this.formData = formUtil.assignValues(this.formData, configsToUse[this.formData.type])\n            }\n\n            if(this.formData.types && Array.isArray(this.formData.types)) {\n                this.formData.types.forEach((value) => {\n                    this.formData = formUtil.assignValues(this.formData, configsToUse[value])\n                })\n            }\n\n            if(this.formData.override) {\n                this.formData.objForEach((value, key) => {\n                    if(value && _.isObject(value)) {\n                        this.formData[key] = formUtil.assignValues(this.formData[key], configsToUse[key])\n                    } else {\n                        this.formData[key] = configsToUse[key] ? configsToUse[key] : value\n                    }\n                })\n            }\n\n            if (typeof this.addNewRow === \"function\" && typeof this.addNewRowIfNone === \"function\") {\n                this.addNewRowIfNone()\n            }\n\n            this.isLoading = false\n        },\n        async getInitialData(callbackFn) {\n            this.isLoading = true\n            try {\n                const response = await ConfigAPI.getPreRequisite(Object.keys(this.preRequisite).join(','))\n                this.fillPreRequisite(response)\n\n                if(callbackFn) {\n                    this.$nextTick(() => {\n                        callbackFn()\n                    })\n                }\n                return response\n            } catch (error) {\n                this.isLoading = false\n                this.formErrors = formUtil.handleErrors(error)\n                throw error\n            }\n        },\n    },\n    mounted() {\n        this.fillFormData()\n        this.initialFormData = _.cloneDeep(this.formData)\n    },\n    beforeDestroy () {\n        delete this.formData\n        delete this.formErrors\n        delete this.preRequisite\n    },\n    beforeRouteLeave(to, from, next) {\n        this.unsavedCheck(next)\n    }\n}\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2c4ddf82&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2c4ddf82')) {\n      api.createRecord('2c4ddf82', component.options)\n    } else {\n      api.reload('2c4ddf82', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=2c4ddf82&\", function () {\n      api.rerender('2c4ddf82', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/app/config/system/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=2c4ddf82&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAFA;AAxCA;AA6CA;AACA;AAGA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CA;AA4CA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AAnrpBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAaaA;AACA;AAdA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAvIA;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApLA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}