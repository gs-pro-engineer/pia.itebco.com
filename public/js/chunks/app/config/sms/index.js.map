{"version":3,"file":"js/chunks/app/config/sms/index.js?id=a65f86fbe54540700e82","sources":["webpack:///index.vue","webpack:///./resources/js/views/app/config/sms/index.vue?b05b","webpack:///./resources/js/mixins/config-form.js","webpack:///./resources/js/views/app/config/sms/index.vue","webpack:///./resources/js/views/app/config/sms/index.vue?5ff9","webpack:///./resources/js/views/app/config/sms/index.vue?4138"],"sourcesContent":["<template>\n    <base-container boxed with-loader :is-loading=\"isLoading\" :loader-color=\"vars.loaderColor\">\n        <form @submit.prevent=\"submit\">\n\n            <div class=\"row\">\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-input :label=\"$t('config.sms.max_per_chunk')\" type=\"text\" v-model=\"formData.maxPerChunk\" :error.sync=\"formErrors.maxPerChunk\" />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-input :label=\"$t('config.sms.custom_api_get_url')\" type=\"text\" v-model=\"formData.customApiGetUrl\" :error.sync=\"formErrors.customApiGetUrl\" />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-input :label=\"$t('config.sms.custom_api_number_prefix')\" type=\"text\" v-model=\"formData.customApiNumberPrefix\" :error.sync=\"formErrors.customApiNumberPrefix\" />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-input :label=\"$t('config.sms.custom_api_sender_id_param')\" type=\"text\" v-model=\"formData.customApiSenderIdParam\" :error.sync=\"formErrors.customApiSenderIdParam\" />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-input :label=\"$t('config.sms.custom_api_sender_id')\" type=\"text\" v-model=\"formData.customApiSenderId\" :error.sync=\"formErrors.customApiSenderId\" />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-input :label=\"$t('config.sms.custom_api_receiver_param')\" type=\"text\" v-model=\"formData.customApiReceiverParam\" :error.sync=\"formErrors.customApiReceiverParam\" />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-input :label=\"$t('config.sms.custom_api_message_param')\" type=\"text\" v-model=\"formData.customApiMessageParam\" :error.sync=\"formErrors.customApiMessageParam\" />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <div class=\"d-flex align-items-center\">\n                        <base-checkbox class=\"ml-0 mt-2\" v-model=\"formData.customApiAcceptsMultipleReceiver\">\n                            {{ $t('config.sms.custom_api_accepts_multiple_receiver') }}\n                        </base-checkbox>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"text-right mt-5\">\n                <base-button type=\"button\" design=\"light\" @click=\"reset\">{{ $t('general.reset') }}</base-button>\n                <base-button type=\"submit\" design=\"primary\">{{ $t('general.save') }}</base-button>\n            </div>\n\n        </form>\n    </base-container>\n</template>\n\n<script>\n    import form from '@mixins/config-form'\n    import { CollapseTransition } from 'vue2-transitions'\n\n    export default {\n        extends: form,\n        components: {\n            CollapseTransition\n        },\n        data() {\n            return {\n                formData: {\n                    maxPerChunk : '',\n                    customApiGetUrl: '',\n                    customApiNumberPrefix: '',\n                    customApiSenderIdParam: '',\n                    customApiSenderId: '',\n                    customApiReceiverParam: '',\n                    customApiMessageParam: '',\n                    customApiAcceptsMultipleReceiver: false,\n                    type: 'sms'\n                },\n            }\n        },\n    }\n\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"base-container\",\n    {\n      attrs: {\n        boxed: \"\",\n        \"with-loader\": \"\",\n        \"is-loading\": _vm.isLoading,\n        \"loader-color\": _vm.vars.loaderColor\n      }\n    },\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.submit.apply(null, arguments)\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-input\", {\n                  attrs: {\n                    label: _vm.$t(\"config.sms.max_per_chunk\"),\n                    type: \"text\",\n                    error: _vm.formErrors.maxPerChunk\n                  },\n                  on: {\n                    \"update:error\": function($event) {\n                      return _vm.$set(_vm.formErrors, \"maxPerChunk\", $event)\n                    }\n                  },\n                  model: {\n                    value: _vm.formData.maxPerChunk,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData, \"maxPerChunk\", $$v)\n                    },\n                    expression: \"formData.maxPerChunk\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-input\", {\n                  attrs: {\n                    label: _vm.$t(\"config.sms.custom_api_get_url\"),\n                    type: \"text\",\n                    error: _vm.formErrors.customApiGetUrl\n                  },\n                  on: {\n                    \"update:error\": function($event) {\n                      return _vm.$set(_vm.formErrors, \"customApiGetUrl\", $event)\n                    }\n                  },\n                  model: {\n                    value: _vm.formData.customApiGetUrl,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData, \"customApiGetUrl\", $$v)\n                    },\n                    expression: \"formData.customApiGetUrl\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-input\", {\n                  attrs: {\n                    label: _vm.$t(\"config.sms.custom_api_number_prefix\"),\n                    type: \"text\",\n                    error: _vm.formErrors.customApiNumberPrefix\n                  },\n                  on: {\n                    \"update:error\": function($event) {\n                      return _vm.$set(\n                        _vm.formErrors,\n                        \"customApiNumberPrefix\",\n                        $event\n                      )\n                    }\n                  },\n                  model: {\n                    value: _vm.formData.customApiNumberPrefix,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData, \"customApiNumberPrefix\", $$v)\n                    },\n                    expression: \"formData.customApiNumberPrefix\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-input\", {\n                  attrs: {\n                    label: _vm.$t(\"config.sms.custom_api_sender_id_param\"),\n                    type: \"text\",\n                    error: _vm.formErrors.customApiSenderIdParam\n                  },\n                  on: {\n                    \"update:error\": function($event) {\n                      return _vm.$set(\n                        _vm.formErrors,\n                        \"customApiSenderIdParam\",\n                        $event\n                      )\n                    }\n                  },\n                  model: {\n                    value: _vm.formData.customApiSenderIdParam,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData, \"customApiSenderIdParam\", $$v)\n                    },\n                    expression: \"formData.customApiSenderIdParam\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-input\", {\n                  attrs: {\n                    label: _vm.$t(\"config.sms.custom_api_sender_id\"),\n                    type: \"text\",\n                    error: _vm.formErrors.customApiSenderId\n                  },\n                  on: {\n                    \"update:error\": function($event) {\n                      return _vm.$set(\n                        _vm.formErrors,\n                        \"customApiSenderId\",\n                        $event\n                      )\n                    }\n                  },\n                  model: {\n                    value: _vm.formData.customApiSenderId,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData, \"customApiSenderId\", $$v)\n                    },\n                    expression: \"formData.customApiSenderId\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-input\", {\n                  attrs: {\n                    label: _vm.$t(\"config.sms.custom_api_receiver_param\"),\n                    type: \"text\",\n                    error: _vm.formErrors.customApiReceiverParam\n                  },\n                  on: {\n                    \"update:error\": function($event) {\n                      return _vm.$set(\n                        _vm.formErrors,\n                        \"customApiReceiverParam\",\n                        $event\n                      )\n                    }\n                  },\n                  model: {\n                    value: _vm.formData.customApiReceiverParam,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData, \"customApiReceiverParam\", $$v)\n                    },\n                    expression: \"formData.customApiReceiverParam\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-input\", {\n                  attrs: {\n                    label: _vm.$t(\"config.sms.custom_api_message_param\"),\n                    type: \"text\",\n                    error: _vm.formErrors.customApiMessageParam\n                  },\n                  on: {\n                    \"update:error\": function($event) {\n                      return _vm.$set(\n                        _vm.formErrors,\n                        \"customApiMessageParam\",\n                        $event\n                      )\n                    }\n                  },\n                  model: {\n                    value: _vm.formData.customApiMessageParam,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData, \"customApiMessageParam\", $$v)\n                    },\n                    expression: \"formData.customApiMessageParam\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-md-4 mb-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"d-flex align-items-center\" },\n                [\n                  _c(\n                    \"base-checkbox\",\n                    {\n                      staticClass: \"ml-0 mt-2\",\n                      model: {\n                        value: _vm.formData.customApiAcceptsMultipleReceiver,\n                        callback: function($$v) {\n                          _vm.$set(\n                            _vm.formData,\n                            \"customApiAcceptsMultipleReceiver\",\n                            $$v\n                          )\n                        },\n                        expression: \"formData.customApiAcceptsMultipleReceiver\"\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n                        \" +\n                          _vm._s(\n                            _vm.$t(\n                              \"config.sms.custom_api_accepts_multiple_receiver\"\n                            )\n                          ) +\n                          \"\\n                    \"\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"text-right mt-5\" },\n            [\n              _c(\n                \"base-button\",\n                {\n                  attrs: { type: \"button\", design: \"light\" },\n                  on: { click: _vm.reset }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"general.reset\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"base-button\",\n                { attrs: { type: \"submit\", design: \"primary\" } },\n                [_vm._v(_vm._s(_vm.$t(\"general.save\")))]\n              )\n            ],\n            1\n          )\n        ]\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { mapGetters, mapActions } from 'vuex'\nimport * as ConfigAPI from '@api/config'\nimport { formatKeysToSnakeCase } from '@js/core/utils/formatter'\n\nexport default {\n    components: {},\n    data() {\n        return {\n            formData: {},\n            formErrors: {},\n            initialFormData: null,\n            initianLength: 0,\n            emptyFormData: null,\n            entity: null,\n            preRequisite: {},\n            isLoading: true,\n            useUserPreference: false,\n            dataType: null,\n            configType: '',\n        }\n    },\n    computed: {\n        ...mapGetters('config', {\n            configsWithPreference: 'configs',\n            configs: 'configsOriginal',\n            vars: 'vars',\n            allowExtraInput: 'allowExtraInput',\n        }),\n        formHasErrors() {\n            let ans = false\n            this.formErrors.objForEach(er => {\n                ans = er !== '' ? true : ans\n            })\n            return ans\n        },\n    },\n    methods: {\n        ...mapActions('config', [\n            'GetConfig',\n        ]),\n        ...mapActions('user', [\n            'GetUser',\n        ]),\n        ...mapActions('navigation', [\n            'Generate',\n        ]),\n        ...mapActions('common', [\n            'Custom',\n        ]),\n        findActualValue(value, options, key = 'uuid') {\n            return options.find(option => option[key] === value) || null\n        },\n        submit(preference = false) {\n            if(formUtil.isUnchanged(this.initialFormData, this.formData)) {\n                this.$toasted.info(this.$t('general.nothing_changed'), this.$toastConfig.info)\n                return false\n            }\n\n            this.isLoading = true\n\n            if(this.formData.hasOwnProperty('type')) {\n                this.formData.type = this.formData.type.snakeCase()\n            }\n\n            const storeFn = preference === true || this.useUserPreference ? ConfigAPI.updateUserPref : (this.configType === 'module' ? ConfigAPI.updateModule : ConfigAPI.update)\n\n            if (this.beforeSubmit && typeof this.beforeSubmit === \"function\") {\n                const shouldProceed = this.beforeSubmit()\n                if(shouldProceed === false) {\n                    this.isLoading = false\n                    return\n                }\n            }\n\n            storeFn(this.formData)\n                .then(response => {\n                    const fnToCall = preference === true || this.useUserPreference ? this.GetUser : this.GetConfig\n                    fnToCall()\n                        .then(() => {\n                            this.$toasted.success(response.message, this.$toastConfig)\n                            this.initialFormData = _.cloneDeep(this.formData)\n                            this.isLoading = false\n                        })\n                        .catch(error => {\n                            this.isLoading = false\n                            this.formErrors = formUtil.handleErrors(error)\n                        })\n\n                    if (typeof this.afterSubmit === \"function\") {\n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitSuccess === \"function\") {\n                        this.afterSubmitSuccess()\n                    }\n                })\n                .catch(error => {\n                    this.isLoading = false\n                    this.formErrors = formUtil.handleErrors(error)\n\n                    if (typeof this.afterSubmit === \"function\") {\n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitError === \"function\") {\n                        this.afterSubmitError()\n                    }\n                })\n        },\n        reset() {\n            formUtil.confirmAction()\n                .then((result) => {\n                    if (result.value) {\n                        this.formData = Object.assign({}, this.formData, _.cloneDeep(this.initialFormData))\n                    }\n                })\n        },\n        unsavedCheck(next) {\n            formUtil.unsavedCheckAlert(this.initialFormData, this.formData, next)\n        },\n        fillPreRequisite(response) {\n            this.preRequisite.objForEach((value, key) => {\n                this.preRequisite[key] = response.hasOwnProperty(key) ? response[key] : value\n            })\n\n            this.isLoading = false\n        },\n        fillFormData() {\n            this.isLoading = true\n            const configsToUse = this.useUserPreference ? this.configsWithPreference : this.configs\n            if(this.formData.type && configsToUse[this.formData.type]) {\n                this.formData = formUtil.assignValues(this.formData, configsToUse[this.formData.type])\n            }\n\n            if(this.formData.types && Array.isArray(this.formData.types)) {\n                this.formData.types.forEach((value) => {\n                    this.formData = formUtil.assignValues(this.formData, configsToUse[value])\n                })\n            }\n\n            if(this.formData.override) {\n                this.formData.objForEach((value, key) => {\n                    if(value && _.isObject(value)) {\n                        this.formData[key] = formUtil.assignValues(this.formData[key], configsToUse[key])\n                    } else {\n                        this.formData[key] = configsToUse[key] ? configsToUse[key] : value\n                    }\n                })\n            }\n\n            if (typeof this.addNewRow === \"function\" && typeof this.addNewRowIfNone === \"function\") {\n                this.addNewRowIfNone()\n            }\n\n            this.isLoading = false\n        },\n        async getInitialData(callbackFn) {\n            this.isLoading = true\n            try {\n                const response = await ConfigAPI.getPreRequisite(Object.keys(this.preRequisite).join(','))\n                this.fillPreRequisite(response)\n\n                if(callbackFn) {\n                    this.$nextTick(() => {\n                        callbackFn()\n                    })\n                }\n                return response\n            } catch (error) {\n                this.isLoading = false\n                this.formErrors = formUtil.handleErrors(error)\n                throw error\n            }\n        },\n    },\n    mounted() {\n        this.fillFormData()\n        this.initialFormData = _.cloneDeep(this.formData)\n    },\n    beforeDestroy () {\n        delete this.formData\n        delete this.formErrors\n        delete this.preRequisite\n    },\n    beforeRouteLeave(to, from, next) {\n        this.unsavedCheck(next)\n    }\n}\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=250f373c&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('250f373c')) {\n      api.createRecord('250f373c', component.options)\n    } else {\n      api.reload('250f373c', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=250f373c&\", function () {\n      api.rerender('250f373c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/app/config/sms/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=250f373c&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAaA;AAnBA;;;;;;;;;;;;ACzaA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAaA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AADA;AAAA;AAAA;AAaA;AACA;AAdA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAvIA;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApLA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}