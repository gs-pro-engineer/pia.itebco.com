{"version":3,"file":"js/chunks/app/config/authentication/index.js?id=ee1fae46c3513388d570","sources":["webpack:///index.vue","webpack:///./resources/js/views/app/config/authentication/index.vue?b1c6","webpack:///./resources/js/mixins/config-form.js","webpack:///./resources/js/views/app/config/authentication/index.vue","webpack:///./resources/js/views/app/config/authentication/index.vue?3cc0","webpack:///./resources/js/views/app/config/authentication/index.vue?ab86"],"sourcesContent":["<template>\n    <base-container boxed with-loader :is-loading=\"isLoading\" :loader-color=\"vars.loaderColor\">\n        <form @submit.prevent=\"submit\">\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-4\">\n                    <switch-wrapper :label=\"$t('config.auth.reset_password')\">\n                        <base-switch v-model=\"formData.resetPassword\"></base-switch>\n                    </switch-wrapper>\n                </div>\n\n                <div class=\"col-12 col-md-4\">\n                    <switch-wrapper :label=\"$t('config.auth.two_factor_security')\">\n                        <base-switch v-model=\"formData.twoFactorSecurity\"></base-switch>\n                    </switch-wrapper>\n                </div>\n\n                <div class=\"col-12 col-md-4\">\n                    <switch-wrapper :label=\"$t('config.auth.lock_screen')\">\n                        <base-switch v-model=\"formData.lockScreen\"></base-switch>\n                    </switch-wrapper>\n                </div>\n\n                <div class=\"col-12 col-md-4\">\n                    <switch-wrapper :label=\"$t('config.auth.login_throttle')\">\n                        <base-switch v-model=\"formData.loginThrottle\"></base-switch>\n                    </switch-wrapper>\n                </div>\n\n                <div class=\"col-12 col-md-4\">\n                    <switch-wrapper :label=\"$t('config.auth.social_login')\">\n                        <base-switch v-model=\"formData.socialLogin\"></base-switch>\n                    </switch-wrapper>\n                </div>\n\n                <div class=\"col-12 col-md-4\">\n                    <switch-wrapper :label=\"$t('config.auth.email_otp_login')\">\n                        <base-switch v-model=\"formData.emailOtpLogin\"></base-switch>\n                    </switch-wrapper>\n                </div>\n\n                <div class=\"col-12 col-md-4\">\n                    <switch-wrapper :label=\"$t('config.auth.registration')\">\n                        <base-switch v-model=\"formData.registration\"></base-switch>\n                    </switch-wrapper>\n                </div>\n\n\n                <template v-if=\"formData.registration\">\n\n                    <div class=\"col-12 col-md-4\">\n                        <switch-wrapper :label=\"$t('config.auth.email_verification')\">\n                            <base-switch v-model=\"formData.emailVerification\"></base-switch>\n                        </switch-wrapper>\n                    </div>\n\n                    <div class=\"col-12 col-md-4\">\n                        <switch-wrapper :label=\"$t('config.auth.account_approval')\">\n                            <base-switch v-model=\"formData.accountApproval\"></base-switch>\n                        </switch-wrapper>\n                    </div>\n\n                    <div class=\"col-12 col-md-4\">\n                        <switch-wrapper :label=\"$t('config.auth.registration_terms')\">\n                            <base-switch v-model=\"formData.registrationTerms\"></base-switch>\n                        </switch-wrapper>\n                    </div>\n\n                </template>\n\n            </div>\n\n            <div class=\"row mt-4\">\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-select :options=\"preRequisite.guestLayoutDesigns\" v-model=\"formData.guestLayoutDesign\" :label=\"$t('config.auth.guest_layout_design')\" :allow-empty=\"false\" simple :disabled=\"isLoading\" />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-select :options=\"preRequisite.guestLayoutColors\" v-model=\"formData.guestLayoutColor\" :label=\"$t('config.auth.guest_layout_color')\" :allow-empty=\"false\" simple :disabled=\"isLoading\" />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-input :label=\"$t('config.auth.session_lifetime')+' ('+$t('list.general.durations.m')+')'\" type=\"text\" v-model=\"formData.sessionLifetime\" :error.sync=\"formErrors.sessionLifetime\" />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-input :label=\"$t('config.auth.reset_password_token_lifetime')+' ('+$t('list.general.durations.m')+')'\" type=\"text\" v-model=\"formData.resetPasswordTokenLifetime\" :error.sync=\"formErrors.resetPasswordTokenLifetime\" />\n                </div>\n\n                <collapse-transition>\n                    <div class=\"col-12 col-md-4 mb-4\" v-if=\"formData.lockScreen\">\n                        <base-input :label=\"$t('config.auth.lock_screen_timeout')+' ('+$t('list.general.durations.m')+')'\" type=\"text\" v-model=\"formData.lockScreenTimeout\" :error.sync=\"formErrors.lockScreenTimeout\" />\n                    </div>\n                </collapse-transition>\n\n                <collapse-transition>\n                        <div v-if=\"formData.loginThrottle\" class=\"col-12 col-md-4 mb-4\" key=\"login_throttle_attempt\">\n                            <base-input :label=\"$t('config.auth.login_throttle_attempt')\" type=\"text\" v-model=\"formData.loginThrottleAttempt\" :error.sync=\"formErrors.loginThrottleAttempt\" />\n                        </div>\n                </collapse-transition>\n\n                <collapse-transition>\n                        <div v-if=\"formData.loginThrottle\" class=\"col-12 col-md-4 mb-4\" key=\"login_throttle_timeout\">\n                            <base-input :label=\"$t('config.auth.login_throttle_timeout')\" type=\"text\" v-model=\"formData.loginThrottleTimeout\" :error.sync=\"formErrors.loginThrottleTimeout\" />\n                        </div>\n                </collapse-transition>\n\n                <collapse-transition>\n                    <table v-if=\"formData.socialLogin\" class=\"table table-striped\">\n                        <tr v-for=\"method in preRequisite.socialLoginProviders\" :key=\"method.uuid\">\n                            <td class=\"va-bottom\">\n                                <switch-wrapper :label=\"`${$t('config.auth.login_with')} ${method.name}`\">\n                                    <base-switch v-model=\"formData[method.uuid]\"></base-switch>\n                                </switch-wrapper>\n                            </td>\n                            <td>\n                                <base-input :disabled=\"!formData[method.uuid]\" :label=\"$t('config.auth.client_id')\" type=\"text\" v-model=\"formData[`${method.uuid}ClientId`]\" :error.sync=\"formErrors[`${method.uuid}ClientId`]\" />\n                            </td>\n                            <td>\n                                <base-input :disabled=\"!formData[method.uuid]\" :label=\"$t('config.auth.client_secret')\" type=\"text\" v-model=\"formData[`${method.uuid}ClientSecret`]\" :error.sync=\"formErrors[`${method.uuid}ClientSecret`]\" />\n                            </td>\n                        </tr>\n                    </table>\n                </collapse-transition>\n\n            </div>\n\n\n            <div class=\"text-right mt-5\">\n                <base-button type=\"button\" design=\"light\" @click=\"reset\">{{ $t('general.reset') }}</base-button>\n                <base-button type=\"submit\" design=\"primary\">{{ $t('general.save') }}</base-button>\n            </div>\n\n        </form>\n    </base-container>\n</template>\n\n<script>\n    import form from '@mixins/config-form'\n    import { CollapseTransition } from 'vue2-transitions'\n\n    export default {\n        extends: form,\n        components: {\n            CollapseTransition\n        },\n        data() {\n            return {\n                formData: {\n                    sessionLifetime: '',\n                    resetPasswordTokenLifetime: '',\n                    resetPassword: false,\n                    twoFactorSecurity: false,\n                    registration: false,\n                    lockScreen: false,\n                    lockScreenTimeout: '',\n                    loginThrottle: false,\n                    loginThrottleAttempt: '',\n                    loginThrottleTimeout: '',\n                    emailVerification: false,\n                    accountApproval: false,\n                    emailOtpLogin: false,\n                    smsOtpLogin: false,\n                    socialLogin: false,\n                    google: false,\n                    facebook: false,\n                    twitter: false,\n                    github: false,\n                    googleClientId: '',\n                    googleClientSecret: '',\n                    facebookClientId: '',\n                    facebookClientSecret: '',\n                    twitterClientId: '',\n                    twitterClientSecret: '',\n                    githubClientId: '',\n                    githubClientSecret: '',\n                    guestLayoutDesign: '',\n                    guestLayoutColor: '',\n                    type: 'auth'\n                },\n                preRequisite: {\n                    socialLoginProviders: [],\n                    guestLayoutDesigns: [\n                        {\n                            uuid: 'default',\n                            name: 'Default'\n                        },\n                        {\n                            uuid: 'boxed-left',\n                            name: 'Boxed Left '\n                        },\n                        {\n                            uuid: 'boxed-right',\n                            name: 'Boxed Right '\n                        },\n                    ],\n                    guestLayoutColors: [\n                        {\n                            uuid: 'default',\n                            name: 'Default'\n                        },\n                        {\n                            uuid: 'light',\n                            name: 'Light'\n                        },\n                        {\n                            uuid: 'dark',\n                            name: 'Dark'\n                        },\n                    ]\n                },\n                systemVariables: {\n                },\n            }\n        },\n        mounted() {\n            this.getInitialData()\n        },\n    }\n\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"base-container\",\n    {\n      attrs: {\n        boxed: \"\",\n        \"with-loader\": \"\",\n        \"is-loading\": _vm.isLoading,\n        \"loader-color\": _vm.vars.loaderColor\n      }\n    },\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.submit.apply(null, arguments)\n            }\n          }\n        },\n        [\n          _c(\n            \"div\",\n            { staticClass: \"row\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4\" },\n                [\n                  _c(\n                    \"switch-wrapper\",\n                    { attrs: { label: _vm.$t(\"config.auth.reset_password\") } },\n                    [\n                      _c(\"base-switch\", {\n                        model: {\n                          value: _vm.formData.resetPassword,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"resetPassword\", $$v)\n                          },\n                          expression: \"formData.resetPassword\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4\" },\n                [\n                  _c(\n                    \"switch-wrapper\",\n                    {\n                      attrs: {\n                        label: _vm.$t(\"config.auth.two_factor_security\")\n                      }\n                    },\n                    [\n                      _c(\"base-switch\", {\n                        model: {\n                          value: _vm.formData.twoFactorSecurity,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"twoFactorSecurity\", $$v)\n                          },\n                          expression: \"formData.twoFactorSecurity\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4\" },\n                [\n                  _c(\n                    \"switch-wrapper\",\n                    { attrs: { label: _vm.$t(\"config.auth.lock_screen\") } },\n                    [\n                      _c(\"base-switch\", {\n                        model: {\n                          value: _vm.formData.lockScreen,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"lockScreen\", $$v)\n                          },\n                          expression: \"formData.lockScreen\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4\" },\n                [\n                  _c(\n                    \"switch-wrapper\",\n                    { attrs: { label: _vm.$t(\"config.auth.login_throttle\") } },\n                    [\n                      _c(\"base-switch\", {\n                        model: {\n                          value: _vm.formData.loginThrottle,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"loginThrottle\", $$v)\n                          },\n                          expression: \"formData.loginThrottle\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4\" },\n                [\n                  _c(\n                    \"switch-wrapper\",\n                    { attrs: { label: _vm.$t(\"config.auth.social_login\") } },\n                    [\n                      _c(\"base-switch\", {\n                        model: {\n                          value: _vm.formData.socialLogin,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"socialLogin\", $$v)\n                          },\n                          expression: \"formData.socialLogin\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4\" },\n                [\n                  _c(\n                    \"switch-wrapper\",\n                    { attrs: { label: _vm.$t(\"config.auth.email_otp_login\") } },\n                    [\n                      _c(\"base-switch\", {\n                        model: {\n                          value: _vm.formData.emailOtpLogin,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"emailOtpLogin\", $$v)\n                          },\n                          expression: \"formData.emailOtpLogin\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4\" },\n                [\n                  _c(\n                    \"switch-wrapper\",\n                    { attrs: { label: _vm.$t(\"config.auth.registration\") } },\n                    [\n                      _c(\"base-switch\", {\n                        model: {\n                          value: _vm.formData.registration,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"registration\", $$v)\n                          },\n                          expression: \"formData.registration\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _vm.formData.registration\n                ? [\n                    _c(\n                      \"div\",\n                      { staticClass: \"col-12 col-md-4\" },\n                      [\n                        _c(\n                          \"switch-wrapper\",\n                          {\n                            attrs: {\n                              label: _vm.$t(\"config.auth.email_verification\")\n                            }\n                          },\n                          [\n                            _c(\"base-switch\", {\n                              model: {\n                                value: _vm.formData.emailVerification,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.formData,\n                                    \"emailVerification\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"formData.emailVerification\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"col-12 col-md-4\" },\n                      [\n                        _c(\n                          \"switch-wrapper\",\n                          {\n                            attrs: {\n                              label: _vm.$t(\"config.auth.account_approval\")\n                            }\n                          },\n                          [\n                            _c(\"base-switch\", {\n                              model: {\n                                value: _vm.formData.accountApproval,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.formData, \"accountApproval\", $$v)\n                                },\n                                expression: \"formData.accountApproval\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"col-12 col-md-4\" },\n                      [\n                        _c(\n                          \"switch-wrapper\",\n                          {\n                            attrs: {\n                              label: _vm.$t(\"config.auth.registration_terms\")\n                            }\n                          },\n                          [\n                            _c(\"base-switch\", {\n                              model: {\n                                value: _vm.formData.registrationTerms,\n                                callback: function($$v) {\n                                  _vm.$set(\n                                    _vm.formData,\n                                    \"registrationTerms\",\n                                    $$v\n                                  )\n                                },\n                                expression: \"formData.registrationTerms\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                : _vm._e()\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"row mt-4\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\"base-select\", {\n                    attrs: {\n                      options: _vm.preRequisite.guestLayoutDesigns,\n                      label: _vm.$t(\"config.auth.guest_layout_design\"),\n                      \"allow-empty\": false,\n                      simple: \"\",\n                      disabled: _vm.isLoading\n                    },\n                    model: {\n                      value: _vm.formData.guestLayoutDesign,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"guestLayoutDesign\", $$v)\n                      },\n                      expression: \"formData.guestLayoutDesign\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\"base-select\", {\n                    attrs: {\n                      options: _vm.preRequisite.guestLayoutColors,\n                      label: _vm.$t(\"config.auth.guest_layout_color\"),\n                      \"allow-empty\": false,\n                      simple: \"\",\n                      disabled: _vm.isLoading\n                    },\n                    model: {\n                      value: _vm.formData.guestLayoutColor,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"guestLayoutColor\", $$v)\n                      },\n                      expression: \"formData.guestLayoutColor\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\"base-input\", {\n                    attrs: {\n                      label:\n                        _vm.$t(\"config.auth.session_lifetime\") +\n                        \" (\" +\n                        _vm.$t(\"list.general.durations.m\") +\n                        \")\",\n                      type: \"text\",\n                      error: _vm.formErrors.sessionLifetime\n                    },\n                    on: {\n                      \"update:error\": function($event) {\n                        return _vm.$set(\n                          _vm.formErrors,\n                          \"sessionLifetime\",\n                          $event\n                        )\n                      }\n                    },\n                    model: {\n                      value: _vm.formData.sessionLifetime,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formData, \"sessionLifetime\", $$v)\n                      },\n                      expression: \"formData.sessionLifetime\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-md-4 mb-4\" },\n                [\n                  _c(\"base-input\", {\n                    attrs: {\n                      label:\n                        _vm.$t(\"config.auth.reset_password_token_lifetime\") +\n                        \" (\" +\n                        _vm.$t(\"list.general.durations.m\") +\n                        \")\",\n                      type: \"text\",\n                      error: _vm.formErrors.resetPasswordTokenLifetime\n                    },\n                    on: {\n                      \"update:error\": function($event) {\n                        return _vm.$set(\n                          _vm.formErrors,\n                          \"resetPasswordTokenLifetime\",\n                          $event\n                        )\n                      }\n                    },\n                    model: {\n                      value: _vm.formData.resetPasswordTokenLifetime,\n                      callback: function($$v) {\n                        _vm.$set(\n                          _vm.formData,\n                          \"resetPasswordTokenLifetime\",\n                          $$v\n                        )\n                      },\n                      expression: \"formData.resetPasswordTokenLifetime\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"collapse-transition\", [\n                _vm.formData.lockScreen\n                  ? _c(\n                      \"div\",\n                      { staticClass: \"col-12 col-md-4 mb-4\" },\n                      [\n                        _c(\"base-input\", {\n                          attrs: {\n                            label:\n                              _vm.$t(\"config.auth.lock_screen_timeout\") +\n                              \" (\" +\n                              _vm.$t(\"list.general.durations.m\") +\n                              \")\",\n                            type: \"text\",\n                            error: _vm.formErrors.lockScreenTimeout\n                          },\n                          on: {\n                            \"update:error\": function($event) {\n                              return _vm.$set(\n                                _vm.formErrors,\n                                \"lockScreenTimeout\",\n                                $event\n                              )\n                            }\n                          },\n                          model: {\n                            value: _vm.formData.lockScreenTimeout,\n                            callback: function($$v) {\n                              _vm.$set(_vm.formData, \"lockScreenTimeout\", $$v)\n                            },\n                            expression: \"formData.lockScreenTimeout\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ]),\n              _vm._v(\" \"),\n              _c(\"collapse-transition\", [\n                _vm.formData.loginThrottle\n                  ? _c(\n                      \"div\",\n                      {\n                        key: \"login_throttle_attempt\",\n                        staticClass: \"col-12 col-md-4 mb-4\"\n                      },\n                      [\n                        _c(\"base-input\", {\n                          attrs: {\n                            label: _vm.$t(\"config.auth.login_throttle_attempt\"),\n                            type: \"text\",\n                            error: _vm.formErrors.loginThrottleAttempt\n                          },\n                          on: {\n                            \"update:error\": function($event) {\n                              return _vm.$set(\n                                _vm.formErrors,\n                                \"loginThrottleAttempt\",\n                                $event\n                              )\n                            }\n                          },\n                          model: {\n                            value: _vm.formData.loginThrottleAttempt,\n                            callback: function($$v) {\n                              _vm.$set(\n                                _vm.formData,\n                                \"loginThrottleAttempt\",\n                                $$v\n                              )\n                            },\n                            expression: \"formData.loginThrottleAttempt\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ]),\n              _vm._v(\" \"),\n              _c(\"collapse-transition\", [\n                _vm.formData.loginThrottle\n                  ? _c(\n                      \"div\",\n                      {\n                        key: \"login_throttle_timeout\",\n                        staticClass: \"col-12 col-md-4 mb-4\"\n                      },\n                      [\n                        _c(\"base-input\", {\n                          attrs: {\n                            label: _vm.$t(\"config.auth.login_throttle_timeout\"),\n                            type: \"text\",\n                            error: _vm.formErrors.loginThrottleTimeout\n                          },\n                          on: {\n                            \"update:error\": function($event) {\n                              return _vm.$set(\n                                _vm.formErrors,\n                                \"loginThrottleTimeout\",\n                                $event\n                              )\n                            }\n                          },\n                          model: {\n                            value: _vm.formData.loginThrottleTimeout,\n                            callback: function($$v) {\n                              _vm.$set(\n                                _vm.formData,\n                                \"loginThrottleTimeout\",\n                                $$v\n                              )\n                            },\n                            expression: \"formData.loginThrottleTimeout\"\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  : _vm._e()\n              ]),\n              _vm._v(\" \"),\n              _c(\"collapse-transition\", [\n                _vm.formData.socialLogin\n                  ? _c(\n                      \"table\",\n                      { staticClass: \"table table-striped\" },\n                      _vm._l(_vm.preRequisite.socialLoginProviders, function(\n                        method\n                      ) {\n                        return _c(\"tr\", { key: method.uuid }, [\n                          _c(\n                            \"td\",\n                            { staticClass: \"va-bottom\" },\n                            [\n                              _c(\n                                \"switch-wrapper\",\n                                {\n                                  attrs: {\n                                    label:\n                                      _vm.$t(\"config.auth.login_with\") +\n                                      \" \" +\n                                      method.name\n                                  }\n                                },\n                                [\n                                  _c(\"base-switch\", {\n                                    model: {\n                                      value: _vm.formData[method.uuid],\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.formData, method.uuid, $$v)\n                                      },\n                                      expression: \"formData[method.uuid]\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"td\",\n                            [\n                              _c(\"base-input\", {\n                                attrs: {\n                                  disabled: !_vm.formData[method.uuid],\n                                  label: _vm.$t(\"config.auth.client_id\"),\n                                  type: \"text\",\n                                  error:\n                                    _vm.formErrors[method.uuid + \"ClientId\"]\n                                },\n                                on: {\n                                  \"update:error\": function($event) {\n                                    return _vm.$set(\n                                      _vm.formErrors,\n                                      method.uuid + \"ClientId\",\n                                      $event\n                                    )\n                                  }\n                                },\n                                model: {\n                                  value: _vm.formData[method.uuid + \"ClientId\"],\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.formData,\n                                      method.uuid + \"ClientId\",\n                                      $$v\n                                    )\n                                  },\n                                  expression:\n                                    \"formData[`${method.uuid}ClientId`]\"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"td\",\n                            [\n                              _c(\"base-input\", {\n                                attrs: {\n                                  disabled: !_vm.formData[method.uuid],\n                                  label: _vm.$t(\"config.auth.client_secret\"),\n                                  type: \"text\",\n                                  error:\n                                    _vm.formErrors[method.uuid + \"ClientSecret\"]\n                                },\n                                on: {\n                                  \"update:error\": function($event) {\n                                    return _vm.$set(\n                                      _vm.formErrors,\n                                      method.uuid + \"ClientSecret\",\n                                      $event\n                                    )\n                                  }\n                                },\n                                model: {\n                                  value:\n                                    _vm.formData[method.uuid + \"ClientSecret\"],\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.formData,\n                                      method.uuid + \"ClientSecret\",\n                                      $$v\n                                    )\n                                  },\n                                  expression:\n                                    \"formData[`${method.uuid}ClientSecret`]\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ])\n                      }),\n                      0\n                    )\n                  : _vm._e()\n              ])\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"text-right mt-5\" },\n            [\n              _c(\n                \"base-button\",\n                {\n                  attrs: { type: \"button\", design: \"light\" },\n                  on: { click: _vm.reset }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"general.reset\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"base-button\",\n                { attrs: { type: \"submit\", design: \"primary\" } },\n                [_vm._v(_vm._s(_vm.$t(\"general.save\")))]\n              )\n            ],\n            1\n          )\n        ]\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { mapGetters, mapActions } from 'vuex'\nimport * as ConfigAPI from '@api/config'\nimport { formatKeysToSnakeCase } from '@js/core/utils/formatter'\n\nexport default {\n    components: {},\n    data() {\n        return {\n            formData: {},\n            formErrors: {},\n            initialFormData: null,\n            initianLength: 0,\n            emptyFormData: null,\n            entity: null,\n            preRequisite: {},\n            isLoading: true,\n            useUserPreference: false,\n            dataType: null,\n            configType: '',\n        }\n    },\n    computed: {\n        ...mapGetters('config', {\n            configsWithPreference: 'configs',\n            configs: 'configsOriginal',\n            vars: 'vars',\n            allowExtraInput: 'allowExtraInput',\n        }),\n        formHasErrors() {\n            let ans = false\n            this.formErrors.objForEach(er => {\n                ans = er !== '' ? true : ans\n            })\n            return ans\n        },\n    },\n    methods: {\n        ...mapActions('config', [\n            'GetConfig',\n        ]),\n        ...mapActions('user', [\n            'GetUser',\n        ]),\n        ...mapActions('navigation', [\n            'Generate',\n        ]),\n        ...mapActions('common', [\n            'Custom',\n        ]),\n        findActualValue(value, options, key = 'uuid') {\n            return options.find(option => option[key] === value) || null\n        },\n        submit(preference = false) {\n            if(formUtil.isUnchanged(this.initialFormData, this.formData)) {\n                this.$toasted.info(this.$t('general.nothing_changed'), this.$toastConfig.info)\n                return false\n            }\n\n            this.isLoading = true\n\n            if(this.formData.hasOwnProperty('type')) {\n                this.formData.type = this.formData.type.snakeCase()\n            }\n\n            const storeFn = preference === true || this.useUserPreference ? ConfigAPI.updateUserPref : (this.configType === 'module' ? ConfigAPI.updateModule : ConfigAPI.update)\n\n            if (this.beforeSubmit && typeof this.beforeSubmit === \"function\") {\n                const shouldProceed = this.beforeSubmit()\n                if(shouldProceed === false) {\n                    this.isLoading = false\n                    return\n                }\n            }\n\n            storeFn(this.formData)\n                .then(response => {\n                    const fnToCall = preference === true || this.useUserPreference ? this.GetUser : this.GetConfig\n                    fnToCall()\n                        .then(() => {\n                            this.$toasted.success(response.message, this.$toastConfig)\n                            this.initialFormData = _.cloneDeep(this.formData)\n                            this.isLoading = false\n                        })\n                        .catch(error => {\n                            this.isLoading = false\n                            this.formErrors = formUtil.handleErrors(error)\n                        })\n\n                    if (typeof this.afterSubmit === \"function\") {\n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitSuccess === \"function\") {\n                        this.afterSubmitSuccess()\n                    }\n                })\n                .catch(error => {\n                    this.isLoading = false\n                    this.formErrors = formUtil.handleErrors(error)\n\n                    if (typeof this.afterSubmit === \"function\") {\n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitError === \"function\") {\n                        this.afterSubmitError()\n                    }\n                })\n        },\n        reset() {\n            formUtil.confirmAction()\n                .then((result) => {\n                    if (result.value) {\n                        this.formData = Object.assign({}, this.formData, _.cloneDeep(this.initialFormData))\n                    }\n                })\n        },\n        unsavedCheck(next) {\n            formUtil.unsavedCheckAlert(this.initialFormData, this.formData, next)\n        },\n        fillPreRequisite(response) {\n            this.preRequisite.objForEach((value, key) => {\n                this.preRequisite[key] = response.hasOwnProperty(key) ? response[key] : value\n            })\n\n            this.isLoading = false\n        },\n        fillFormData() {\n            this.isLoading = true\n            const configsToUse = this.useUserPreference ? this.configsWithPreference : this.configs\n            if(this.formData.type && configsToUse[this.formData.type]) {\n                this.formData = formUtil.assignValues(this.formData, configsToUse[this.formData.type])\n            }\n\n            if(this.formData.types && Array.isArray(this.formData.types)) {\n                this.formData.types.forEach((value) => {\n                    this.formData = formUtil.assignValues(this.formData, configsToUse[value])\n                })\n            }\n\n            if(this.formData.override) {\n                this.formData.objForEach((value, key) => {\n                    if(value && _.isObject(value)) {\n                        this.formData[key] = formUtil.assignValues(this.formData[key], configsToUse[key])\n                    } else {\n                        this.formData[key] = configsToUse[key] ? configsToUse[key] : value\n                    }\n                })\n            }\n\n            if (typeof this.addNewRow === \"function\" && typeof this.addNewRowIfNone === \"function\") {\n                this.addNewRowIfNone()\n            }\n\n            this.isLoading = false\n        },\n        async getInitialData(callbackFn) {\n            this.isLoading = true\n            try {\n                const response = await ConfigAPI.getPreRequisite(Object.keys(this.preRequisite).join(','))\n                this.fillPreRequisite(response)\n\n                if(callbackFn) {\n                    this.$nextTick(() => {\n                        callbackFn()\n                    })\n                }\n                return response\n            } catch (error) {\n                this.isLoading = false\n                this.formErrors = formUtil.handleErrors(error)\n                throw error\n            }\n        },\n    },\n    mounted() {\n        this.fillFormData()\n        this.initialFormData = _.cloneDeep(this.formData)\n    },\n    beforeDestroy () {\n        delete this.formData\n        delete this.formErrors\n        delete this.preRequisite\n    },\n    beforeRouteLeave(to, from, next) {\n        this.unsavedCheck(next)\n    }\n}\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=b9485eea&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('b9485eea')) {\n      api.createRecord('b9485eea', component.options)\n    } else {\n      api.reload('b9485eea', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=b9485eea&\", function () {\n      api.rerender('b9485eea', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/app/config/authentication/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=b9485eea&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BA;AAgCA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAzBA;AA+BA;AAhEA;AAmEA;AACA;AACA;AACA;AA5EA;;;;;;;;;;;;AC7IA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9rBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAaaA;AACA;AAdA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAvIA;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApLA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}