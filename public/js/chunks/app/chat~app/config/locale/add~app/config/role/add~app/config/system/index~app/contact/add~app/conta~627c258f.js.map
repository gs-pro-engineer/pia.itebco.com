{"version":3,"file":"js/chunks/app/chat~app/config/locale/add~app/config/role/add~app/config/system/index~app/contact/add~app/conta~627c258f.js?id=3de15ab8ef7e0b830f89","sources":["webpack:///FileUploader.vue","webpack:///./resources/js/components/FileUploader.vue?7f04","webpack:///./resources/js/api/uploader.js","webpack:///./resources/js/components/FileUploader.vue","webpack:///./resources/js/components/FileUploader.vue?a564","webpack:///./resources/js/components/FileUploader.vue?702f"],"sourcesContent":["<template>\n    <div class=\"sm-uploader file-uploader\">\n\n        <div class=\"file-uploader-form\">\n            <div :class=\"['file-selector d-flex', buttonWrapperClasses]\">\n                <h5 v-if=\"heading\" :class=\"['title-desc', headingClasses]\">\n                    {{ heading }}\n                </h5>\n\n                <label :class=\"['btn', `btn-${buttonDesign}`, buttonClasses]\">\n                    <input name=\"filesInput\" type=\"file\" ref=\"filesInput\" id=\"filesInput\" @change=\"generateFilesList\" class=\"selector-input\" :multiple=\"multiple\">\n                    <span class=\"button-icon\"><i :class=\"buttonIcon\"></i></span> <span class=\"button-label\" v-if=\"!hideButtonLabel\">{{ $t(computedActionLabel, { attribute: $t(namesLabel)}) }}</span> <span class=\"button-label bracketed\" v-if=\"showSelectedFilesCount && files.length\">{{ files.length }}</span>\n                </label>\n\n                <button v-if=\"hideFileList && !hideResetButton && files.length\" type=\"button\" :class=\"['btn', `btn-${buttonDesign}`, buttonClasses]\" @click=\"reset\"><span class=\"button-icon\"><i class=\"fas fa-times\"></i></span></button>\n            </div>\n        </div>\n\n        <div :class=\"['files-list-wrapper', {'d-none': hideFileList}]\" v-if=\"existingFiles.length || uploadedFiles.length || files.length\">\n            <ul class=\"files-list\">\n\n\n                <li class=\"file-details-row\" v-for=\"(fileObj, index) in existingFiles\" :key=\"fileObj.uuid\">\n                    <div class=\"file-icon\">\n                        <span><i :class=\"['far', getFileIcon(fileObj.mime)]\"></i></span>\n                    </div>\n                    <div class=\"file-details\">\n                        <h6>{{ fileObj.filename }}</h6>\n                        <p class=\"text-danger\" v-if=\"fileObj.error\">\n                            {{ fileObj.error }}\n                        </p>\n                        <p v-else>\n                            <span><span class=\"font-weight-700\">{{ $t('upload.type') }}</span>: {{ mimeTypes[fileObj.mime] || fileObj.mime || 'Unknown' }}</span>\n                            <span class=\"ml-1\"><span class=\"font-weight-700\">{{ $t('upload.size') }}</span>: {{ (fileObj.size / 1024) | decimal(0) }} KB</span>\n                        </p>\n                    </div>\n                    <div :class=\"['status-wrapper', {'actions-wrapper': !fileObj.status || fileObj.status === 'removeError'}]\">\n\n                        <transition appear tag=\"div\" name=\"actions\" class=\"transition-wrapper\" mode=\"out-in\">\n\n                            <div class=\"status-removed-wrapper\" v-if=\"fileObj.status === 'removed'\">\n                                <label class=\"status-text text-danger\">Removed!</label>\n                                <span class=\"status-icon text-danger\"><i class=\"fas fa-trash\"></i></span>\n                            </div>\n\n                            <div class=\"actions-buttons\" v-else-if=\"!fileObj.status || fileObj.status === 'removeError'\">\n\n                                <label class=\"status-text text-danger\" v-if=\"fileObj.status === 'removeError'\">Error!</label>\n                                <span class=\"status-icon text-danger\" v-if=\"fileObj.status === 'removeError'\"><i class=\"fas fa-exclamation-triangle\"></i></span>\n\n                                <a class=\"download-btn\" :href=\"fileObj.fullUrl\" target=\"_blank\" v-b-tooltip.hover.left :title=\"$t('global.download', { attribute: $t(nameLabel)})\"><i class=\"fas fa-download\"></i></a>\n\n                                <button type=\"button\" class=\"remove-btn\" @click=\"removeFile(fileObj, index, true)\" v-b-tooltip.hover.left :title=\"$t('global.remove', { attribute: $t(nameLabel)})\"><i class=\"fas fa-trash\"></i></button>\n                            </div>\n                        </transition>\n                    </div>\n                </li>\n\n\n                <li class=\"file-details-row\" v-for=\"(fileObj, index) in uploadedFiles\" :key=\"fileObj.uuid\">\n                    <div class=\"file-icon\">\n                        <span><i :class=\"['far', getFileIcon(fileObj.mime)]\"></i></span>\n                    </div>\n                    <div class=\"file-details\">\n                        <h6>{{ fileObj.filename }}</h6>\n                        <p class=\"text-danger\" v-if=\"fileObj.error\">\n                            {{ fileObj.error }}\n                        </p>\n                        <p v-else>\n                            <span><span class=\"font-weight-700\">{{ $t('upload.type') }}</span>: {{ mimeTypes[fileObj.mime] || fileObj.mime || 'Unknown' }}</span>\n                            <span class=\"ml-1\"><span class=\"font-weight-700\">{{ $t('upload.size') }}</span>: {{ (fileObj.size / 1024) | decimal(0) }} KB</span>\n                        </p>\n                    </div>\n                    <div :class=\"['status-wrapper', {'actions-wrapper': !fileObj.status || fileObj.status === 'removeError'}]\">\n\n                        <transition appear tag=\"div\" name=\"actions\" class=\"transition-wrapper\" mode=\"out-in\">\n\n                            <div class=\"status-removed-wrapper\" v-if=\"fileObj.status === 'removed'\">\n                                <label class=\"status-text text-danger\">Removed!</label>\n                                <span class=\"status-icon text-danger\"><i class=\"fas fa-trash\"></i></span>\n                            </div>\n\n                            <div class=\"actions-buttons\" v-else-if=\"!fileObj.status || fileObj.status === 'removeError'\">\n\n                                <label class=\"status-text text-danger\" v-if=\"fileObj.status === 'removeError'\">Error!</label>\n                                <span class=\"status-icon text-danger\" v-if=\"fileObj.status === 'removeError'\"><i class=\"fas fa-exclamation-triangle\"></i></span>\n\n                                <a class=\"download-btn\" :href=\"fileObj.fullUrl\" target=\"_blank\" v-b-tooltip.hover.left :title=\"$t('global.download', { attribute: $t(nameLabel)})\"><i class=\"fas fa-download\"></i></a>\n\n                                <button type=\"button\" class=\"remove-btn\" @click=\"removeFile(fileObj, index, true)\" v-b-tooltip.hover.left :title=\"$t('global.remove', { attribute: $t(nameLabel)})\"><i class=\"fas fa-trash\"></i></button>\n                            </div>\n                        </transition>\n                    </div>\n                </li>\n\n\n\n                <li class=\"file-details-row\" v-for=\"(fileObj, index) in files\" :key=\"index\">\n                    <div class=\"file-icon\">\n                        <span><i :class=\"['far', getFileIcon(fileObj.file.type)]\"></i></span>\n                    </div>\n                    <div class=\"file-details\">\n                        <h6>{{ fileObj.file.name }}</h6>\n                        <p class=\"text-danger\" v-if=\"fileObj.error\">\n                            {{ fileObj.error }}\n                        </p>\n                        <p v-else>\n                            <span><span class=\"font-weight-700\">{{ $t('upload.type') }}</span>: {{ mimeTypes[fileObj.file.type] || 'Unknown' }}</span>\n                            <span class=\"ml-1\"><span class=\"font-weight-700\">{{ $t('upload.size') }}</span>: {{ (fileObj.file.size / 1024) | decimal(0) }} KB</span>\n                        </p>\n                    </div>\n                    <div :class=\"['status-wrapper', {'actions-wrapper': fileObj.status === 'uploaded' || fileObj.status === 'removeError'}]\">\n\n                        <transition appear tag=\"div\" name=\"actions\" class=\"transition-wrapper\" mode=\"out-in\">\n                            <div class=\"status-uploading-wrapper\" v-if=\"fileObj.status === 'uploading'\">\n                                <label class=\"status-action\" @click=\"fileObj.cancel\">{{ $t('general.cancel') }}</label>\n                                <progress-ring :value=\"fileObj.progress\" :stroke-color=\"vars.loaderColor\" />\n                            </div>\n\n                            <div class=\"status-uploaded-wrapper\" v-else-if=\"fileObj.status === 'justUploaded'\">\n                                <label class=\"status-text text-success\">Uploaded!</label>\n                                <span class=\"status-icon text-success\"><i class=\"fas fa-check\"></i></span>\n                            </div>\n\n                            <div class=\"status-cancelled-wrapper\" v-else-if=\"fileObj.status === 'cancelled'\">\n                                <label class=\"status-text text-danger\">Cancelled!</label>\n                                <span class=\"status-icon text-danger\"><i class=\"fas fa-times\"></i></span>\n                            </div>\n\n                            <div class=\"status-removed-wrapper\" v-else-if=\"fileObj.status === 'removed'\">\n                                <label class=\"status-text text-danger\">Removed!</label>\n                                <span class=\"status-icon text-danger\"><i class=\"fas fa-trash\"></i></span>\n                            </div>\n\n                            <div class=\"status-error-wrapper\" v-else-if=\"fileObj.status === 'error'\">\n                                <label class=\"status-text text-danger\">Error!</label>\n                                <span class=\"status-icon text-danger\"><i class=\"fas fa-exclamation-triangle\"></i></span>\n                            </div>\n\n                            <div class=\"actions-buttons\" v-else-if=\"fileObj.status === 'uploaded' || fileObj.status === 'removeError'\">\n\n                                <label class=\"status-text text-danger\" v-if=\"fileObj.status === 'removeError'\">Error!</label>\n                                <span class=\"status-icon text-danger\" v-if=\"fileObj.status === 'removeError'\"><i class=\"fas fa-exclamation-triangle\"></i></span>\n\n                                <label class=\"status-text text-success\" v-else-if=\"fileObj.status === 'uploaded'\">Uploaded!</label>\n\n                                <button type=\"button\" class=\"remove-btn\" @click=\"removeFile(fileObj, index)\" v-b-tooltip.hover.left :title=\"$t('global.remove', { attribute: $t(nameLabel)})\"><i class=\"fas fa-trash\"></i></button>\n                            </div>\n                        </transition>\n                    </div>\n                </li>\n\n\n            </ul>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import * as UploaderAPI from '@api/uploader'\n    import { mapGetters, mapActions } from 'vuex'\n    import { v4 as uuid } from 'uuid'\n    import EventBus from '@js/event-bus'\n    import { fileIcons, fileMimeTypes } from '@js/vars'\n\n    // file.status   v-if=\"fileObj.status === 'uploading'\"\n    // 0 = uploaded false\n    // 1 = uploaded\n    // 2 = uploading\n    // 3 = existing\n    // 4 = removed\n    //\n    //\n    // handle error in ui\n    // remove File\n    // handle existing uploaded files\n    // check uuid\n\n    export default {\n        name: \"file-uploader\",\n        components: {\n        },\n        props: {\n            data: {\n                type: Array,\n                default () {\n                    return []\n                }\n            },\n            additionalFormData: {\n                type: Object,\n                default () {\n                    return {}\n                }\n            },\n            requestIdentifier: {\n                type: String,\n                default: uuid(),\n            },\n            url: {\n                type: String,\n                default: '/uploads',\n            },\n            heading: {\n                type: String,\n                default: null,\n            },\n            actionLabel: {\n                type: String,\n                default: 'global.choose',\n            },\n            nameLabel: {\n                type: String,\n                default: 'upload.file',\n            },\n            namesLabel: {\n                type: String,\n                default: 'upload.files',\n            },\n            buttonWrapperClasses: {\n                type: String,\n                default: 'justify-content-start',\n            },\n            headingClasses: {\n                type: String,\n                default: 'mb-0',\n            },\n            buttonClasses: {\n                type: String,\n                default: '',\n            },\n            buttonIcon: {\n                type: String,\n                default: 'fas fa-upload',\n            },\n            buttonDesign: {\n                type: String,\n                default: 'primary',\n            },\n            options: {\n                type: Object,\n                required: true,\n            },\n            autoUpload: {\n                type: Boolean,\n                default: true,\n            },\n            multiple: {\n                type: Boolean,\n                default: true,\n            },\n            hideButtonLabel: {\n                type: Boolean,\n                default: false,\n            },\n            hideFileList: {\n                type: Boolean,\n                default: false,\n            },\n            hideResetButton: {\n                type: Boolean,\n                default: false,\n            },\n            hideAfterUpload: {\n                type: Boolean,\n                default: true,\n            },\n            showSelectedFilesCount: {\n                type: Boolean,\n                default: false,\n            },\n        },\n        data() {\n            return {\n                isLoading: false,\n                fileRemoved: false,\n                actionLabelUpdated: '',\n                files: [],\n                uploadedFiles: [],\n                existingFiles: [],\n                icons: fileIcons,\n                mimeTypes: fileMimeTypes,\n            }\n        },\n        computed: {\n            ...mapGetters('config', [\n                'configs',\n                'vars',\n            ]),\n            computedActionLabel() {\n                return this.existingFile ? 'global.change' : this.actionLabel\n            },\n        },\n        watch: {\n            data(v) {\n                this.existingFiles = v.map(f => {\n                    return { ...f, status: null }\n                })\n            },\n            'options.uuid': {\n                deep: true,\n                handler(val, oldVal) {\n                    if(val && val !== oldVal) {\n                        this.reset()\n                    }\n                }\n            }\n        },\n        methods: {\n            getFileIcon(type) {\n                return this.icons[type] || 'fa-file-alt'\n            },\n            getFileNameIcon(type) {\n                return this.icons[type] || 'fa-file-alt'\n            },\n            generateFilesList(e) {\n                this.isLoading = true\n                let allowedExtensions = null\n                const selectedFiles = this.$refs.filesInput.files\n\n                if (this.options.allowedExtensions) {\n                    if(! _.isArray(this.options.allowedExtensions)) {\n                        this.options.allowedExtensions = this.options.allowedExtensions.split(\",\");\n                        this.options.allowedExtensions.push('json');\n                    }\n                    allowedExtensions = new RegExp('(\\.' + this.options.allowedExtensions.join('|\\.') + ')$')\n                }\n\n                if(this.options.maxNoOfFiles && (selectedFiles.length + this.existingFiles.length) > this.options.maxNoOfFiles) {\n                    this.$toasted.error(this.$t('upload.max_file_limit_crossed', { number: this.options.maxNoOfFiles }), this.$toastConfig.error)\n                    return\n                }\n\n                for (let i = 0; i < selectedFiles.length; i++) {\n\n                    if (allowedExtensions && !allowedExtensions.test(selectedFiles[i].name)) {\n\n                        this.isLoading = false\n                        this.$toasted.error(this.$t('global.file_not_supported', { attribute: selectedFiles[i].name.split('.').pop() }), this.$toastConfig.error)\n\n                    } else if (selectedFiles[i].size > this.configs.system.postMaxSize) {\n\n                        this.isLoading = false\n                        this.$toasted.error(this.$t('global.file_too_large', { attribute: selectedFiles[i].name }), this.$toastConfig.error)\n\n                    } else {\n                        this.files.push({\n                            uuid: uuid(),\n                            file: selectedFiles[i],\n                            status: 'waiting',\n                            progress: 0,\n                        })\n                    }\n                }\n\n                this.isLoading = false\n\n                this.$emit('selected', this.files.length)\n\n                if(this.autoUpload) {\n                    this.startUploading()\n                }\n            },\n            startUploading() {\n                const filesToUpload = this.files.filter(fileObj => fileObj.status === 'waiting')\n\n                if (filesToUpload.length) {\n                    let onUploadProgressArr = []\n                    const CancelToken = axios.CancelToken\n\n                    this.$emit('uploading', this.files.length)\n\n                    for (let i = 0; i < this.files.length; i++) {\n                        const uploadObj = this.files[i]\n                        onUploadProgressArr[i] = (progressEvent) => {\n                            uploadObj.progress = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n                        }\n\n                        if (uploadObj.status === 'waiting') {\n                            let formData = new FormData()\n                            formData.append('file', uploadObj.file)\n                            formData.append('mime', uploadObj.file.type)\n                            formData.append('token', this.options.token)\n                            formData.append('module', this.options.module)\n                            formData.append('request_uuid', this.requestIdentifier)\n\n                            formData.append('first_attachment', i === 0)\n                            formData.append('last_attachment', i === (this.files.length-1))\n\n                            this.additionalFormData.objForEach((value, key) => {\n                                if(value) {\n                                    if(_.isObject(value)) {\n                                        formData.append(key.snakeCase(), JSON.stringify(value))\n                                    } else {\n                                        formData.append(key.snakeCase(), value)\n                                    }\n                                }\n                            })\n\n                            uploadObj.status = 'uploading'\n\n                            let cancelToken = new CancelToken(c => {\n                                uploadObj.cancel = c;\n                            })\n\n                            UploaderAPI.uploadFile({\n                                    url: this.url,\n                                    data: formData\n                                }, onUploadProgressArr[i], cancelToken)\n                                .then(response => {\n                                    if(response.upload) {\n                                        this.uploadedFiles.push(response.upload)\n                                    } else if(response.attachments) {\n                                        this.uploadedFiles.push(response.attachments)\n                                    }\n                                    uploadObj.uuid = response.upload ? response.upload.uuid : response.uuid\n                                    uploadObj.status = 'justUploaded'\n                                    delete uploadObj.cancel\n\n\n                                    setTimeout(() => {\n                                        uploadObj.status = 'uploaded'\n                                        if(this.hideAfterUpload) {\n                                            delete this.files.splice(this.files.findIndex(f => f.uuid === uploadObj.uuid), 1);\n                                        }\n                                    }, 2000)\n                                    this.$emit('updated', response)\n                                    this.checkUploadStatus(response)\n                                })\n                                .catch(thrown => {\n                                    this.$emit('error', {\n                                        ...thrown,\n                                        requestUuid: this.requestIdentifier\n                                    })\n                                    if (thrown.response && thrown.response.data) {\n                                        const data = thrown.response.data || {}\n                                        const errors = data.errors ? formUtil.assignErrors(data.errors) : {}\n                                        uploadObj.error = errors.message\n                                        this.$toasted.error(errors.message, this.$toastConfig.error)\n                                        uploadObj.status = 'error'\n                                        setTimeout(() => {\n                                            delete this.files.splice(this.files.findIndex(f => f.uuid === uploadObj.uuid), 1);\n                                        }, 3000)\n                                        this.$emit('updated', {\n                                            ...thrown,\n                                            requestUuid: this.requestIdentifier\n                                        })\n                                        this.checkUploadStatus()\n                                    } else {\n                                        uploadObj.status = 'cancelled'\n                                        setTimeout(() => {\n                                            delete this.files.splice(this.files.findIndex(f => f.uuid === uploadObj.uuid), 1);\n                                        }, 3000)\n                                    }\n                                })\n                        }\n                    }\n                }\n            },\n            removeFile(fileObj, index, existing = false) {\n                formUtil.confirmAction()\n                    .then((result) => {\n                        if (result.value) {\n                            this.isLoading = true\n                            UploaderAPI.removeFile({\n                                    url: this.url + '/' + fileObj.uuid,\n                                    data: {\n                                        token: this.options.token,\n                                        module: this.options.module,\n                                    }\n                                })\n                                .then(response => {\n                                    fileObj.status = 'removed'\n                                    setTimeout(() => {\n                                        if(existing) {\n                                            delete this.existingFiles.splice(this.existingFiles.findIndex(f => f.uuid === fileObj.uuid), 1)\n                                        } else {\n                                            delete this.files.splice(this.files.findIndex(f => f.uuid === fileObj.uuid), 1)\n                                        }\n                                    }, 3000)\n                                    this.isLoading = false\n                                    this.$toasted.success(response.message, this.$toastConfig.success)\n                                    this.$emit('selected', this.files.length)\n                                    this.$emit('updated', response)\n                                    this.checkUploadStatus()\n                                })\n                                .catch(thrown => {\n                                    const data = thrown.response.data || {}\n                                    const errors = data.errors ? formUtil.assignErrors(data.errors) : {}\n                                    this.$toasted.error(errors.message, this.$toastConfig.error)\n                                    fileObj.error = errors.message\n                                    fileObj.status = 'removeError'\n                                })\n                        }\n                    })\n            },\n            checkUploadStatus(response) {\n                let status = true\n                for (let i = 0; i < this.files.length; i++) {\n                    if(this.files[i].status !== 'justUploaded' && this.files[i].status !== 'uploaded') {\n                        status = false\n                    }\n                }\n                if(status) {\n                    this.$emit('uploaded', this.uploadedFiles)\n                } else {\n                    this.$emit('error', {\n                                        requestUuid: this.requestIdentifier\n                                    })\n                }\n            },\n            reset() {\n                this.isLoading = false\n                this.fileRemoved = false\n                this.actionLabelUpdated = ''\n                this.files = []\n                this.uploadedFiles = []\n                const input = this.$refs.filesInput\n                input.type = 'text'\n                input.type = 'file'\n                this.$emit('selected', this.files.length)\n            },\n            startUpload() {\n                if(this.files.length) {\n                    this.startUploading()\n                } else {\n                    this.$emit('noNeed')\n                }\n            },\n        },\n        mounted() {\n            EventBus.$off('START_UPLOAD', this.startUpload)\n            EventBus.$on('START_UPLOAD', this.startUpload)\n            EventBus.$off('RESET_UPLOAD', this.reset)\n            EventBus.$on('RESET_UPLOAD', this.reset)\n            this.existingFiles = this.data.map(f => {\n                return { ...f, status: null }\n            })\n        },\n        filters: {\n            decimal(value, num = 2) {\n                return Number(value).toFixed(num)\n            }\n        },\n        destroyed() {\n            EventBus.$off('START_UPLOAD', this.startUpload)\n            EventBus.$off('RESET_UPLOAD', this.reset)\n        },\n    }\n\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"sm-uploader file-uploader\" }, [\n    _c(\"div\", { staticClass: \"file-uploader-form\" }, [\n      _c(\"div\", { class: [\"file-selector d-flex\", _vm.buttonWrapperClasses] }, [\n        _vm.heading\n          ? _c(\"h5\", { class: [\"title-desc\", _vm.headingClasses] }, [\n              _vm._v(\n                \"\\n                \" + _vm._s(_vm.heading) + \"\\n            \"\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\n          \"label\",\n          { class: [\"btn\", \"btn-\" + _vm.buttonDesign, _vm.buttonClasses] },\n          [\n            _c(\"input\", {\n              ref: \"filesInput\",\n              staticClass: \"selector-input\",\n              attrs: {\n                name: \"filesInput\",\n                type: \"file\",\n                id: \"filesInput\",\n                multiple: _vm.multiple\n              },\n              on: { change: _vm.generateFilesList }\n            }),\n            _vm._v(\" \"),\n            _c(\"span\", { staticClass: \"button-icon\" }, [\n              _c(\"i\", { class: _vm.buttonIcon })\n            ]),\n            _vm._v(\" \"),\n            !_vm.hideButtonLabel\n              ? _c(\"span\", { staticClass: \"button-label\" }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm.$t(_vm.computedActionLabel, {\n                        attribute: _vm.$t(_vm.namesLabel)\n                      })\n                    )\n                  )\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.showSelectedFilesCount && _vm.files.length\n              ? _c(\"span\", { staticClass: \"button-label bracketed\" }, [\n                  _vm._v(_vm._s(_vm.files.length))\n                ])\n              : _vm._e()\n          ]\n        ),\n        _vm._v(\" \"),\n        _vm.hideFileList && !_vm.hideResetButton && _vm.files.length\n          ? _c(\n              \"button\",\n              {\n                class: [\"btn\", \"btn-\" + _vm.buttonDesign, _vm.buttonClasses],\n                attrs: { type: \"button\" },\n                on: { click: _vm.reset }\n              },\n              [_vm._m(0)]\n            )\n          : _vm._e()\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm.existingFiles.length || _vm.uploadedFiles.length || _vm.files.length\n      ? _c(\n          \"div\",\n          { class: [\"files-list-wrapper\", { \"d-none\": _vm.hideFileList }] },\n          [\n            _c(\n              \"ul\",\n              { staticClass: \"files-list\" },\n              [\n                _vm._l(_vm.existingFiles, function(fileObj, index) {\n                  return _c(\n                    \"li\",\n                    { key: fileObj.uuid, staticClass: \"file-details-row\" },\n                    [\n                      _c(\"div\", { staticClass: \"file-icon\" }, [\n                        _c(\"span\", [\n                          _c(\"i\", {\n                            class: [\"far\", _vm.getFileIcon(fileObj.mime)]\n                          })\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"file-details\" }, [\n                        _c(\"h6\", [_vm._v(_vm._s(fileObj.filename))]),\n                        _vm._v(\" \"),\n                        fileObj.error\n                          ? _c(\"p\", { staticClass: \"text-danger\" }, [\n                              _vm._v(\n                                \"\\n                        \" +\n                                  _vm._s(fileObj.error) +\n                                  \"\\n                    \"\n                              )\n                            ])\n                          : _c(\"p\", [\n                              _c(\"span\", [\n                                _c(\"span\", { staticClass: \"font-weight-700\" }, [\n                                  _vm._v(_vm._s(_vm.$t(\"upload.type\")))\n                                ]),\n                                _vm._v(\n                                  \": \" +\n                                    _vm._s(\n                                      _vm.mimeTypes[fileObj.mime] ||\n                                        fileObj.mime ||\n                                        \"Unknown\"\n                                    )\n                                )\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"span\", { staticClass: \"ml-1\" }, [\n                                _c(\"span\", { staticClass: \"font-weight-700\" }, [\n                                  _vm._v(_vm._s(_vm.$t(\"upload.size\")))\n                                ]),\n                                _vm._v(\n                                  \": \" +\n                                    _vm._s(\n                                      _vm._f(\"decimal\")(fileObj.size / 1024, 0)\n                                    ) +\n                                    \" KB\"\n                                )\n                              ])\n                            ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          class: [\n                            \"status-wrapper\",\n                            {\n                              \"actions-wrapper\":\n                                !fileObj.status ||\n                                fileObj.status === \"removeError\"\n                            }\n                          ]\n                        },\n                        [\n                          _c(\n                            \"transition\",\n                            {\n                              staticClass: \"transition-wrapper\",\n                              attrs: {\n                                appear: \"\",\n                                tag: \"div\",\n                                name: \"actions\",\n                                mode: \"out-in\"\n                              }\n                            },\n                            [\n                              fileObj.status === \"removed\"\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"status-removed-wrapper\" },\n                                    [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass: \"status-text text-danger\"\n                                        },\n                                        [_vm._v(\"Removed!\")]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"span\",\n                                        {\n                                          staticClass: \"status-icon text-danger\"\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\"\n                                          })\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                : !fileObj.status ||\n                                  fileObj.status === \"removeError\"\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"actions-buttons\" },\n                                    [\n                                      fileObj.status === \"removeError\"\n                                        ? _c(\n                                            \"label\",\n                                            {\n                                              staticClass:\n                                                \"status-text text-danger\"\n                                            },\n                                            [_vm._v(\"Error!\")]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      fileObj.status === \"removeError\"\n                                        ? _c(\n                                            \"span\",\n                                            {\n                                              staticClass:\n                                                \"status-icon text-danger\"\n                                            },\n                                            [\n                                              _c(\"i\", {\n                                                staticClass:\n                                                  \"fas fa-exclamation-triangle\"\n                                              })\n                                            ]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"a\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"b-tooltip\",\n                                              rawName: \"v-b-tooltip.hover.left\",\n                                              modifiers: {\n                                                hover: true,\n                                                left: true\n                                              }\n                                            }\n                                          ],\n                                          staticClass: \"download-btn\",\n                                          attrs: {\n                                            href: fileObj.fullUrl,\n                                            target: \"_blank\",\n                                            title: _vm.$t(\"global.download\", {\n                                              attribute: _vm.$t(_vm.nameLabel)\n                                            })\n                                          }\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-download\"\n                                          })\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"b-tooltip\",\n                                              rawName: \"v-b-tooltip.hover.left\",\n                                              modifiers: {\n                                                hover: true,\n                                                left: true\n                                              }\n                                            }\n                                          ],\n                                          staticClass: \"remove-btn\",\n                                          attrs: {\n                                            type: \"button\",\n                                            title: _vm.$t(\"global.remove\", {\n                                              attribute: _vm.$t(_vm.nameLabel)\n                                            })\n                                          },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.removeFile(\n                                                fileObj,\n                                                index,\n                                                true\n                                              )\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\"\n                                          })\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ]\n                  )\n                }),\n                _vm._v(\" \"),\n                _vm._l(_vm.uploadedFiles, function(fileObj, index) {\n                  return _c(\n                    \"li\",\n                    { key: fileObj.uuid, staticClass: \"file-details-row\" },\n                    [\n                      _c(\"div\", { staticClass: \"file-icon\" }, [\n                        _c(\"span\", [\n                          _c(\"i\", {\n                            class: [\"far\", _vm.getFileIcon(fileObj.mime)]\n                          })\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"file-details\" }, [\n                        _c(\"h6\", [_vm._v(_vm._s(fileObj.filename))]),\n                        _vm._v(\" \"),\n                        fileObj.error\n                          ? _c(\"p\", { staticClass: \"text-danger\" }, [\n                              _vm._v(\n                                \"\\n                        \" +\n                                  _vm._s(fileObj.error) +\n                                  \"\\n                    \"\n                              )\n                            ])\n                          : _c(\"p\", [\n                              _c(\"span\", [\n                                _c(\"span\", { staticClass: \"font-weight-700\" }, [\n                                  _vm._v(_vm._s(_vm.$t(\"upload.type\")))\n                                ]),\n                                _vm._v(\n                                  \": \" +\n                                    _vm._s(\n                                      _vm.mimeTypes[fileObj.mime] ||\n                                        fileObj.mime ||\n                                        \"Unknown\"\n                                    )\n                                )\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"span\", { staticClass: \"ml-1\" }, [\n                                _c(\"span\", { staticClass: \"font-weight-700\" }, [\n                                  _vm._v(_vm._s(_vm.$t(\"upload.size\")))\n                                ]),\n                                _vm._v(\n                                  \": \" +\n                                    _vm._s(\n                                      _vm._f(\"decimal\")(fileObj.size / 1024, 0)\n                                    ) +\n                                    \" KB\"\n                                )\n                              ])\n                            ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          class: [\n                            \"status-wrapper\",\n                            {\n                              \"actions-wrapper\":\n                                !fileObj.status ||\n                                fileObj.status === \"removeError\"\n                            }\n                          ]\n                        },\n                        [\n                          _c(\n                            \"transition\",\n                            {\n                              staticClass: \"transition-wrapper\",\n                              attrs: {\n                                appear: \"\",\n                                tag: \"div\",\n                                name: \"actions\",\n                                mode: \"out-in\"\n                              }\n                            },\n                            [\n                              fileObj.status === \"removed\"\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"status-removed-wrapper\" },\n                                    [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass: \"status-text text-danger\"\n                                        },\n                                        [_vm._v(\"Removed!\")]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"span\",\n                                        {\n                                          staticClass: \"status-icon text-danger\"\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\"\n                                          })\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                : !fileObj.status ||\n                                  fileObj.status === \"removeError\"\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"actions-buttons\" },\n                                    [\n                                      fileObj.status === \"removeError\"\n                                        ? _c(\n                                            \"label\",\n                                            {\n                                              staticClass:\n                                                \"status-text text-danger\"\n                                            },\n                                            [_vm._v(\"Error!\")]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      fileObj.status === \"removeError\"\n                                        ? _c(\n                                            \"span\",\n                                            {\n                                              staticClass:\n                                                \"status-icon text-danger\"\n                                            },\n                                            [\n                                              _c(\"i\", {\n                                                staticClass:\n                                                  \"fas fa-exclamation-triangle\"\n                                              })\n                                            ]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"a\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"b-tooltip\",\n                                              rawName: \"v-b-tooltip.hover.left\",\n                                              modifiers: {\n                                                hover: true,\n                                                left: true\n                                              }\n                                            }\n                                          ],\n                                          staticClass: \"download-btn\",\n                                          attrs: {\n                                            href: fileObj.fullUrl,\n                                            target: \"_blank\",\n                                            title: _vm.$t(\"global.download\", {\n                                              attribute: _vm.$t(_vm.nameLabel)\n                                            })\n                                          }\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-download\"\n                                          })\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"b-tooltip\",\n                                              rawName: \"v-b-tooltip.hover.left\",\n                                              modifiers: {\n                                                hover: true,\n                                                left: true\n                                              }\n                                            }\n                                          ],\n                                          staticClass: \"remove-btn\",\n                                          attrs: {\n                                            type: \"button\",\n                                            title: _vm.$t(\"global.remove\", {\n                                              attribute: _vm.$t(_vm.nameLabel)\n                                            })\n                                          },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.removeFile(\n                                                fileObj,\n                                                index,\n                                                true\n                                              )\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\"\n                                          })\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ]\n                  )\n                }),\n                _vm._v(\" \"),\n                _vm._l(_vm.files, function(fileObj, index) {\n                  return _c(\n                    \"li\",\n                    { key: index, staticClass: \"file-details-row\" },\n                    [\n                      _c(\"div\", { staticClass: \"file-icon\" }, [\n                        _c(\"span\", [\n                          _c(\"i\", {\n                            class: [\"far\", _vm.getFileIcon(fileObj.file.type)]\n                          })\n                        ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"file-details\" }, [\n                        _c(\"h6\", [_vm._v(_vm._s(fileObj.file.name))]),\n                        _vm._v(\" \"),\n                        fileObj.error\n                          ? _c(\"p\", { staticClass: \"text-danger\" }, [\n                              _vm._v(\n                                \"\\n                        \" +\n                                  _vm._s(fileObj.error) +\n                                  \"\\n                    \"\n                              )\n                            ])\n                          : _c(\"p\", [\n                              _c(\"span\", [\n                                _c(\"span\", { staticClass: \"font-weight-700\" }, [\n                                  _vm._v(_vm._s(_vm.$t(\"upload.type\")))\n                                ]),\n                                _vm._v(\n                                  \": \" +\n                                    _vm._s(\n                                      _vm.mimeTypes[fileObj.file.type] ||\n                                        \"Unknown\"\n                                    )\n                                )\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"span\", { staticClass: \"ml-1\" }, [\n                                _c(\"span\", { staticClass: \"font-weight-700\" }, [\n                                  _vm._v(_vm._s(_vm.$t(\"upload.size\")))\n                                ]),\n                                _vm._v(\n                                  \": \" +\n                                    _vm._s(\n                                      _vm._f(\"decimal\")(\n                                        fileObj.file.size / 1024,\n                                        0\n                                      )\n                                    ) +\n                                    \" KB\"\n                                )\n                              ])\n                            ])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          class: [\n                            \"status-wrapper\",\n                            {\n                              \"actions-wrapper\":\n                                fileObj.status === \"uploaded\" ||\n                                fileObj.status === \"removeError\"\n                            }\n                          ]\n                        },\n                        [\n                          _c(\n                            \"transition\",\n                            {\n                              staticClass: \"transition-wrapper\",\n                              attrs: {\n                                appear: \"\",\n                                tag: \"div\",\n                                name: \"actions\",\n                                mode: \"out-in\"\n                              }\n                            },\n                            [\n                              fileObj.status === \"uploading\"\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"status-uploading-wrapper\" },\n                                    [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass: \"status-action\",\n                                          on: { click: fileObj.cancel }\n                                        },\n                                        [\n                                          _vm._v(\n                                            _vm._s(_vm.$t(\"general.cancel\"))\n                                          )\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\"progress-ring\", {\n                                        attrs: {\n                                          value: fileObj.progress,\n                                          \"stroke-color\": _vm.vars.loaderColor\n                                        }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                : fileObj.status === \"justUploaded\"\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"status-uploaded-wrapper\" },\n                                    [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass:\n                                            \"status-text text-success\"\n                                        },\n                                        [_vm._v(\"Uploaded!\")]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"span\",\n                                        {\n                                          staticClass:\n                                            \"status-icon text-success\"\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-check\"\n                                          })\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                : fileObj.status === \"cancelled\"\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"status-cancelled-wrapper\" },\n                                    [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass: \"status-text text-danger\"\n                                        },\n                                        [_vm._v(\"Cancelled!\")]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"span\",\n                                        {\n                                          staticClass: \"status-icon text-danger\"\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-times\"\n                                          })\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                : fileObj.status === \"removed\"\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"status-removed-wrapper\" },\n                                    [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass: \"status-text text-danger\"\n                                        },\n                                        [_vm._v(\"Removed!\")]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"span\",\n                                        {\n                                          staticClass: \"status-icon text-danger\"\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\"\n                                          })\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                : fileObj.status === \"error\"\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"status-error-wrapper\" },\n                                    [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass: \"status-text text-danger\"\n                                        },\n                                        [_vm._v(\"Error!\")]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"span\",\n                                        {\n                                          staticClass: \"status-icon text-danger\"\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass:\n                                              \"fas fa-exclamation-triangle\"\n                                          })\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                : fileObj.status === \"uploaded\" ||\n                                  fileObj.status === \"removeError\"\n                                ? _c(\n                                    \"div\",\n                                    { staticClass: \"actions-buttons\" },\n                                    [\n                                      fileObj.status === \"removeError\"\n                                        ? _c(\n                                            \"label\",\n                                            {\n                                              staticClass:\n                                                \"status-text text-danger\"\n                                            },\n                                            [_vm._v(\"Error!\")]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      fileObj.status === \"removeError\"\n                                        ? _c(\n                                            \"span\",\n                                            {\n                                              staticClass:\n                                                \"status-icon text-danger\"\n                                            },\n                                            [\n                                              _c(\"i\", {\n                                                staticClass:\n                                                  \"fas fa-exclamation-triangle\"\n                                              })\n                                            ]\n                                          )\n                                        : fileObj.status === \"uploaded\"\n                                        ? _c(\n                                            \"label\",\n                                            {\n                                              staticClass:\n                                                \"status-text text-success\"\n                                            },\n                                            [_vm._v(\"Uploaded!\")]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"b-tooltip\",\n                                              rawName: \"v-b-tooltip.hover.left\",\n                                              modifiers: {\n                                                hover: true,\n                                                left: true\n                                              }\n                                            }\n                                          ],\n                                          staticClass: \"remove-btn\",\n                                          attrs: {\n                                            type: \"button\",\n                                            title: _vm.$t(\"global.remove\", {\n                                              attribute: _vm.$t(_vm.nameLabel)\n                                            })\n                                          },\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.removeFile(\n                                                fileObj,\n                                                index\n                                              )\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\"\n                                          })\n                                        ]\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ]\n                  )\n                })\n              ],\n              2\n            )\n          ]\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"span\", { staticClass: \"button-icon\" }, [\n      _c(\"i\", { staticClass: \"fas fa-times\" })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { instance as request, instanceSilent as silentRequest } from '@core/utils/request'\n\nexport function uploadImage(options, onUploadProgress) {\n    return request({\n        url: options.url,\n        method: 'post',\n        data: options.data,\n        upload: true,\n        config: { headers: { 'Content-Type': 'multipart/form-data' } },\n        headers: { 'Content-Type': 'multipart/form-data; charset=utf-8; boundary=' + Math.random().toString().substr(2) },\n        onUploadProgress,\n    })\n}\n\nexport function removeImage(options) {\n    return request({\n        url: options.url,\n        method: 'delete',\n        data: options.data\n    })\n}\n\nexport function uploadFile(options, onUploadProgress, cancelToken) {\n    const data = {\n        url: options.url,\n        method: 'post',\n        data: options.data,\n        upload: true,\n        config: { headers: { 'Content-Type': 'multipart/form-data' } },\n        headers: { 'Content-Type': 'multipart/form-data; charset=utf-8; boundary=' + Math.random().toString().substr(2) },\n        onUploadProgress,\n        cancelToken,\n    }\n\n    if (options.silent) {\n        return silentRequest(data)\n    }\n    return request(data)\n}\n\nexport function removeFile(options) {\n    return request({\n        url: options.url,\n        method: 'delete',\n        data: options.data\n    })\n}\n","import { render, staticRenderFns } from \"./FileUploader.vue?vue&type=template&id=4ce61af5&\"\nimport script from \"./FileUploader.vue?vue&type=script&lang=js&\"\nexport * from \"./FileUploader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4ce61af5')) {\n      api.createRecord('4ce61af5', component.options)\n    } else {\n      api.reload('4ce61af5', component.options)\n    }\n    module.hot.accept(\"./FileUploader.vue?vue&type=template&id=4ce61af5&\", function () {\n      api.rerender('4ce61af5', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/FileUploader.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FileUploader.vue?vue&type=template&id=4ce61af5&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AArFA;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAKA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AANA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AALA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAzFA;AACA;AAKA;AAAA;AAoFA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5NA;AA8NA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAjXA;;;;;;;;;;;;ACpzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAPA;AASA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}