{"version":3,"file":"js/chunks/app/chat~app/meeting/live~layouts/app-layout.js?id=71372e6821461c3f7c79","sources":["webpack:///conversation-header.vue","webpack:///group.vue","webpack:///header.vue","webpack:///index.vue","webpack:///message-item.vue","webpack:///room-item.vue","webpack:///settings.vue","webpack:///./resources/js/components/chat-box/group.vue?6171","webpack:///./resources/js/components/chat-box/settings.vue?4f76","webpack:///./resources/js/components/chat-box/group.vue?e8ed","webpack:///./resources/js/components/chat-box/settings.vue?14a1","webpack:///./resources/js/components/chat-box/conversation-header.vue?f855","webpack:///./resources/js/components/chat-box/group.vue?f8a6","webpack:///./resources/js/components/chat-box/header.vue?441e","webpack:///./resources/js/components/chat-box/index.vue?8019","webpack:///./resources/js/components/chat-box/message-item.vue?1703","webpack:///./resources/js/components/chat-box/room-item.vue?8245","webpack:///./resources/js/components/chat-box/settings.vue?76df","webpack:///./resources/js/components/chat-box/conversation-header.vue","webpack:///./resources/js/components/chat-box/conversation-header.vue?9480","webpack:///./resources/js/components/chat-box/conversation-header.vue?9336","webpack:///./resources/js/components/chat-box/group.vue","webpack:///./resources/js/components/chat-box/group.vue?bb35","webpack:///./resources/js/components/chat-box/group.vue?b483","webpack:///./resources/js/components/chat-box/group.vue?2e2a","webpack:///./resources/js/components/chat-box/header.vue","webpack:///./resources/js/components/chat-box/header.vue?406f","webpack:///./resources/js/components/chat-box/header.vue?d67f","webpack:///./resources/js/components/chat-box/index.vue","webpack:///./resources/js/components/chat-box/index.vue?3150","webpack:///./resources/js/components/chat-box/index.vue?c393","webpack:///./resources/js/components/chat-box/message-item.vue","webpack:///./resources/js/components/chat-box/message-item.vue?091e","webpack:///./resources/js/components/chat-box/message-item.vue?f140","webpack:///./resources/js/components/chat-box/room-item.vue","webpack:///./resources/js/components/chat-box/room-item.vue?e8d6","webpack:///./resources/js/components/chat-box/room-item.vue?8a39","webpack:///./resources/js/components/chat-box/settings.vue","webpack:///./resources/js/components/chat-box/settings.vue?5edf","webpack:///./resources/js/components/chat-box/settings.vue?918c","webpack:///./resources/js/components/chat-box/settings.vue?4508","webpack:///./resources/js/mixins/config-form.js"],"sourcesContent":["<template>\n    <div class=\"conversation-header\">\n        <div class=\"room-thumb\">\n            <user-avatar :user=\"computedUser\" :size=\"40\" />\n        </div>\n        <div class=\"room-details\">\n            <div class=\"title-row\">\n                <h6 class=\"room-title\">{{ roomName }}</h6>\n            </div>\n            <div class=\"meta-row\">\n                <template v-if=\"!room.isGroup && !typingUser\">\n                    <span v-if=\"isLiveOnline(computedUser)\">{{ $t('general.online') }}</span>\n                    <span v-else>{{ $t('general.offline') }}</span>\n                </template>\n                <template v-else-if=\"room.isGroup\">\n                    <template v-if=\"typingUser\"><span class=\"typing-indicator\">{{ typingUser }} {{ $t('general.is_typing') }}</span> <span> &nbsp;</span></template>\n                    <span v-else-if=\"roomMembers\">{{ roomMembers }}</span>\n                    <span v-else>{{ room.memberCount }} {{ $t('chat.members') }}</span>\n                </template>\n                <template v-else>\n                    <span class=\"typing-indicator\" v-show=\"typingUser\">{{ $t('general.is_typing') }}</span> <span> &nbsp;</span>\n                </template>\n            </div>\n        </div>\n        <div class=\"room-btns action-buttons\">\n            <button v-if=\"room.isGroup && !room.hasLeft && configs && configs.chat.groupChat\" type=\"button\" @click=\"goToGroup\"><i class=\"fas fa-info-circle\"></i></button>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapGetters } from 'vuex'\n\n    export default {\n        props: {\n            room: {\n                type: Object,\n                required: true\n            },\n            roomName: {\n                type: String,\n                required: true\n            },\n            vars: {\n                type: Object,\n                required: true,\n            },\n            configs: {\n                type: Object,\n                required: true,\n            },\n            typingUser: {\n                type: String,\n            },\n        },\n        computed: {\n            ...mapGetters('user', [\n                'liveUsers',\n            ]),\n            computedUser() {\n                return this.room.isGroup || !this.room.member ? this.room : this.room.member\n            },\n            roomMembers() {\n                if(this.room.memberCount <= 1) {\n                    return this.$t('chat.only_you_are_member')\n                }\n\n                if(this.room.members && this.room.members.length > 1) {\n                    return this.room.members[1].user.profile.name + this.$t('chat.and_n_other_members', {attribute: this.room.memberCount - 1})\n                }\n                return ''\n            },\n        },\n        methods: {\n            isLiveOnline(user) {\n                return user && this.liveUsers.find(u => u.uuid === user.uuid) ? true : false\n            },\n            goToGroup() {\n                this.$emit('goToGroup', this.room)\n            },\n        }\n    }\n</script>\n","<template>\n    <div class=\"cb-inner-window chatgroup-container\">\n        <div class=\"chatgroup-wrapper\" v-if=\"activeContainer === 'chatgroup'\">\n            <div class=\"chatgroup\">\n                <vue-scroll ref=\"vue-scroll-chatgroup\" id=\"vue-scroll-chatgroup\">\n                    <div class=\"chatgroup-form\">\n\n                        <template v-if=\"activeGroup\">\n                            <div v-if=\"!showEditNameForm\" class=\"chatgroup-name mt-2\">\n                                <h6>{{ formData.name }}</h6>\n                                <div v-if=\"activeGroup.canModerate\" class=\"chatgroup-actions\">\n                                    <button type=\"button\" @click=\"editName\"><i class=\"fas fa-pencil-alt\"></i></button>\n                                </div>\n                            </div>\n\n                            <div v-else-if=\"activeGroup.canModerate\" class=\"chatgroup-name mt-2\">\n                                <input type=\"text\" class=\"form-control\" ref=\"groupName\" v-model=\"formData.name\" :placeholder=\"$t('chat.chat_group_name')\">\n\n                                <div class=\"chatgroup-actions\">\n                                    <button type=\"button\" @click=\"updateName\"><i class=\"fas fa-check\"></i></button>\n                                </div>\n                            </div>\n                        </template>\n\n                        <template v-else>\n                            <div class=\"chatgroup-name\">\n                                <input type=\"text\" class=\"form-control\" ref=\"groupName\" v-model=\"formData.name\" :placeholder=\"$t('chat.chat_group_name')\">\n                            </div>\n\n                            <base-checkbox class=\"ml-3 mt-4\" v-model=\"formData.isPublicGroup\" v-if=\"hasRole('admin')\">\n                                <span class=\"text-light\">{{ $t('chat.is_public_group') }}?</span>\n                            </base-checkbox>\n\n                        </template>\n\n                        <div class=\"chatgroup-members-header pt-3\">\n                        </div>\n\n                        <div class=\"chatgroup-members\">\n                            <slot name=\"members\" v-bind:members=\"formData.members\" />\n                        </div>\n\n                    </div>\n                </vue-scroll>\n            </div>\n\n            <div class=\"chatgroup-footer\" v-if=\"!activeGroup\">\n                <base-button type=\"button\" design=\"dark-primary\" @click=\"goBack\">{{ $t('general.cancel') }}</base-button>\n                <base-button type=\"button\" design=\"primary\" @click=\"createGroup\">{{ $t('general.save') }}</base-button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapGetters, mapActions } from 'vuex'\n\n    export default {\n        props: {\n            activeContainer: {\n                type: String,\n                default: 'home',\n                required: true\n            },\n            activeGroup: {\n                type: [Object, null],\n                default() {\n                    return null\n                },\n            },\n            membersToAdd: {\n                type: Array,\n                default() {\n                    return []\n                },\n            },\n            membersToRemove: {\n                type: Array,\n                default() {\n                    return []\n                },\n            },\n        },\n        data() {\n            return {\n                formData: {\n                    uuid: null,\n                    name: '',\n                    isPublicGroup: false,\n                    members: [],\n                },\n                showEditNameForm: false,\n                isLoading: false,\n            }\n        },\n        watch: {\n            activeContainer(newVal, oldVal) {\n                if(newVal === 'chatgroup' && newVal !== oldVal) {\n                    if(! this.activeGroup) {\n                        this.formData.uuid = null\n                        this.formData.name = ''\n                        this.formData.isPublicGroup = false\n                        this.formData.members = []\n                    }\n                }\n            },\n            activeGroup(newValue, oldValue) {\n                if(oldValue !== newValue) {\n                    if(newValue) {\n                        this.formData.uuid = newValue.uuid\n                        this.formData.name = newValue.name\n                        this.formData.members = newValue.members\n                        this.getMembers()\n                    } else {\n                        this.formData.uuid = null\n                        this.formData.name = ''\n                        this.formData.isPublicGroup = false\n                        this.formData.members = []\n                    }\n                }\n            },\n            membersToAdd: {\n                handler(newValue) {\n                    if(! (newValue && newValue.length) ) {\n                        return\n                    }\n                    newValue.forEach(m => {\n                        const foundIndex = this.formData.members.findIndex(u => u.user.uuid === m.user.uuid)\n                        if(foundIndex === -1) {\n                            this.formData.members.push({ ...m })\n                        }\n                    })\n                },\n                deep: true\n            },\n            membersToRemove: {\n                handler(newValue) {\n                    if(! (newValue && newValue.length) ) {\n                        return\n                    }\n                    newValue.forEach(m => {\n                        const foundIndex = this.formData.members.findIndex(u => u.user.uuid === m.user.uuid)\n                        if(foundIndex !== -1) {\n                            this.formData.members.splice(foundIndex, 1)\n                        }\n                    })\n                },\n                deep: true\n            },\n        },\n        computed: {\n            ...mapGetters('user', [\n                'hasRole',\n            ]),\n        },\n        methods: {\n            ...mapActions('chat', [\n                'CreateRoom',\n                'UpdateRoom',\n                'GetRoomMembers',\n            ]),\n            goBack() {\n                this.formData.uuid = null\n                this.formData.name = ''\n                this.formData.isPublicGroup = false\n                this.formData.members = []\n                this.$emit('goBack')\n            },\n            editName() {\n                this.showEditNameForm = true\n            },\n            updateName() {\n                this.isLoading = true\n\n                this.UpdateRoom({\n                        uuid: this.formData.uuid,\n                        name: this.formData.name,\n                    })\n                    .then(response => {\n                        this.isLoading = false\n                        this.showEditNameForm = false\n                    })\n                    .catch(error => {\n                        this.isLoading = false\n                        formUtil.handleErrors(error)\n                    })\n            },\n            createGroup() {\n                this.isLoading = true\n\n                this.CreateRoom({\n                        name: this.formData.name,\n                        isPublicGroup: this.formData.isPublicGroup,\n                        members: this.formData.members.map(m => m.user)\n                    })\n                    .then(response => {\n                        this.isLoading = false\n                        this.$emit('goToConversation', {\n                            room: response,\n                            user: null\n                        })\n                    })\n                    .catch(error => {\n                        this.isLoading = false\n                        formUtil.handleErrors(error)\n                    })\n            },\n            getMembers() {\n                if(!this.activeGroup) {\n                    return\n                }\n\n                this.isLoading = true\n\n                this.GetRoomMembers({\n                        uuid: this.activeGroup.uuid\n                    })\n                    .then(response => {\n                        this.isLoading = false\n                        this.formData.members = response\n                    })\n                    .catch(error => {\n                        this.isLoading = false\n                        formUtil.handleErrors(error)\n                    })\n            },\n        },\n        mounted() {\n            if(this.activeGroup) {\n                this.getMembers()\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    @import '~@js/core/assets/scss/imports.scss';\n    .chatgroup-wrapper {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        max-height: 100%;\n        overflow: hidden;\n\n        .chatgroup {\n            display: flex;\n            flex-grow: 1;\n            justify-content: stretch;\n            align-items: stretch;\n            height: 100%;\n            max-height: 100%;\n            overflow: hidden;\n            position: relative;\n\n            // padding: 0.85rem;\n            display: flex;\n            flex-direction: row;\n\n            .chatgroup-form {\n                .chatgroup-name {\n                    display: flex;\n                    flex-direction: row;\n                    justify-content: space-between;\n                    padding: 0 0.85rem;\n\n                    h6 {\n                        line-height: 2rem;\n                        color: rgba(255,255,255,0.8);\n                        margin-bottom: 0;\n                        flex-grow: 1;\n                        display: flex;\n                        justify-content: flex-start;\n                        align-items: center;\n                    }\n\n                    input.form-control {\n                        background: rgba(0, 0, 0, 0.1);\n                        border: 1px solid transparent;\n                        border-top-color: rgba(0, 0, 0, 0.05);\n                        border-bottom-color: rgba(0, 0, 0, 0.05);\n                        width: 100%;\n                        height: 100%;\n                        color: $white;\n\n                        &:hover {\n                            background: rgba(0, 0, 0, 0.15);\n                        }\n\n                        &:focus,\n                        &:active {\n                            background: rgba(0, 0, 0, 0.35);\n                        }\n\n                        &::placeholder {\n                            color: $text-muted;\n                        }\n                    }\n\n                    .chatgroup-actions {\n                        display: flex;\n                        flex-direction: row;\n                        justify-content: flex-end;\n\n                        >button {\n                            flex-grow: 1;\n                            background: transparent;\n                            border: none;\n                            color: white;\n                            white-space: nowrap;\n                            width: 40px;\n                            height: 40px;\n                            border-radius: 30px;\n\n                            &:hover {\n                                background: rgba(0, 0, 0, 0.2);\n                                padding-bottom: 2px;\n                            }\n                        }\n                    }\n                }\n\n                .chatgroup-members-header {\n                    border-bottom: 1px solid rgba(0,0,0,0.4);\n                }\n            }\n\n        }\n\n        .chatgroup-footer {\n            box-shadow: 0 -2px 6px 0 rgba(0, 0, 0, 0.4);\n            z-index: 1;\n            display: flex;\n            flex-direction: row;\n            flex-wrap: nowrap;\n            justify-content: center;\n\n            button {\n                flex: 1 0 auto;\n                margin: 0;\n            }\n        }\n    }\n</style>","<template>\n    <div class=\"chat-box-header\">\n        <h6 class=\"cb-header-title\">{{ computedTitle }}</h6>\n\n        <div class=\"cb-header-buttons action-buttons\">\n            <template v-if=\"activeContainer === 'chatgroup'\">\n                <button type=\"button\" @click=\"$emit('goBack')\"><i :class=\"['fas', {'fa-chevron-left': activeContainer === 'chatgroup'}]\"></i></button>\n                <button type=\"button\" @click=\"$emit('showAddMemberScreen')\" class=\"auto-width\"><i class=\"fas fa-plus\"></i> <span class=\"px-2\">{{ $t('chat.add') }}</span></button>\n            </template>\n\n            <template v-else>\n                <button v-if=\"activeContainer !== 'home'\" type=\"button\" @click=\"$emit('goHome')\"><i :class=\"['fas', {'fa-chevron-left': activeContainer === 'conversation'}, {'fa-chevron-right': activeContainer === 'settings'}]\"></i></button>\n\n                <template v-if=\"activeContainer !== 'settings'\">\n                    <button type=\"button\" @click=\"$emit('toggleSearch')\"><i class=\"fas fa-search\"></i></button>\n                    <button type=\"button\" @click=\"$emit('goToSettings')\"><i class=\"fas fa-cog\"></i></button>\n                </template>\n\n                <router-link v-if=\"activeContainer === 'home' && !fullPage && configs.chat.seaparateWindow\" class=\"button\" :to=\"{ name: 'appChat' }\"><i class=\"fas fa-external-link-alt\"></i></router-link>\n            </template>\n\n            <button v-if=\"!fullPage\" type=\"button\" @click=\"$emit('hideChatBox')\"><i class=\"fas fa-times\"></i></button>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            activeContainer: {\n                type: String,\n                default: 'home',\n                required: true\n            },\n            configs: {\n                type: Object,\n                required: true\n            },\n            fullPage: {\n                type: Boolean,\n                default: false\n            },\n        },\n        computed: {\n            computedTitle() {\n                return this.activeContainer === 'settings' ? $t('config.chat.chat_config') : (this.activeContainer === 'chatgroup' ? $t('chat.chat_group') : $t('chat.live_chat'))\n            }\n        }\n    }\n</script>","<template>\n    <div :class=\"['chat-box-wrapper', {'shown': isBoxShown}, {'search-shown': isSearchShown}, {'chat-box-lg': largeChatBox}, {'show-chat-options': showChatOptions}]\">\n        <chat-box-header :active-container=\"activeContainer\" :configs=\"configs\" :full-page=\"fullPage\" @goHome=\"goHome\" @toggleSearch=\"toggleSearch\" @goToSettings=\"goToSettings\" @goBack=\"goBack\" @hideChatBox=\"hideChatBox\" @showAddMemberScreen=\"showAddMemberScreen\" />\n\n        <div class=\"search\">\n            <input type=\"text\" class=\"form-control\" ref=\"searchTerm\" v-model=\"searchTerm\" @keydown.esc=\"toggleSearch\" @input=\"searchTermChanged\" :placeholder=\"$t('general.search_helper_default_text')\">\n            <button v-if=\"searchTerm\" type=\"button\" @click=\"hideSearch\" class=\"clear-btn\">{{ $t('general.clear') }}</button>\n        </div>\n\n        <div :class=\"['chat-box', {'showing-settings': activeContainer === 'settings'}, {'showing-chats': activeContainer === 'conversation'}, {'showing-chatgroup': activeContainer === 'chatgroup'}]\">\n\n            <chat-box-group v-if=\"configs.chat.groupChat\" ref=\"chatBoxGroup\" :active-container=\"activeContainer\" :active-group=\"activeGroup\" :members-to-add=\"activeGroupMembersToAdd\" :members-to-remove=\"activeGroupMembersToRemove\" @goToConversation=\"goToConversation\" @goBack=\"goBack\" @goHome=\"goHome\">\n\n                <template #members=\"{ members }\">\n                    <div class=\"rooms-wrapper\">\n\n                        <template v-if=\"(searchTerm && searched)\">\n\n                            <ul class=\"rooms\" v-if=\"roomsSearch.rooms.length || roomsSearch.users.length\">\n                                <template v-for=\"room in roomsSearch.rooms\" >\n\n                                    <chat-room-item v-if=\"!room.isGroup\" :room=\"room\" :room-name=\"room.name\" click-action=\"addToGroup\" @addToGroup=\"addToGroup\" :vars=\"vars\" :key=\"room.uuid\" :show-last-message=\"false\" />\n                                </template>\n\n                                <chat-room-item v-for=\"user in roomsSearch.users\" :room=\"user\" :room-name=\"user.profile.name\" click-action=\"addToGroup\" @addToGroup=\"addToGroup\" :vars=\"vars\" :key=\"user.uuid\" />\n                            </ul>\n\n                            <div v-else class=\"no-data\">\n                                <h5>{{ $t('chat.no_result_found') }}</h5>\n                            </div>\n                        </template>\n\n                        <template v-else>\n                            <ul class=\"rooms\">\n\n                                <chat-room-item v-for=\"member in members\" :room=\"member.user\" :room-name=\"member.user.profile.name\" click-action=\"goToConversation\" @goToConversation=\"goToConversation\" :show-custom-action=\"activeGroup && activeGroup.canModerate\" click-action-on-custom=\"removeMember\" @removeMember=\"removeMemberFromGroup\" :vars=\"vars\" :key=\"member.user.uuid\" />\n\n                            </ul>\n                        </template>\n\n                    </div>\n                </template>\n\n            </chat-box-group>\n\n\n\n            <chat-box-settings :active-container=\"activeContainer\" @goHome=\"goHome\" />\n\n\n\n            <div class=\"cb-inner-window rooms-container\">\n\n                <vue-scroll ref=\"vue-scroll-rooms\" id=\"vue-scroll-rooms\" @handle-scroll=\"handleRoomsScroll\">\n                    <div class=\"rooms-wrapper\">\n\n                        <template v-if=\"(searchTerm && searched) || newChatScreen || newGroupScreen\">\n\n                            <ul class=\"rooms\" v-if=\"roomsSearch.rooms.length || roomsSearch.users.length\">\n\n                                <template v-if=\"!newChatScreen || !newGroupScreen\">\n                                    <chat-room-item v-for=\"room in roomsSearch.rooms\" :room=\"room\" :room-name=\"room.name\" @goToConversation=\"goToConversation\" :vars=\"vars\" :key=\"room.uuid\" />\n\n                                    <li v-if=\"roomsSearch.users.length\" class=\"my-2 pl-3 font-weight-500\">{{ $t('user.users') }}</li>\n                                </template>\n\n                                <chat-room-item v-for=\"user in roomsSearch.users\" :room=\"user\" :room-name=\"user.profile.name\" click-action=\"goToConversation\" @goToConversation=\"goToConversation\" :vars=\"vars\" :key=\"user.uuid\" />\n                            </ul>\n\n                            <div v-else class=\"no-data\">\n                                <h5>{{ $t('chat.no_result_found') }}</h5>\n                            </div>\n                        </template>\n\n                        <template v-else>\n                            <ul v-if=\"rooms.data && rooms.data.length\" class=\"rooms\">\n                                <chat-room-item v-for=\"room in rooms.data\" :room=\"room\" :room-name=\"room.name\" @goToConversation=\"goToConversation\" :vars=\"vars\" :key=\"room.uuid\" />\n                            </ul>\n\n                            <div v-else class=\"no-data\">\n                                <h5>{{ $t('chat.no_chats_yet') }}</h5>\n                            </div>\n                        </template>\n\n                    </div>\n                </vue-scroll>\n\n                <div class=\"chat-option-buttons\">\n                    <button v-if=\"configs.chat.groupChat\" type=\"button\" @click=\"goToCreateGroup\"><i class=\"fas fa-users\"></i></button>\n                    <button type=\"button\" @click=\"startNewChat\"><i class=\"fas fa-user\"></i></button>\n                    <button type=\"button\"><i class=\"fas fa-comment-dots fa-flip-horizontal\"></i></button>\n                </div>\n            </div>\n\n\n\n            <div class=\"cb-inner-window conversation-container\">\n                <div class=\"conversation-wrapper\" v-if=\"activeConversation\">\n\n                    <conversation-header v-if=\"activeConversation.chatRoom\" :room=\"activeConversation.chatRoom\" :room-name=\"activeConversation.chatRoom.name\" :vars=\"vars\" :configs=\"configs\" :typingUser=\"typingUser\" @goToGroup=\"goToGroup\" />\n                    <conversation-header v-else-if=\"activeConversation.user\" :room=\"activeConversation.user\" :room-name=\"activeConversation.user.profile.name\" :vars=\"vars\" :configs=\"configs\" :typingUser=\"typingUser\" />\n\n\n                    <div :class=\"['conversation', {'no-messages': !hasMessages}, {'got-new-messages': newUnreadMessageOnFeed}, {'show-scroll-btn': showScrollToLatestBtn}]\">\n\n                        <div v-if=\"hasMessages\" class=\"messages-list-container\">\n                            <vue-scroll ref=\"vue-scroll-messages\" id=\"vue-scroll-messages\" @handle-scroll=\"handleMessageScroll\">\n                                <div :class=\"['messages-list-wrapper', {'show-name': activeConversation.chatRoom && activeConversation.chatRoom.isGroup}]\">\n\n\n                                    <template v-if=\"searchTerm && searched\">\n                                        <template v-if=\"messagesSearch.length\">\n                                            <message-item v-for=\"(message, mIndex) in messagesSearch\" :message=\"message\" :vars=\"vars\" :file-icons=\"fileIcons\" :file-mime-types=\"fileMimeTypes\" :class=\"[{'own-message': message.user.uuid === userUuid}, {'prev-diff-own': !messages.data[mIndex+1] || messages.data[mIndex+1].user.uuid !== message.user.uuid}, {'next-diff-own': !messages.data[mIndex-1] || messages.data[mIndex-1].user.uuid !== message.user.uuid}]\" :key=\"message.uuid\" />\n                                        </template>\n\n                                        <div v-else class=\"no-data\">\n                                            <h5>{{ $t('chat.no_result_found') }}</h5>\n                                        </div>\n                                    </template>\n\n\n                                    <template v-else>\n                                        <message-item v-for=\"(message, mIndex) in messages.data\" :message=\"message\" :vars=\"vars\" :file-icons=\"fileIcons\" :file-mime-types=\"fileMimeTypes\" :class=\"[{'own-message': message.user.uuid === userUuid}, {'prev-diff-own': !messages.data[mIndex+1] || messages.data[mIndex+1].user.uuid !== message.user.uuid}, {'next-diff-own': !messages.data[mIndex-1] || messages.data[mIndex-1].user.uuid !== message.user.uuid}]\" :key=\"message.uuid\" />\n\n                                        <div v-if=\"isFetching\" class=\"d-flex justify-content-center my-2\">\n                                            <animated-loader :is-loading=\"isFetching\" :loader-color=\"vars.colors.light\" overlay-color=\"transparent\" size=\"inline\" loader-size=\"20px\" loader-stroke=\"3px\" />\n                                        </div>\n\n                                        <div v-if=\"noMoreMessages\" class=\"message-item my-4 d-flex justify-content-center align-items-center\">\n                                            <h5 class=\"text-muted\">\n                                                {{ $t('chat.no_more_messages') }}\n                                            </h5>\n                                        </div>\n                                    </template>\n\n                                </div>\n                            </vue-scroll>\n                        </div>\n\n                        <div v-else class=\"d-flex justify-content-center align-items-center min-height-300px\">\n                            <h5 class=\"text-muted\">\n                                {{ $t('chat.no_messages_yet') }}\n                            </h5>\n                        </div>\n\n                        <div class=\"scroll-latest-btn\" @click=\"scrollToLatestMessages\">\n                            <div class=\"scroll-btn-wrapper\">\n                                <i class=\"fas fa-angle-double-down\"></i>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class=\"conversation-footer\" v-if=\"(activeConversation.chatRoom && !activeConversation.chatRoom.isGroup) || (!activeConversation.chatRoom && activeConversation.user) || (activeConversation.chatRoom && activeConversation.chatRoom.isGroup && !activeConversation.chatRoom.hasLeft)\">\n\n                        <div class=\"new-message\">\n                            <at :members=\"computedParticipants\" name-key=\"name\" v-model=\"newMessage.message\" @at=\"handleAt\">\n                                <template #item=\"s\">\n                                    <span class=\"mentioned\">{{ s.item.name }} <span class=\"bracketed text-muted-md\">{{ s.item.username }}</span></span>\n                                </template>\n\n                                <template #embeddedItem=\"s\">\n                                    <span><span class=\"tag mentioned bg-white text-primary mx-1 px-2 py-1 rounded\" :data-uuid=\"s.current && s.current.user ? s.current.user.uuid : ''\">{{ s.current.name }}</span> <span> </span></span>\n                                </template>\n\n                                <div class=\"new-message-input form-control\" contenteditable :data-placeholder=\"$t('chat.type_a_message')\" :placeholder=\"$t('chat.type_a_message')\" ref=\"newMessageInput\" @keydown=\"isTyping\" @keydown.enter=\"enterPressedEvt(postMessage, $event)\"><div></div></div>\n                            </at>\n\n                            <emoji-picker @emoji=\"appendEmoji\" :search=\"searchTermEmoji\" class=\"emoji-picker-wrapper\">\n                                <button type=\"button\" class=\"btn-custom emoji-button\" slot=\"emoji-invoker\" slot-scope=\"{ events: { click: clickEvent } }\" @click.stop=\"clickEvent\"><i class=\"far fa-grin\"></i></button>\n\n                                <div slot=\"emoji-picker\" slot-scope=\"{ emojis, insert, display }\" class=\"emoji-picker-container\">\n                                    <div class=\"emoji-picker\">\n                                        <div class=\"emoji-picker__search\">\n                                            <input type=\"text\" v-model=\"searchTermEmoji\" v-focus>\n                                        </div>\n                                        <div>\n                                            <div v-for=\"(emojiGroup, category) in emojis\" :key=\"category\" class=\"mt-2\">\n                                                <h5>{{ category }}</h5>\n                                                <div class=\"emojis\">\n                                                    <span v-for=\"(emoji, emojiName) in emojiGroup\" :key=\"emojiName\" @click=\"insert(emoji)\" :title=\"emojiName\">{{ emoji }}</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </emoji-picker>\n\n\n                            <file-uploader v-if=\"!newMessage.message && configs.chat.fileSharing\" url=\"/chat/messages\" name-label=\"upload.attachment\" names-label=\"upload.attachments\" button-icon=\"fas fa-paperclip\" button-classes=\"btn-sm\" button-design=\"custom\" hide-button-label hide-file-list :options=\"preRequisite.uploaderConfig\" :data=\"newMessage.attachments\" :additional-form-data=\"activeConversation\" :request-identifier=\"newMessageRequestUUID\" @uploading=\"attachmentUploadStarted\" @updated=\"attachmentUploaded\" @error=\"attachmentUploadError\" @noNeed=\"noNeedCallback\" />\n\n                            <button type=\"button\" class=\"btn-custom post-message-button\" :title=\"$t('general.submit')\" @click=\"postMessage\"><i class=\"far fa-paper-plane\"></i></button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n\n    </div>\n</template>\n\n<script>\n    import { mapGetters, mapActions } from 'vuex'\n\n    import FileUploader from '@components/FileUploader'\n    import EmojiPicker from 'vue-emoji-picker'\n    import ChatBoxHeader from './header'\n    import ChatBoxSettings from './settings'\n    import ChatBoxGroup from './group'\n    import ChatRoomItem from './room-item'\n    import ConversationHeader from './conversation-header'\n    import MessageItem from './message-item'\n    import At from 'vue-at'\n    import EventBus from '@js/event-bus'\n\n    import { enterPressed } from '@core/utils/form'\n    import { formatKeysToCamelCase } from '@core/utils/formatter'\n    import { fileIcons, fileMimeTypes } from '@js/vars'\n    import * as MomentTz from '@core/filters/momentz'\n\n    export default {\n        name: \"ChatBox\",\n        components: {\n            FileUploader,\n            EmojiPicker,\n            At,\n            ChatBoxHeader,\n            ChatBoxSettings,\n            ChatBoxGroup,\n            ChatRoomItem,\n            ConversationHeader,\n            MessageItem,\n        },\n        props: {\n            channel: {\n                default: null\n            },\n            boxVisibility: {\n                type: Boolean,\n                default: false,\n            },\n            fullPage: {\n                type: Boolean,\n                default: false,\n            },\n            meeting: {\n                type: Object,\n                default () {\n                    return {}\n                }\n            },\n        },\n        data() {\n            return {\n                isBoxShown: false,\n                isSearchShown: false,\n                showChatOptions: false,\n                largeChatBox: false,\n                searched: false,\n                newChatScreen: false,\n                newGroupScreen: false,\n                cbHeaderTitle: $t('chat.live_chat'),\n                searchTerm: '',\n                searchTermEmoji: '',\n                activeContainer: 'home',\n                members: [],\n                newMessage: {\n                    message: '',\n                    attachments: [],\n                    updated: false,\n                },\n                newMessageRequestUUID: uuid(),\n                activeConversation: null,\n                activeGroup: null,\n                activeGroupMembersToAdd: [],\n                activeGroupMembersToRemove: [],\n                uploadURL: '',\n                formErrors: {},\n                preRequisite: {\n                    uploaderConfig: {\n                        module: '',\n                        token: '',\n                        allowedExtensions: '',\n                        allowedMaxFileSize: null,\n                        maxNoOfFiles: 1,\n                        uuid: uuid(),\n                    },\n                },\n                goingToConversation: false,\n                isFetching: false,\n                noMoreMessages: false,\n                newUnreadMessageOnFeed: false,\n                showScrollToLatestBtn: false,\n                chatRoomChannel: null,\n                typingUser: null,\n                typingUserTimeout: null,\n                initialNewMessage: null,\n                firstFetch: true,\n                fileIcons: fileIcons,\n                fileMimeTypes: fileMimeTypes,\n            }\n        },\n        watch: {\n            boxVisibility(newVal, oldVal) {\n                this.isBoxShown = newVal\n\n                if(this.isBoxShown) {\n                    document.body.classList.add(\"chat-box-shown\")\n                }\n            },\n            activeChatUser(newVal, oldVal) {\n                if(newVal !== null && (!oldVal || (oldVal !== null && newVal.uuid !== oldVal.uuid))) {\n                    this.goToConversation({ user: newVal })\n                }\n            },\n            activeChatRoom(newVal, oldVal) {\n                if(this.goingToConversation === false && newVal !== null && (!oldVal || (oldVal !== null && newVal.uuid !== oldVal.uuid))) {\n                    this.goToConversation({ room: newVal })\n                }\n            },\n        },\n        computed: {\n            ...mapGetters('config', [\n                'vars',\n                'configs',\n                'uiConfigs',\n            ]),\n            ...mapGetters('user', {\n                'userUuid': 'uuid'\n            }),\n            ...mapGetters('user', [\n                'profile',\n                'username',\n            ]),\n            ...mapGetters('chat', [\n                'rooms',\n                'roomsPageMeta',\n                'roomsSearch',\n                'messages',\n                'messagesPageMeta',\n                'messagesSearch',\n                'activeChatRoom',\n                'activeChatUser',\n            ]),\n            user() {\n                return {\n                    uuid: this.userUuid,\n                    username: this.username,\n                    name: this.profile.name,\n                    profile: this.profile,\n                }\n            },\n            hasMessages() {\n                return this.activeConversation && this.messages.data\n            },\n            computedParticipants() {\n                if (this.activeConversation) {\n                    return this.activeConversation.members\n                }\n                return []\n            },\n            enterToSubmit() {\n                return this.configs.chat && this.configs.chat.enterToSubmit\n            }\n        },\n        methods: {\n            ...mapActions('chat', [\n                'GetRooms',\n                'GetRoom',\n                'AddMemberToRoom',\n                'RemoveMemberFromRoom',\n                'SearchRooms',\n                'SearchMessages',\n                'GetMessages',\n                'SendMessage',\n                'PutMessageToFeed',\n                'PatchMessageInFeed',\n                'ResetMessage',\n                'SetMessage',\n                'ResetTotalUnreadCount',\n                'SetActiveChatRoom',\n                'SetActiveChatUser',\n                'ResetActiveChatRoomAndUser',\n                'SearchRoomMembers',\n            ]),\n\n            // TOGGLE & HIDE SHOW METHODS\n            hideChatBox() {\n                this.isBoxShown = false\n                this.ResetActiveChatRoomAndUser()\n                setTimeout(() => {\n                    this.$emit('boxHidden')\n                }, 200)\n            },\n            showChatBox() {\n                this.isBoxShown = true\n                this.$emit('boxShown')\n            },\n            hideSearch() {\n                this.searchTerm = ''\n                this.searched = false\n                this.isSearchShown = false\n                this.showChatOptions = true\n                this.newChatScreen = false\n                this.newGroupScreen = false\n\n                if (this.activeContainer === 'home') {\n                    this.fetchRooms(true)\n                    this.scrollTo(\"vue-scroll-rooms\", 0)\n                } else if (this.activeContainer === 'conversation') {\n                    this.fetchMessages(true)\n                }\n            },\n            toggleSearch(startNewChat = false, startNewGroup = false) {\n                this.searchTerm = ''\n                this.searched = false\n                this.isSearchShown = !this.isSearchShown\n\n                if (this.isSearchShown) {\n                    this.newChatScreen = startNewChat\n                    this.newGroupScreen = startNewGroup\n                    this.showChatOptions = !(startNewChat || startNewGroup)\n                    this.$nextTick(() => {\n                        this.$refs[`searchTerm`].focus()\n                    })\n                } else {\n                    this.newChatScreen = false\n                    this.newGroupScreen = false\n                    this.showChatOptions = true\n                    if (this.activeContainer === 'home') {\n                        this.fetchRooms(true)\n                        this.scrollTo(\"vue-scroll-rooms\", 0)\n                    } else if (this.activeContainer === 'conversation') {\n                        this.fetchMessages(true)\n                    }\n                }\n            },\n            startNewChat() {\n                this.toggleSearch(true)\n            },\n\n            // SWITCH TO VIEW METHODS\n            goHome() {\n                this.lastActiveContainer = this.activeContainer\n                this.activeContainer = 'home'\n                this.ResetActiveChatRoomAndUser()\n\n                if (this.lastActiveContainer === 'conversation') {\n                    this.leaveChatRoomChannel(this.activeConversation.chatRoom)\n                    this.hideSearch()\n                    if (this.searchRoomObj && this.searchRoomObj.searched) {\n                        this.searchTerm = this.searchRoomObj.searchTerm\n                        this.searched = this.searchRoomObj.searched\n                        this.isSearchShown = true\n                        this.showChatOptions = false\n                    } else {\n                        this.fetchRooms()\n                    }\n                } else {\n                    this.fetchRooms()\n                }\n\n                this.scrollTo(\"vue-scroll-rooms\", 0)\n                setTimeout(() => {\n                    this.activeConversation = null\n                }, 100)\n            },\n            goToConversation({ room, user }, fetchRoomForUser = false) {\n                this.goingToConversation = true\n                const swtichToConversationTab = () => {\n                    setTimeout(() => {\n                        this.activeContainer = 'conversation'\n\n                        if (this.isSearchShown) {\n                            this.searchRoomObj = {\n                                searchTerm: this.searchTerm,\n                                searched: this.searched\n                            }\n                            this.hideSearch()\n                        } else {\n                            this.searchRoomObj = {\n                                searchTerm: null,\n                                searched: null\n                            }\n                        }\n                        this.goingToConversation = false\n\n                        window.setTimeout(() => {\n                            this.scrollToLatestMessages()\n                            this.focusNewMessage()\n                            this.showScrollToLatestBtn = false\n                            this.newUnreadMessageOnFeed = false\n                        }, 300)\n                    }, 100)\n                }\n\n                this.activeConversation = {\n                    chatRoom: room || null,\n                    user: room && room.isGroup ? null : (user || null),\n                    members: room && room.isGroup ? room.members : (user ? [user] : []),\n                }\n\n                this.ResetMessage()\n\n                if (room) {\n                    if(!room.hasLeft) {\n                        this.joinChatRoomChannel(room)\n                    }\n\n                    this.GetRoom({\n                            uuid: room.uuid\n                        })\n                        .then(response => {\n                            const newChatRoomInfo = response.chatRoom\n                            const newChats = response.chats\n                            this.activeConversation.chatRoom = newChatRoomInfo\n\n                            if(room.hasLeft && !newChatRoomInfo.hasLeft) {\n                                this.joinChatRoomChannel(newChatRoomInfo)\n                            }\n\n                            if(newChatRoomInfo.hasLeft) {\n                                this.leaveChatRoomChannel(newChatRoomInfo)\n                            }\n\n                            this.SetMessage({\n                                data: [...newChats],\n                                meta: {\n                                    ...this.messages.meta,\n                                    total: newChats.length,\n                                    lastItemUuid: newChats.length ? newChats[newChats.length - 1].uuid : null,\n                                }\n                            })\n\n                            if (this.activeConversation.chatRoom && this.activeConversation.chatRoom.hasOwnProperty('chats')) {\n                                delete this.activeConversation.chatRoom.chats\n                            }\n                            this.noMoreMessages = false\n\n                            this.SetActiveChatRoom(this.activeConversation.chatRoom)\n                            swtichToConversationTab()\n                        })\n                        .catch(error => {\n                            this.goingToConversation = false\n                            formUtil.handleErrors(error)\n                        })\n                } else {\n                    this.SetActiveChatUser(this.activeConversation.user)\n                    this.fetchMessages(true)\n                    swtichToConversationTab()\n                }\n\n            },\n            goToSettings() {\n                this.lastActiveContainer = this.activeContainer\n                this.activeContainer = 'settings'\n\n                this.scrollTo(\"vue-scroll-rooms\", 0)\n                setTimeout(() => {\n                    if (this.lastActiveContainer === 'conversation') {\n                        this.ResetActiveChatRoomAndUser()\n                        this.leaveChatRoomChannel(this.activeConversation.chatRoom)\n                    }\n\n                    if (this.isSearchShown) {\n                        this.hideSearch()\n                    }\n\n                    this.activeConversation = null\n                }, 100)\n            },\n            goToCreateGroup() {\n                this.activeGroup = null\n                this.goToGroup()\n            },\n            goToGroup(activeGroup = null) {\n                this.activeGroupMembersToAdd = []\n                this.activeGroupMembersToRemove = []\n                this.lastActiveContainer = this.activeContainer\n                this.activeContainer = 'chatgroup'\n                this.activeGroup = activeGroup\n\n                this.scrollTo(\"vue-scroll-rooms\", 0)\n                if (this.isSearchShown) {\n                    this.hideSearch()\n                }\n\n                if(!activeGroup) {\n                    this.$nextTick(() => {\n                        window.setTimeout(() => {\n                            this.$refs[`chatBoxGroup`].$refs[`groupName`].focus()\n                        }, 300)\n                    })\n                }\n            },\n            showAddMemberScreen() {\n                this.activeGroupMembersToAdd = []\n                this.activeGroupMembersToRemove = []\n                this.toggleSearch(false, true)\n            },\n            addToGroup(data) {\n                if(data && data.user) {\n                    if(this.activeGroup) {\n                        this.isLoading = true\n                        this.AddMemberToRoom({\n                            uuid: this.activeGroup.uuid,\n                            members: [data.user]\n                        })\n                            .then(response => {\n                                this.isLoading = false\n                                this.activeGroup = response\n                                this.activeConversation.chatRoom = response\n                                this.activeConversation.chatRoom.members = response.members\n                            })\n                            .catch(error => {\n                                this.isLoading = false\n                                formUtil.handleErrors(error)\n                            })\n                    } else {\n                        this.activeGroupMembersToAdd.push(data)\n                    }\n                }\n                this.toggleSearch()\n            },\n            removeMemberFromGroup(data) {\n                this.activeGroupMembersToAdd = []\n                this.activeGroupMembersToRemove = []\n                if(data && data.user) {\n                    if(this.activeGroup) {\n                        this.isLoading = true\n                        this.RemoveMemberFromRoom({\n                            uuid: this.activeGroup.uuid,\n                            members: [data.user]\n                        })\n                            .then(response => {\n                                this.isLoading = false\n                                this.activeGroup = response\n                                this.activeConversation.chatRoom = response\n                            })\n                            .catch(error => {\n                                this.isLoading = false\n                                formUtil.handleErrors(error)\n                            })\n                    } else {\n                        this.activeGroupMembersToRemove.push(data)\n                    }\n                }\n            },\n            goBack() {\n                if(this.lastActiveContainer) {\n                    this.activeContainer = this.lastActiveContainer\n                } else {\n                    this.goHome()\n                }\n            },\n\n            // FETCH DATA METHODS\n            searchTermChanged: _.debounce(function() {\n                if (!this.searchTerm || this.searchTerm.length < 2) {\n                    return\n                }\n\n                if (this.activeContainer === 'home' || this.activeContainer === 'chatgroup') {\n                    this.searchRooms()\n                    this.scrollTo(\"vue-scroll-rooms\", 0)\n                } else if (this.activeContainer === 'conversation') {\n                    this.searchMessages()\n                }\n            }, 500),\n            handleAt(chunk) {\n                if (!chunk || chunk.length < 2) {\n                    if (this.activeConversation) {\n                        this.activeConversation.members = []\n                    }\n                    return\n                }\n\n                if(!this.activeConversation.chatRoom)\n                {\n                    this.activeConversation.members = []\n                    return\n                }\n\n                this.SearchRoomMembers({ uuid: this.activeConversation.chatRoom.uuid, term: chunk })\n                    .then(response => {\n                        this.activeConversation.members = response\n                    })\n                    .catch(error => {\n                        formUtil.handleErrors(error)\n                        if (this.activeConversation) {\n                            this.activeConversation.members = []\n                        }\n                        return\n                    })\n            },\n            fetchRooms(reset = true) {\n                this.isFetching = true\n                const query = {\n                    ...this.roomsPageMeta,\n                    lastItemUuid: reset ? null : this.rooms.meta.lastItemUuid,\n                    perPage: this.rooms.meta.perPage,\n                }\n\n                this.GetRooms(query)\n                    .then(response => {\n                        this.isFetching = false\n                    })\n                    .catch(error => {\n                        this.isFetching = false\n                        formUtil.handleErrors(error)\n                    })\n            },\n            searchRooms() {\n                this.isFetching = true\n                this.SearchRooms(this.searchTerm)\n                    .then(response => {\n                        this.searched = true\n                        this.showChatOptions = false\n                        this.isFetching = false\n                    })\n                    .catch(error => {\n                        this.isFetching = false\n                        formUtil.handleErrors(error)\n                    })\n            },\n            searchMessages() {\n                if(!this.activeConversation.chatRoom) {\n                    return\n                }\n                this.isFetching = true\n                this.SearchMessages({\n                        q: this.searchTerm,\n                        chatRoom: this.activeConversation.chatRoom.uuid,\n                    })\n                    .then(response => {\n                        this.searched = true\n                        this.isFetching = false\n\n                        window.setTimeout(() => {\n                            this.scrollToLatestMessages()\n                            this.showScrollToLatestBtn = false\n                            this.newUnreadMessageOnFeed = false\n                        }, 300)\n                    })\n                    .catch(error => {\n                        this.isFetching = false\n                        formUtil.handleErrors(error)\n                    })\n            },\n            fetchMessages(reset = false) {\n                if(!this.activeConversation.chatRoom && !this.activeConversation.user) {\n                    return\n                }\n\n                this.isFetching = true\n                this.noMoreMessages = false\n                this.newUnreadMessageOnFeed = false\n\n                const query = {\n                    ...this.messagesPageMeta,\n                    lastItemUuid: reset ? null : this.messages.meta.lastItemUuid,\n                    perPage: this.messages.meta.perPage,\n                    chatRoom: this.activeConversation.chatRoom ? this.activeConversation.chatRoom.uuid : null,\n                    user: this.activeConversation.user ? this.activeConversation.user.uuid : null,\n                }\n\n                this.GetMessages(query)\n                    .then(response => {\n                        this.isFetching = false\n                        if (!response.data.length) {\n                            this.noMoreMessages = true\n                        }\n\n                        if(reset) {\n                            window.setTimeout(() => {\n                                this.scrollToLatestMessages()\n                                this.showScrollToLatestBtn = false\n                                this.newUnreadMessageOnFeed = false\n                            }, 300)\n                        }\n\n                        if(!this.searched) {\n                            this.focusNewMessage()\n                        }\n                    })\n                    .catch(error => {\n                        this.isFetching = false\n                        formUtil.handleErrors(error)\n                    })\n            },\n            chatRoomUpdated() {\n                this.GetRoom({\n                        uuid: this.activeConversation.chatRoom.uuid\n                    })\n                    .then(response => {\n                        const newChatRoomInfo = response.chatRoom\n                        this.activeConversation.chatRoom = newChatRoomInfo\n\n                        if(response.hasLeft) {\n                            this.leaveChatRoomChannel(newChatRoomInfo)\n                        }\n                    })\n                    .catch(error => {\n                        formUtil.handleErrors(error)\n                    })\n            },\n\n            // POST DATA & JOIN LEAVE METHODS\n            postMessage() {\n                if (!this.newMessage.message) {\n                    return\n                }\n\n                this.newMessage.message = this.removeHtmlTags(this.newMessage.message.trim())\n\n                const messageObj = {\n                    uuid: this.newMessageRequestUUID,\n                    message: this.newMessage.message,\n                    user: this.user,\n                    sentAt: MomentTz.now(this.vars.serverDateTimeFormat),\n                    status: 'sending',\n                }\n                this.newMessageRequestUUID = uuid()\n\n                this.newMessage = _.cloneDeep(this.initialNewMessage)\n                this.noMoreMessages = false\n                this.putMessageToFeed(messageObj)\n\n                window.setTimeout(() => {\n                    this.scrollTo(\"vue-scroll-messages\", 100)\n                    this.focusNewMessage()\n                }, 300)\n\n                this.SendMessage({\n                        message: messageObj.message,\n                        chatRoom: this.activeConversation.chatRoom,\n                        user: this.activeConversation.user,\n                    })\n                    .then(response => {\n                        this.messageSentSuccess(messageObj, response)\n                    })\n                    .catch(error => {\n                        this.messageSendingFailed(messageObj, error)\n                    })\n            },\n            attachmentUploadStarted(count) {\n                if (!this.newMessage.attachments || this.newMessage.attachments.length) {\n                    return\n                }\n\n                const messageObj = {\n                    uuid: this.newMessageRequestUUID,\n                    message: null,\n                    user: this.user,\n                    sentAt: moment.utc().format(this.vars.serverDateTimeFormat),\n                    status: 'sending',\n                }\n                this.newMessageRequestUUID = uuid()\n\n                this.newMessage = _.cloneDeep(this.initialNewMessage)\n                this.putMessageToFeed(messageObj)\n\n                window.setTimeout(() => {\n                    this.scrollTo(\"vue-scroll-messages\", 100)\n                    this.focusNewMessage()\n                }, 300)\n            },\n            attachmentUploaded(response) {\n                if(! (response && response.meta && response.meta.requestUuid)) {\n                    this.$toasted.error($t('misc.error_unknown'), this.$toastConfig.error)\n                    return\n                }\n                EventBus.$emit('RESET_UPLOAD')\n                this.messageSentSuccess({\n                    uuid: response.meta.requestUuid\n                }, response)\n            },\n            attachmentUploadError(error) {\n                if(! (error && error.meta && error.meta.requestUuid)) {\n                    this.$toasted.error($t('misc.error_unknown'), this.$toastConfig.error)\n                    return\n                }\n                EventBus.$emit('RESET_UPLOAD')\n                if (error) {\n                    this.messageSendingFailed({\n                        uuid: error.meta.requestUuid\n                    }, error)\n                }\n            },\n            messageSentSuccess(oldMessage, newMessageResponse) {\n\n                const newMessage = newMessageResponse.data\n                this.PatchMessageInFeed({\n                    old: oldMessage,\n                    new: {\n                        ...newMessage,\n                        newUuid: newMessage.uuid,\n                        uuid: oldMessage.uuid\n                    },\n                })\n\n\n\n\n                if (!this.activeConversation.chatRoom) {\n                    this.joinChatRoomChannel(newMessage.chatRoom)\n\n                    this.GetRoom({\n                            uuid: newMessage.chatRoom.uuid\n                        })\n                        .then(response => {\n                            this.activeConversation.chatRoom = response.chatRoom\n\n                            if (this.activeConversation.chatRoom && this.activeConversation.chatRoom.hasOwnProperty('chats')) {\n                                delete this.activeConversation.chatRoom.chats\n                            }\n                        })\n                        .catch(error => {\n                            formUtil.handleErrors(error)\n                        })\n                }\n            },\n            messageSendingFailed(oldMessage, error) {\n                this.PatchMessageInFeed({\n                    old: oldMessage,\n                    new: {\n                        ...oldMessage,\n                        status: 'error',\n                        error: formUtil.getError(error)\n                    },\n                })\n            },\n            noNeedCallback() {\n                this.afterUploadComplete()\n            },\n            joinChatRoomChannel(chatRoom) {\n                window.EchoOpts.subscriptions.chatRoom = window.Echo.join(`ChatRoom.${chatRoom.uuid}`)\n                this.chatRoomChannel = window.EchoOpts.subscriptions.chatRoom\n                this.chatRoomChannel.listen('ChatMessageSentToRoom', this.newMessageReceived)\n                this.chatRoomChannel.listen('ChatRoomUpdated', this.chatRoomUpdated)\n                this.chatRoomChannel.listenForWhisper('typing', this.anotherUserTyping)\n            },\n            leaveChatRoomChannel(chatRoom) {\n                if (this.chatRoomChannel) {\n                    this.chatRoomChannel.stopListening('ChatMessageSentToRoom')\n                    this.chatRoomChannel = null\n                }\n\n                if (chatRoom) {\n                    window.Echo.leave(`ChatRoom.${chatRoom.uuid}`)\n                }\n\n                if(window.EchoOpts && window.EchoOpts.subscriptions) {\n                    window.EchoOpts.subscriptions.chatRoom = null\n                }\n            },\n\n            // HELPER METHODS OR EVENT CALLBACKS\n            enterPressedEvt(fnCallback, event) {\n                if (this.enterToSubmit) {\n                    return enterPressed(fnCallback, event)\n                }\n                return false\n            },\n            putMessageToFeed(message) {\n                if (this.messages.data.findIndex(c => c.uuid === message.uuid) !== -1) {\n                    return\n                }\n                this.PutMessageToFeed(message)\n            },\n            focusNewMessage() {\n                if (this.$refs[\"newMessageInput\"]) {\n                    this.$refs['newMessageInput'].focus()\n                }\n            },\n            scrollTo(refId, pos) {\n                if (this.$refs[refId]) {\n                    this.$refs[refId].scrollTo({\n                            y: `${pos}%`\n                        },\n                        300\n                    )\n                }\n            },\n            scrollToLatestMessages() {\n                this.scrollTo(\"vue-scroll-messages\", 100)\n            },\n            handleMessageScroll: _.debounce(function(vertical, horizontal) {\n                if (vertical.process > 0.95) {\n                    this.showScrollToLatestBtn = false\n                    this.newUnreadMessageOnFeed = false\n                } else {\n                    if(!this.searched || (this.searched && vertical.process !== 0)) {\n                        this.showScrollToLatestBtn = true\n                    }\n                }\n\n                if (vertical.process < 0.5 && !this.isFetching && !this.noMoreMessages) {\n                    this.fetchMessages()\n                }\n            }, 500),\n            handleRoomsScroll: _.debounce(function(vertical, horizontal) {\n                if (vertical.process > 0.5 && !this.isFetching) {\n                    this.fetchRooms()\n                }\n            }, 500),\n            isTyping: _.throttle(function() {\n                if (this.chatRoomChannel) {\n                    this.chatRoomChannel.whisper('typing', {\n                        user: this.user,\n                    })\n                }\n            }, 500, {\n                'leading': true,\n                'trailing': false\n            }),\n            anotherUserTyping({ user }) {\n                this.typingUser = user.name\n\n                if (this.typingUserTimeout) {\n                    clearTimeout(this.typingUserTimeout)\n                }\n                this.typingUserTimeout = setTimeout(() => {\n                    this.typingUser = null\n                }, 1500)\n            },\n            newMessageReceived(message) {\n                if (!message) {\n                    return\n                }\n                message = formatKeysToCamelCase(message)\n                if (message && message.user && message.user.uuid !== this.userUuid) {\n                    this.putMessageToFeed(message)\n                    // playIncomingMessage()\n\n                    window.setTimeout(() => {\n                        const { v, h } = this.$refs[\"vue-scroll-messages\"].getScrollProcess()\n                        if (v > 0.5) {\n                            this.scrollToLatestMessages()\n                        } else {\n                            this.showScrollToLatestBtn = true\n                            this.newUnreadMessageOnFeed = true\n                        }\n                    }, 300)\n\n                }\n            },\n            appendEmoji(emoji) {\n\n\n                this.newMessage.message += emoji\n            },\n\n            removeHtmlTags(content) {\n                content = content ? content.replace(/<[^>]+/gmi, (match) => match.replace(/ on\\w+=\"[^\"]*\"/gmi, '')).replace(/<(?!\\/?b>|\\/?p>|\\/?strong>|\\/?div>|\\/?br>|\\/?span>|\\/?em>|\\/?i>)[^>]+>/gmi, '') : content\n                return content\n            },\n\n            doInit() {\n                this.initialNewMessage = _.cloneDeep(this.newMessage)\n\n                if (this.activeChatRoom) {\n                    this.goToConversation({ room: this.activeChatRoom })\n                } else if(this.activeChatUser) {\n                    this.goToConversation({ user: this.activeChatUser })\n                } else {\n                    this.fetchRooms()\n                }\n\n                if(this.isBoxShown) {\n                    document.body.classList.add(\"chat-box-shown\")\n                }\n\n                setTimeout(() => {\n                    this.showChatOptions = this.boxVisibility\n                }, 1000)\n            }\n        },\n        directives: {\n            focus: {\n                inserted(el) {\n                    el.focus()\n                },\n            },\n        },\n        mounted() {\n            setTimeout(() => {\n                this.isBoxShown = this.boxVisibility\n            }, 100)\n\n            setTimeout(() => {\n                this.doInit()\n            }, 200)\n        },\n        created() {\n            if(this.configs.system && this.configs.system.allowedFileExtensions) {\n                this.preRequisite.uploaderConfig.allowedExtensions = this.configs.system.allowedFileExtensions\n            }\n            if(this.configs.system && this.configs.system.postMaxSize) {\n                this.preRequisite.uploaderConfig.allowedMaxFileSize = this.configs.system.postMaxSize\n            }\n        },\n        beforeDestroy() {\n            document.body.classList.remove(\"chat-box-shown\")\n            if(window.Echo && window.EchoOpts) {\n                if(window.EchoOpts.subscriptions && window.EchoOpts.subscriptions.chatRoom) {\n                    window.EchoOpts.subscriptions.chatRoom.stopListening('ChatMessageSentToRoom')\n                    window.EchoOpts.subscriptions.chatRoom = null\n                }\n            }\n        },\n\n    }\n\n</script>\n\n<style lang=\"scss\">\n\n</style>\n","<template>\n    <div class=\"message-item-wrapper\">\n        <div :class=\"['message-item', {'has-attachments': hasAttachment}]\">\n            <span class=\"tail-in\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8 13\" width=\"8\" height=\"13\"><path opacity=\".13\" fill=\"#0000000\" d=\"M1.533 3.568L8 12.193V1H2.812C1.042 1 .474 2.156 1.533 3.568z\"></path><path fill=\"currentColor\" d=\"M1.533 2.568L8 11.193V0H2.812C1.042 0 .474 1.156 1.533 2.568z\"></path></svg></span>\n\n            <div class=\"message-header\">\n                <h6 class=\"message-user\">{{ message.user.profile.name }}</h6>\n            </div>\n\n            <div v-if=\"hasAttachment\" class=\"message-content\">\n\n                <template v-for=\"attachment in message.attachments\">\n                    <div :class=\"['attachment', {'non-image-attachment': (attachment.mime !== 'image/png' && attachment.mime !== 'image/jpeg')}]\" :key=\"attachment.uuid\">\n\n                        <template v-if=\"attachment.mime === 'image/png' || attachment.mime === 'image/jpeg'\">\n                            <a :href=\"attachment.fullUrl\" target=\"_blank\" class=\"attachment-link\">\n                                <img :src=\"attachment.fullUrl\" class=\"img-fluid\" :alt=\"attachment.filename\">\n                            </a>\n\n                            <div class=\"attachment-shadow\"></div>\n\n                            <div class=\"message-footer small\">\n                                <span v-if=\"message.sentAt\" class=\"message-created-at\">{{ message.sentAt | momentCalendarTz }}</span>\n\n                                <span :class=\"['message-status', message.status]\"><i :class=\"messageStatusIcons[message.status]\"></i></span>\n                            </div>\n                        </template>\n\n                        <template v-else>\n                            <a :href=\"attachment.fullUrl\" target=\"_blank\" class=\"attachment-link\">\n                                <div class=\"attachment-details\">\n                                    <div class=\"attachment-icon\"><i :class=\"['fas', fileIcons[attachment.mime]]\"></i></div>\n                                    <div class=\"attachment-name\"><h6>{{ attachment.filename }}</h6></div>\n                                    <div class=\"download-icon\"><i class=\"far fa-arrow-alt-circle-down\"></i></div>\n                                </div>\n                            </a>\n\n                            <div class=\"message-footer small\">\n                                <div class=\"left-side\">\n                                    <span class=\"attachment-type\">{{ fileMimeTypes[attachment.mime] }}</span><span class=\"attachment-size\">{{ attachment.humanReadableSize }}</span>\n                                </div>\n\n                                <div class=\"right-side\">\n                                    <span v-if=\"message.sentAt\" class=\"message-created-at\">{{ message.sentAt | momentCalendarTz }}</span>\n\n                                    <span :class=\"['message-status', message.status]\"><i :class=\"messageStatusIcons[message.status]\"></i></span>\n                                </div>\n                            </div>\n                        </template>\n\n                    </div>\n                </template>\n\n            </div>\n\n            <div v-else class=\"message-content\">\n\n                <div class=\"message-body\">\n                    <div class=\"message\" v-if=\"message.status === 'sent'\" v-html=\"message.message\"></div>\n                    <div class=\"message\" v-else>{{ removeHtmlTags(message.message) }}</div>\n                    <div class=\"footer-space\"></div>\n                </div>\n\n                <div class=\"message-footer small\">\n                    <span v-if=\"message.sentAt\" class=\"message-created-at\">{{ message.sentAt | momentCalendarTz }}</span>\n\n                    <span :class=\"['message-status', message.status]\"><i :class=\"messageStatusIcons[message.status]\"></i></span>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            message: {\n                type: Object,\n                required: true\n            },\n            fileIcons: {\n                type: Object,\n                required: true\n            },\n            fileMimeTypes: {\n                type: Object,\n                required: true\n            },\n            vars: {\n                type: Object,\n                default() {\n                    return {}\n                }\n            },\n        },\n        data() {\n            return {\n                messageStatusIcons: {\n                    'sending': 'far fa-clock',\n                    'sent': 'fas fa-check',\n                    'delivered': 'fas fa-check-double',\n                    'read': 'fas fa-check-double',\n                    'error': 'fas fa-exclamation-triangle',\n                },\n            }\n        },\n        computed: {\n            hasAttachment() {\n                return (!this.message.message || this.message.message === '%%chat_attachment_%%') && this.message.attachments && this.message.attachments.length\n            }\n        },\n        methods: {\n            removeHtmlTags(content) {\n                if(!content) {\n                    return content\n                }\n                content = content.replace(/<[^>]+/gmi, (match) => match.replace(/ on\\w+=\"[^\"]*\"/gmi, '')).replace(/<(?!\\/?>)[^>]+>/gmi, ' ').replace(/\\s+/gmi, ' ')\n                let tmp = document.createElement(\"DIV\")\n                tmp.innerHTML = content\n                return tmp.textContent || tmp.innerText || \"\"\n            },\n        },\n    }\n</script>\n","<template>\n    <li @click=\"onClickRoomItem\" :class=\"['room-item']\">\n        <div class=\"item-thumb\">\n            <user-avatar :user=\"computedAvatar\" :size=\"40\" />\n        </div>\n\n        <div class=\"item-details\">\n            <div class=\"title-row\">\n                <h6 class=\"item-title\">{{ roomName }}</h6>\n                <small class=\"item-meta\" v-if=\"showLastMessage && room.lastConversationAt\">{{ room.lastConversationAt | momentCalendarTz }}</small>\n            </div>\n\n            <template v-if=\"showLastMessage && room.lastConversationAt\">\n                <div v-if=\"room.message\" class=\"meta-row text-ellipsis\">\n                    <span v-if=\"room.message === '%%chat_attachment_%%'\">{{ $t('upload.attachment') }}</span>\n                    <span v-else>{{ removeHtmlTags(room.message) }}</span>\n                </div>\n                <div v-else-if=\"room.isGroup\" class=\"meta-row text-ellipsis\">\n                    <span>{{ room.memberCount }} {{ $t('chat.members') }}</span>\n                </div>\n            </template>\n\n\n            <div v-if=\"room.unreadMessages\" class=\"unread-messages\">\n                <span class=\"badge badge-sm badge-pill badge-light\">{{ room.unreadMessages }}</span>\n            </div>\n        </div>\n\n        <slot name=\"actions\">\n            <div v-if=\"showCustomAction\" class=\"item-actions action-buttons floating-action-buttons\">\n                <button type=\"button\" @click.stop=\"doCustomAction\"><i :class=\"customActionIcon\"></i></button>\n            </div>\n        </slot>\n    </li>\n</template>\n\n<script>\n    import { mapGetters, mapActions } from 'vuex'\n    export default {\n        props: {\n            room: {\n                type: Object,\n                required: true\n            },\n            roomName: {\n                type: String,\n                required: true\n            },\n            showLastMessage: {\n                type: Boolean,\n                default: true\n            },\n            clickAction: {\n                type: String,\n                default: 'goToConversation'\n            },\n            showCustomAction: {\n                type: Boolean,\n                default: false\n            },\n            clickActionOnCustom: {\n                type: String,\n                default: 'removeMember'\n            },\n            customActionIcon: {\n                type: String,\n                default: 'fas fa-times'\n            },\n            vars: {\n                type: Object,\n                default() {\n                    return {}\n                }\n            }\n        },\n        computed: {\n            ...mapGetters('user', {\n                'userUuid': 'uuid'\n            }),\n            computedAvatar() {\n                return this.room.isGroup || !this.room.member ? this.room : this.room.member\n            },\n        },\n        methods: {\n            removeHtmlTags(content) {\n                if(!content) {\n                    return content\n                }\n                content = content.replace(/<(?!\\/?>)[^>]+>/gmi, ' ').replace(/\\s+/gmi, ' ')\n                let tmp = document.createElement(\"DIV\")\n                tmp.innerHTML = content\n                return tmp.textContent || tmp.innerText || \"\"\n            },\n            onClickRoomItem() {\n                if(this.computedAvatar.uuid === this.userUuid) {\n                    return\n                }\n\n                if(this.clickAction === 'addToGroup') {\n                    this.$emit(this.clickAction, {\n                        room: null,\n                        user: this.room.member ? this.room.member : this.room\n                    })\n                } else {\n                    if(this.room.isGroup || this.room.member) {\n                        this.$emit(this.clickAction, {\n                            room: this.room,\n                            user: null\n                        })\n                    } else {\n                        this.$emit(this.clickAction, {\n                            room: null,\n                            user: this.room\n                        })\n                    }\n                }\n            },\n            doCustomAction() {\n                this.$emit(this.clickActionOnCustom, {\n                    room: this.room,\n                    user: this.room.member ? this.room.member : this.room\n                })\n            },\n        }\n    }\n</script>\n","<template>\n    <div class=\"cb-inner-window settings-container\">\n        <div class=\"settings-wrapper\" v-if=\"activeContainer === 'settings'\">\n            <div class=\"settings\">\n                <vue-scroll ref=\"vue-scroll-settings\" id=\"vue-scroll-settings\">\n                    <div class=\"settings-list\">\n\n                        <switch-wrapper :label=\"$t('config.chat.enable_auto_open')\" class=\"text-light\">\n                            <base-switch v-model=\"formData.chat.enableAutoOpen\" design=\"success\"></base-switch>\n                        </switch-wrapper>\n\n                        <switch-wrapper :label=\"$t('config.chat.enter_to_submit')\" class=\"text-light\">\n                            <base-switch v-model=\"formData.chat.enterToSubmit\" design=\"success\"></base-switch>\n                        </switch-wrapper>\n\n\n                        <switch-wrapper :label=\"$t('config.chat.mute_sound_notification')\" class=\"text-light\">\n                            <base-switch v-model=\"formData.chat.muteSoundNotification\" design=\"success\"></base-switch>\n                        </switch-wrapper>\n                    </div>\n                </vue-scroll>\n            </div>\n\n            <div class=\"settings-footer\">\n                <base-button type=\"button\" design=\"primary\" size=\"block\" @click=\"submit\">{{ $t('general.save') }}</base-button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import form from '@mixins/config-form'\n    import * as MomentTz from '@core/filters/momentz'\n\n    export default {\n        extends: form,\n        props: {\n            activeContainer: {\n                type: String,\n                default: 'home',\n                required: true\n            },\n        },\n        watch: {\n            activeContainer(newVal, oldVal) {\n                if(newVal === 'settings' && newVal !== oldVal) {\n                    this.formData = Object.assign({}, this.formData, _.cloneDeep(this.initialFormData))\n                }\n            },\n        },\n        data() {\n            return {\n                now: MomentTz.now({moment: true}),\n                formData: {\n                    chat: {\n                        enableAutoOpen: false,\n                        enterToSubmit: false,\n                        muteSoundNotification: false,\n                    },\n                    override: true\n                },\n                useUserPreference: true,\n            }\n        },\n        methods: {\n            afterSubmitSuccess() {\n                this.$emit('goHome')\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .settings-wrapper {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        max-height: 100%;\n        overflow: hidden;\n\n        .settings {\n            display: flex;\n            flex-grow: 1;\n            justify-content: stretch;\n            align-items: stretch;\n            height: 100%;\n            max-height: 100%;\n            overflow: hidden;\n            position: relative;\n\n            padding: 0.85rem;\n            display: flex;\n            flex-direction: row;\n\n            .switch-wrapper > .input-group-material-label {\n                padding-left: 0;\n            }\n        }\n\n        .settings-footer {\n            box-shadow: 0 -2px 6px 0 rgba(0, 0, 0, 0.4);\n            z-index: 1;\n        }\n    }\n</style>\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Muli:300,400,600,700,800,900);\", \"\"]);\n\n// module\nexports.push([module.id, \".chatgroup-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  max-height: 100%;\\n  overflow: hidden;\\n}\\n.chatgroup-wrapper .chatgroup {\\n  display: flex;\\n  flex-grow: 1;\\n  justify-content: stretch;\\n  align-items: stretch;\\n  height: 100%;\\n  max-height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  padding: 0 0.85rem;\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name h6 {\\n  line-height: 2rem;\\n  color: rgba(255, 255, 255, 0.8);\\n  margin-bottom: 0;\\n  flex-grow: 1;\\n  display: flex;\\n  justify-content: flex-start;\\n  align-items: center;\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name input.form-control {\\n  background: rgba(0, 0, 0, 0.1);\\n  border: 1px solid transparent;\\n  border-top-color: rgba(0, 0, 0, 0.05);\\n  border-bottom-color: rgba(0, 0, 0, 0.05);\\n  width: 100%;\\n  height: 100%;\\n  color: #fff;\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name input.form-control:hover {\\n  background: rgba(0, 0, 0, 0.15);\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name input.form-control:focus, .chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name input.form-control:active {\\n  background: rgba(0, 0, 0, 0.35);\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name input.form-control::-moz-placeholder {\\n  color: #6c7580;\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name input.form-control:-ms-input-placeholder {\\n  color: #6c7580;\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name input.form-control::placeholder {\\n  color: #6c7580;\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name .chatgroup-actions {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-end;\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name .chatgroup-actions > button {\\n  flex-grow: 1;\\n  background: transparent;\\n  border: none;\\n  color: white;\\n  white-space: nowrap;\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 30px;\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-name .chatgroup-actions > button:hover {\\n  background: rgba(0, 0, 0, 0.2);\\n  padding-bottom: 2px;\\n}\\n.chatgroup-wrapper .chatgroup .chatgroup-form .chatgroup-members-header {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.4);\\n}\\n.chatgroup-wrapper .chatgroup-footer {\\n  box-shadow: 0 -2px 6px 0 rgba(0, 0, 0, 0.4);\\n  z-index: 1;\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  justify-content: center;\\n}\\n.chatgroup-wrapper .chatgroup-footer button {\\n  flex: 1 0 auto;\\n  margin: 0;\\n}\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".settings-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  max-height: 100%;\\n  overflow: hidden;\\n}\\n.settings-wrapper .settings {\\n  display: flex;\\n  flex-grow: 1;\\n  justify-content: stretch;\\n  align-items: stretch;\\n  height: 100%;\\n  max-height: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  padding: 0.85rem;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.settings-wrapper .settings .switch-wrapper > .input-group-material-label {\\n  padding-left: 0;\\n}\\n.settings-wrapper .settings-footer {\\n  box-shadow: 0 -2px 6px 0 rgba(0, 0, 0, 0.4);\\n  z-index: 1;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./group.vue?vue&type=style&index=0&lang=scss&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./group.vue?vue&type=style&index=0&lang=scss&\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./group.vue?vue&type=style&index=0&lang=scss&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settings.vue?vue&type=style&index=0&lang=scss&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settings.vue?vue&type=style&index=0&lang=scss&\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settings.vue?vue&type=style&index=0&lang=scss&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"conversation-header\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"room-thumb\" },\n      [_c(\"user-avatar\", { attrs: { user: _vm.computedUser, size: 40 } })],\n      1\n    ),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"room-details\" }, [\n      _c(\"div\", { staticClass: \"title-row\" }, [\n        _c(\"h6\", { staticClass: \"room-title\" }, [_vm._v(_vm._s(_vm.roomName))])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"meta-row\" },\n        [\n          !_vm.room.isGroup && !_vm.typingUser\n            ? [\n                _vm.isLiveOnline(_vm.computedUser)\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"general.online\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"general.offline\")))])\n              ]\n            : _vm.room.isGroup\n            ? [\n                _vm.typingUser\n                  ? [\n                      _c(\"span\", { staticClass: \"typing-indicator\" }, [\n                        _vm._v(\n                          _vm._s(_vm.typingUser) +\n                            \" \" +\n                            _vm._s(_vm.$t(\"general.is_typing\"))\n                        )\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"span\", [_vm._v(\"  \")])\n                    ]\n                  : _vm.roomMembers\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.roomMembers))])\n                  : _c(\"span\", [\n                      _vm._v(\n                        _vm._s(_vm.room.memberCount) +\n                          \" \" +\n                          _vm._s(_vm.$t(\"chat.members\"))\n                      )\n                    ])\n              ]\n            : [\n                _c(\n                  \"span\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.typingUser,\n                        expression: \"typingUser\"\n                      }\n                    ],\n                    staticClass: \"typing-indicator\"\n                  },\n                  [_vm._v(_vm._s(_vm.$t(\"general.is_typing\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\"span\", [_vm._v(\"  \")])\n              ]\n        ],\n        2\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"room-btns action-buttons\" }, [\n      _vm.room.isGroup &&\n      !_vm.room.hasLeft &&\n      _vm.configs &&\n      _vm.configs.chat.groupChat\n        ? _c(\n            \"button\",\n            { attrs: { type: \"button\" }, on: { click: _vm.goToGroup } },\n            [_c(\"i\", { staticClass: \"fas fa-info-circle\" })]\n          )\n        : _vm._e()\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"cb-inner-window chatgroup-container\" }, [\n    _vm.activeContainer === \"chatgroup\"\n      ? _c(\"div\", { staticClass: \"chatgroup-wrapper\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"chatgroup\" },\n            [\n              _c(\n                \"vue-scroll\",\n                {\n                  ref: \"vue-scroll-chatgroup\",\n                  attrs: { id: \"vue-scroll-chatgroup\" }\n                },\n                [\n                  _c(\n                    \"div\",\n                    { staticClass: \"chatgroup-form\" },\n                    [\n                      _vm.activeGroup\n                        ? [\n                            !_vm.showEditNameForm\n                              ? _c(\n                                  \"div\",\n                                  { staticClass: \"chatgroup-name mt-2\" },\n                                  [\n                                    _c(\"h6\", [\n                                      _vm._v(_vm._s(_vm.formData.name))\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _vm.activeGroup.canModerate\n                                      ? _c(\n                                          \"div\",\n                                          { staticClass: \"chatgroup-actions\" },\n                                          [\n                                            _c(\n                                              \"button\",\n                                              {\n                                                attrs: { type: \"button\" },\n                                                on: { click: _vm.editName }\n                                              },\n                                              [\n                                                _c(\"i\", {\n                                                  staticClass:\n                                                    \"fas fa-pencil-alt\"\n                                                })\n                                              ]\n                                            )\n                                          ]\n                                        )\n                                      : _vm._e()\n                                  ]\n                                )\n                              : _vm.activeGroup.canModerate\n                              ? _c(\n                                  \"div\",\n                                  { staticClass: \"chatgroup-name mt-2\" },\n                                  [\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.formData.name,\n                                          expression: \"formData.name\"\n                                        }\n                                      ],\n                                      ref: \"groupName\",\n                                      staticClass: \"form-control\",\n                                      attrs: {\n                                        type: \"text\",\n                                        placeholder: _vm.$t(\n                                          \"chat.chat_group_name\"\n                                        )\n                                      },\n                                      domProps: { value: _vm.formData.name },\n                                      on: {\n                                        input: function($event) {\n                                          if ($event.target.composing) {\n                                            return\n                                          }\n                                          _vm.$set(\n                                            _vm.formData,\n                                            \"name\",\n                                            $event.target.value\n                                          )\n                                        }\n                                      }\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"div\",\n                                      { staticClass: \"chatgroup-actions\" },\n                                      [\n                                        _c(\n                                          \"button\",\n                                          {\n                                            attrs: { type: \"button\" },\n                                            on: { click: _vm.updateName }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-check\"\n                                            })\n                                          ]\n                                        )\n                                      ]\n                                    )\n                                  ]\n                                )\n                              : _vm._e()\n                          ]\n                        : [\n                            _c(\"div\", { staticClass: \"chatgroup-name\" }, [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.formData.name,\n                                    expression: \"formData.name\"\n                                  }\n                                ],\n                                ref: \"groupName\",\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  placeholder: _vm.$t(\"chat.chat_group_name\")\n                                },\n                                domProps: { value: _vm.formData.name },\n                                on: {\n                                  input: function($event) {\n                                    if ($event.target.composing) {\n                                      return\n                                    }\n                                    _vm.$set(\n                                      _vm.formData,\n                                      \"name\",\n                                      $event.target.value\n                                    )\n                                  }\n                                }\n                              })\n                            ]),\n                            _vm._v(\" \"),\n                            _vm.hasRole(\"admin\")\n                              ? _c(\n                                  \"base-checkbox\",\n                                  {\n                                    staticClass: \"ml-3 mt-4\",\n                                    model: {\n                                      value: _vm.formData.isPublicGroup,\n                                      callback: function($$v) {\n                                        _vm.$set(\n                                          _vm.formData,\n                                          \"isPublicGroup\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"formData.isPublicGroup\"\n                                    }\n                                  },\n                                  [\n                                    _c(\"span\", { staticClass: \"text-light\" }, [\n                                      _vm._v(\n                                        _vm._s(_vm.$t(\"chat.is_public_group\")) +\n                                          \"?\"\n                                      )\n                                    ])\n                                  ]\n                                )\n                              : _vm._e()\n                          ],\n                      _vm._v(\" \"),\n                      _c(\"div\", {\n                        staticClass: \"chatgroup-members-header pt-3\"\n                      }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"chatgroup-members\" },\n                        [\n                          _vm._t(\"members\", null, {\n                            members: _vm.formData.members\n                          })\n                        ],\n                        2\n                      )\n                    ],\n                    2\n                  )\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          !_vm.activeGroup\n            ? _c(\n                \"div\",\n                { staticClass: \"chatgroup-footer\" },\n                [\n                  _c(\n                    \"base-button\",\n                    {\n                      attrs: { type: \"button\", design: \"dark-primary\" },\n                      on: { click: _vm.goBack }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"general.cancel\")))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"base-button\",\n                    {\n                      attrs: { type: \"button\", design: \"primary\" },\n                      on: { click: _vm.createGroup }\n                    },\n                    [_vm._v(_vm._s(_vm.$t(\"general.save\")))]\n                  )\n                ],\n                1\n              )\n            : _vm._e()\n        ])\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"chat-box-header\" }, [\n    _c(\"h6\", { staticClass: \"cb-header-title\" }, [\n      _vm._v(_vm._s(_vm.computedTitle))\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      { staticClass: \"cb-header-buttons action-buttons\" },\n      [\n        _vm.activeContainer === \"chatgroup\"\n          ? [\n              _c(\n                \"button\",\n                {\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.$emit(\"goBack\")\n                    }\n                  }\n                },\n                [\n                  _c(\"i\", {\n                    class: [\n                      \"fas\",\n                      { \"fa-chevron-left\": _vm.activeContainer === \"chatgroup\" }\n                    ]\n                  })\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"auto-width\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.$emit(\"showAddMemberScreen\")\n                    }\n                  }\n                },\n                [\n                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"px-2\" }, [\n                    _vm._v(_vm._s(_vm.$t(\"chat.add\")))\n                  ])\n                ]\n              )\n            ]\n          : [\n              _vm.activeContainer !== \"home\"\n                ? _c(\n                    \"button\",\n                    {\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.$emit(\"goHome\")\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", {\n                        class: [\n                          \"fas\",\n                          {\n                            \"fa-chevron-left\":\n                              _vm.activeContainer === \"conversation\"\n                          },\n                          {\n                            \"fa-chevron-right\":\n                              _vm.activeContainer === \"settings\"\n                          }\n                        ]\n                      })\n                    ]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.activeContainer !== \"settings\"\n                ? [\n                    _c(\n                      \"button\",\n                      {\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.$emit(\"toggleSearch\")\n                          }\n                        }\n                      },\n                      [_c(\"i\", { staticClass: \"fas fa-search\" })]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.$emit(\"goToSettings\")\n                          }\n                        }\n                      },\n                      [_c(\"i\", { staticClass: \"fas fa-cog\" })]\n                    )\n                  ]\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.activeContainer === \"home\" &&\n              !_vm.fullPage &&\n              _vm.configs.chat.seaparateWindow\n                ? _c(\n                    \"router-link\",\n                    {\n                      staticClass: \"button\",\n                      attrs: { to: { name: \"appChat\" } }\n                    },\n                    [_c(\"i\", { staticClass: \"fas fa-external-link-alt\" })]\n                  )\n                : _vm._e()\n            ],\n        _vm._v(\" \"),\n        !_vm.fullPage\n          ? _c(\n              \"button\",\n              {\n                attrs: { type: \"button\" },\n                on: {\n                  click: function($event) {\n                    return _vm.$emit(\"hideChatBox\")\n                  }\n                }\n              },\n              [_c(\"i\", { staticClass: \"fas fa-times\" })]\n            )\n          : _vm._e()\n      ],\n      2\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      class: [\n        \"chat-box-wrapper\",\n        { shown: _vm.isBoxShown },\n        { \"search-shown\": _vm.isSearchShown },\n        { \"chat-box-lg\": _vm.largeChatBox },\n        { \"show-chat-options\": _vm.showChatOptions }\n      ]\n    },\n    [\n      _c(\"chat-box-header\", {\n        attrs: {\n          \"active-container\": _vm.activeContainer,\n          configs: _vm.configs,\n          \"full-page\": _vm.fullPage\n        },\n        on: {\n          goHome: _vm.goHome,\n          toggleSearch: _vm.toggleSearch,\n          goToSettings: _vm.goToSettings,\n          goBack: _vm.goBack,\n          hideChatBox: _vm.hideChatBox,\n          showAddMemberScreen: _vm.showAddMemberScreen\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"search\" }, [\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.searchTerm,\n              expression: \"searchTerm\"\n            }\n          ],\n          ref: \"searchTerm\",\n          staticClass: \"form-control\",\n          attrs: {\n            type: \"text\",\n            placeholder: _vm.$t(\"general.search_helper_default_text\")\n          },\n          domProps: { value: _vm.searchTerm },\n          on: {\n            keydown: function($event) {\n              if (\n                !$event.type.indexOf(\"key\") &&\n                _vm._k($event.keyCode, \"esc\", 27, $event.key, [\"Esc\", \"Escape\"])\n              ) {\n                return null\n              }\n              return _vm.toggleSearch.apply(null, arguments)\n            },\n            input: [\n              function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.searchTerm = $event.target.value\n              },\n              _vm.searchTermChanged\n            ]\n          }\n        }),\n        _vm._v(\" \"),\n        _vm.searchTerm\n          ? _c(\n              \"button\",\n              {\n                staticClass: \"clear-btn\",\n                attrs: { type: \"button\" },\n                on: { click: _vm.hideSearch }\n              },\n              [_vm._v(_vm._s(_vm.$t(\"general.clear\")))]\n            )\n          : _vm._e()\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        {\n          class: [\n            \"chat-box\",\n            { \"showing-settings\": _vm.activeContainer === \"settings\" },\n            { \"showing-chats\": _vm.activeContainer === \"conversation\" },\n            { \"showing-chatgroup\": _vm.activeContainer === \"chatgroup\" }\n          ]\n        },\n        [\n          _vm.configs.chat.groupChat\n            ? _c(\"chat-box-group\", {\n                ref: \"chatBoxGroup\",\n                attrs: {\n                  \"active-container\": _vm.activeContainer,\n                  \"active-group\": _vm.activeGroup,\n                  \"members-to-add\": _vm.activeGroupMembersToAdd,\n                  \"members-to-remove\": _vm.activeGroupMembersToRemove\n                },\n                on: {\n                  goToConversation: _vm.goToConversation,\n                  goBack: _vm.goBack,\n                  goHome: _vm.goHome\n                },\n                scopedSlots: _vm._u(\n                  [\n                    {\n                      key: \"members\",\n                      fn: function(ref) {\n                        var members = ref.members\n                        return [\n                          _c(\n                            \"div\",\n                            { staticClass: \"rooms-wrapper\" },\n                            [\n                              _vm.searchTerm && _vm.searched\n                                ? [\n                                    _vm.roomsSearch.rooms.length ||\n                                    _vm.roomsSearch.users.length\n                                      ? _c(\n                                          \"ul\",\n                                          { staticClass: \"rooms\" },\n                                          [\n                                            _vm._l(\n                                              _vm.roomsSearch.rooms,\n                                              function(room) {\n                                                return [\n                                                  !room.isGroup\n                                                    ? _c(\"chat-room-item\", {\n                                                        key: room.uuid,\n                                                        attrs: {\n                                                          room: room,\n                                                          \"room-name\":\n                                                            room.name,\n                                                          \"click-action\":\n                                                            \"addToGroup\",\n                                                          vars: _vm.vars,\n                                                          \"show-last-message\": false\n                                                        },\n                                                        on: {\n                                                          addToGroup:\n                                                            _vm.addToGroup\n                                                        }\n                                                      })\n                                                    : _vm._e()\n                                                ]\n                                              }\n                                            ),\n                                            _vm._v(\" \"),\n                                            _vm._l(\n                                              _vm.roomsSearch.users,\n                                              function(user) {\n                                                return _c(\"chat-room-item\", {\n                                                  key: user.uuid,\n                                                  attrs: {\n                                                    room: user,\n                                                    \"room-name\":\n                                                      user.profile.name,\n                                                    \"click-action\":\n                                                      \"addToGroup\",\n                                                    vars: _vm.vars\n                                                  },\n                                                  on: {\n                                                    addToGroup: _vm.addToGroup\n                                                  }\n                                                })\n                                              }\n                                            )\n                                          ],\n                                          2\n                                        )\n                                      : _c(\"div\", { staticClass: \"no-data\" }, [\n                                          _c(\"h5\", [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.$t(\"chat.no_result_found\")\n                                              )\n                                            )\n                                          ])\n                                        ])\n                                  ]\n                                : [\n                                    _c(\n                                      \"ul\",\n                                      { staticClass: \"rooms\" },\n                                      _vm._l(members, function(member) {\n                                        return _c(\"chat-room-item\", {\n                                          key: member.user.uuid,\n                                          attrs: {\n                                            room: member.user,\n                                            \"room-name\":\n                                              member.user.profile.name,\n                                            \"click-action\": \"goToConversation\",\n                                            \"show-custom-action\":\n                                              _vm.activeGroup &&\n                                              _vm.activeGroup.canModerate,\n                                            \"click-action-on-custom\":\n                                              \"removeMember\",\n                                            vars: _vm.vars\n                                          },\n                                          on: {\n                                            goToConversation:\n                                              _vm.goToConversation,\n                                            removeMember:\n                                              _vm.removeMemberFromGroup\n                                          }\n                                        })\n                                      }),\n                                      1\n                                    )\n                                  ]\n                            ],\n                            2\n                          )\n                        ]\n                      }\n                    }\n                  ],\n                  null,\n                  false,\n                  3003752676\n                )\n              })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"chat-box-settings\", {\n            attrs: { \"active-container\": _vm.activeContainer },\n            on: { goHome: _vm.goHome }\n          }),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"cb-inner-window rooms-container\" },\n            [\n              _c(\n                \"vue-scroll\",\n                {\n                  ref: \"vue-scroll-rooms\",\n                  attrs: { id: \"vue-scroll-rooms\" },\n                  on: { \"handle-scroll\": _vm.handleRoomsScroll }\n                },\n                [\n                  _c(\n                    \"div\",\n                    { staticClass: \"rooms-wrapper\" },\n                    [\n                      (_vm.searchTerm && _vm.searched) ||\n                      _vm.newChatScreen ||\n                      _vm.newGroupScreen\n                        ? [\n                            _vm.roomsSearch.rooms.length ||\n                            _vm.roomsSearch.users.length\n                              ? _c(\n                                  \"ul\",\n                                  { staticClass: \"rooms\" },\n                                  [\n                                    !_vm.newChatScreen || !_vm.newGroupScreen\n                                      ? [\n                                          _vm._l(\n                                            _vm.roomsSearch.rooms,\n                                            function(room) {\n                                              return _c(\"chat-room-item\", {\n                                                key: room.uuid,\n                                                attrs: {\n                                                  room: room,\n                                                  \"room-name\": room.name,\n                                                  vars: _vm.vars\n                                                },\n                                                on: {\n                                                  goToConversation:\n                                                    _vm.goToConversation\n                                                }\n                                              })\n                                            }\n                                          ),\n                                          _vm._v(\" \"),\n                                          _vm.roomsSearch.users.length\n                                            ? _c(\n                                                \"li\",\n                                                {\n                                                  staticClass:\n                                                    \"my-2 pl-3 font-weight-500\"\n                                                },\n                                                [\n                                                  _vm._v(\n                                                    _vm._s(_vm.$t(\"user.users\"))\n                                                  )\n                                                ]\n                                              )\n                                            : _vm._e()\n                                        ]\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm._l(_vm.roomsSearch.users, function(\n                                      user\n                                    ) {\n                                      return _c(\"chat-room-item\", {\n                                        key: user.uuid,\n                                        attrs: {\n                                          room: user,\n                                          \"room-name\": user.profile.name,\n                                          \"click-action\": \"goToConversation\",\n                                          vars: _vm.vars\n                                        },\n                                        on: {\n                                          goToConversation: _vm.goToConversation\n                                        }\n                                      })\n                                    })\n                                  ],\n                                  2\n                                )\n                              : _c(\"div\", { staticClass: \"no-data\" }, [\n                                  _c(\"h5\", [\n                                    _vm._v(\n                                      _vm._s(_vm.$t(\"chat.no_result_found\"))\n                                    )\n                                  ])\n                                ])\n                          ]\n                        : [\n                            _vm.rooms.data && _vm.rooms.data.length\n                              ? _c(\n                                  \"ul\",\n                                  { staticClass: \"rooms\" },\n                                  _vm._l(_vm.rooms.data, function(room) {\n                                    return _c(\"chat-room-item\", {\n                                      key: room.uuid,\n                                      attrs: {\n                                        room: room,\n                                        \"room-name\": room.name,\n                                        vars: _vm.vars\n                                      },\n                                      on: {\n                                        goToConversation: _vm.goToConversation\n                                      }\n                                    })\n                                  }),\n                                  1\n                                )\n                              : _c(\"div\", { staticClass: \"no-data\" }, [\n                                  _c(\"h5\", [\n                                    _vm._v(_vm._s(_vm.$t(\"chat.no_chats_yet\")))\n                                  ])\n                                ])\n                          ]\n                    ],\n                    2\n                  )\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"chat-option-buttons\" }, [\n                _vm.configs.chat.groupChat\n                  ? _c(\n                      \"button\",\n                      {\n                        attrs: { type: \"button\" },\n                        on: { click: _vm.goToCreateGroup }\n                      },\n                      [_c(\"i\", { staticClass: \"fas fa-users\" })]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.startNewChat }\n                  },\n                  [_c(\"i\", { staticClass: \"fas fa-user\" })]\n                ),\n                _vm._v(\" \"),\n                _vm._m(0)\n              ])\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"cb-inner-window conversation-container\" }, [\n            _vm.activeConversation\n              ? _c(\n                  \"div\",\n                  { staticClass: \"conversation-wrapper\" },\n                  [\n                    _vm.activeConversation.chatRoom\n                      ? _c(\"conversation-header\", {\n                          attrs: {\n                            room: _vm.activeConversation.chatRoom,\n                            \"room-name\": _vm.activeConversation.chatRoom.name,\n                            vars: _vm.vars,\n                            configs: _vm.configs,\n                            typingUser: _vm.typingUser\n                          },\n                          on: { goToGroup: _vm.goToGroup }\n                        })\n                      : _vm.activeConversation.user\n                      ? _c(\"conversation-header\", {\n                          attrs: {\n                            room: _vm.activeConversation.user,\n                            \"room-name\":\n                              _vm.activeConversation.user.profile.name,\n                            vars: _vm.vars,\n                            configs: _vm.configs,\n                            typingUser: _vm.typingUser\n                          }\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        class: [\n                          \"conversation\",\n                          { \"no-messages\": !_vm.hasMessages },\n                          { \"got-new-messages\": _vm.newUnreadMessageOnFeed },\n                          { \"show-scroll-btn\": _vm.showScrollToLatestBtn }\n                        ]\n                      },\n                      [\n                        _vm.hasMessages\n                          ? _c(\n                              \"div\",\n                              { staticClass: \"messages-list-container\" },\n                              [\n                                _c(\n                                  \"vue-scroll\",\n                                  {\n                                    ref: \"vue-scroll-messages\",\n                                    attrs: { id: \"vue-scroll-messages\" },\n                                    on: {\n                                      \"handle-scroll\": _vm.handleMessageScroll\n                                    }\n                                  },\n                                  [\n                                    _c(\n                                      \"div\",\n                                      {\n                                        class: [\n                                          \"messages-list-wrapper\",\n                                          {\n                                            \"show-name\":\n                                              _vm.activeConversation.chatRoom &&\n                                              _vm.activeConversation.chatRoom\n                                                .isGroup\n                                          }\n                                        ]\n                                      },\n                                      [\n                                        _vm.searchTerm && _vm.searched\n                                          ? [\n                                              _vm.messagesSearch.length\n                                                ? _vm._l(\n                                                    _vm.messagesSearch,\n                                                    function(message, mIndex) {\n                                                      return _c(\n                                                        \"message-item\",\n                                                        {\n                                                          key: message.uuid,\n                                                          class: [\n                                                            {\n                                                              \"own-message\":\n                                                                message.user\n                                                                  .uuid ===\n                                                                _vm.userUuid\n                                                            },\n                                                            {\n                                                              \"prev-diff-own\":\n                                                                !_vm.messages\n                                                                  .data[\n                                                                  mIndex + 1\n                                                                ] ||\n                                                                _vm.messages\n                                                                  .data[\n                                                                  mIndex + 1\n                                                                ].user.uuid !==\n                                                                  message.user\n                                                                    .uuid\n                                                            },\n                                                            {\n                                                              \"next-diff-own\":\n                                                                !_vm.messages\n                                                                  .data[\n                                                                  mIndex - 1\n                                                                ] ||\n                                                                _vm.messages\n                                                                  .data[\n                                                                  mIndex - 1\n                                                                ].user.uuid !==\n                                                                  message.user\n                                                                    .uuid\n                                                            }\n                                                          ],\n                                                          attrs: {\n                                                            message: message,\n                                                            vars: _vm.vars,\n                                                            \"file-icons\":\n                                                              _vm.fileIcons,\n                                                            \"file-mime-types\":\n                                                              _vm.fileMimeTypes\n                                                          }\n                                                        }\n                                                      )\n                                                    }\n                                                  )\n                                                : _c(\n                                                    \"div\",\n                                                    { staticClass: \"no-data\" },\n                                                    [\n                                                      _c(\"h5\", [\n                                                        _vm._v(\n                                                          _vm._s(\n                                                            _vm.$t(\n                                                              \"chat.no_result_found\"\n                                                            )\n                                                          )\n                                                        )\n                                                      ])\n                                                    ]\n                                                  )\n                                            ]\n                                          : [\n                                              _vm._l(\n                                                _vm.messages.data,\n                                                function(message, mIndex) {\n                                                  return _c(\"message-item\", {\n                                                    key: message.uuid,\n                                                    class: [\n                                                      {\n                                                        \"own-message\":\n                                                          message.user.uuid ===\n                                                          _vm.userUuid\n                                                      },\n                                                      {\n                                                        \"prev-diff-own\":\n                                                          !_vm.messages.data[\n                                                            mIndex + 1\n                                                          ] ||\n                                                          _vm.messages.data[\n                                                            mIndex + 1\n                                                          ].user.uuid !==\n                                                            message.user.uuid\n                                                      },\n                                                      {\n                                                        \"next-diff-own\":\n                                                          !_vm.messages.data[\n                                                            mIndex - 1\n                                                          ] ||\n                                                          _vm.messages.data[\n                                                            mIndex - 1\n                                                          ].user.uuid !==\n                                                            message.user.uuid\n                                                      }\n                                                    ],\n                                                    attrs: {\n                                                      message: message,\n                                                      vars: _vm.vars,\n                                                      \"file-icons\":\n                                                        _vm.fileIcons,\n                                                      \"file-mime-types\":\n                                                        _vm.fileMimeTypes\n                                                    }\n                                                  })\n                                                }\n                                              ),\n                                              _vm._v(\" \"),\n                                              _vm.isFetching\n                                                ? _c(\n                                                    \"div\",\n                                                    {\n                                                      staticClass:\n                                                        \"d-flex justify-content-center my-2\"\n                                                    },\n                                                    [\n                                                      _c(\"animated-loader\", {\n                                                        attrs: {\n                                                          \"is-loading\":\n                                                            _vm.isFetching,\n                                                          \"loader-color\":\n                                                            _vm.vars.colors\n                                                              .light,\n                                                          \"overlay-color\":\n                                                            \"transparent\",\n                                                          size: \"inline\",\n                                                          \"loader-size\": \"20px\",\n                                                          \"loader-stroke\": \"3px\"\n                                                        }\n                                                      })\n                                                    ],\n                                                    1\n                                                  )\n                                                : _vm._e(),\n                                              _vm._v(\" \"),\n                                              _vm.noMoreMessages\n                                                ? _c(\n                                                    \"div\",\n                                                    {\n                                                      staticClass:\n                                                        \"message-item my-4 d-flex justify-content-center align-items-center\"\n                                                    },\n                                                    [\n                                                      _c(\n                                                        \"h5\",\n                                                        {\n                                                          staticClass:\n                                                            \"text-muted\"\n                                                        },\n                                                        [\n                                                          _vm._v(\n                                                            \"\\n                                            \" +\n                                                              _vm._s(\n                                                                _vm.$t(\n                                                                  \"chat.no_more_messages\"\n                                                                )\n                                                              ) +\n                                                              \"\\n                                        \"\n                                                          )\n                                                        ]\n                                                      )\n                                                    ]\n                                                  )\n                                                : _vm._e()\n                                            ]\n                                      ],\n                                      2\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          : _c(\n                              \"div\",\n                              {\n                                staticClass:\n                                  \"d-flex justify-content-center align-items-center min-height-300px\"\n                              },\n                              [\n                                _c(\"h5\", { staticClass: \"text-muted\" }, [\n                                  _vm._v(\n                                    \"\\n                            \" +\n                                      _vm._s(_vm.$t(\"chat.no_messages_yet\")) +\n                                      \"\\n                        \"\n                                  )\n                                ])\n                              ]\n                            ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"scroll-latest-btn\",\n                            on: { click: _vm.scrollToLatestMessages }\n                          },\n                          [_vm._m(1)]\n                        )\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    (_vm.activeConversation.chatRoom &&\n                      !_vm.activeConversation.chatRoom.isGroup) ||\n                    (!_vm.activeConversation.chatRoom &&\n                      _vm.activeConversation.user) ||\n                    (_vm.activeConversation.chatRoom &&\n                      _vm.activeConversation.chatRoom.isGroup &&\n                      !_vm.activeConversation.chatRoom.hasLeft)\n                      ? _c(\"div\", { staticClass: \"conversation-footer\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"new-message\" },\n                            [\n                              _c(\n                                \"at\",\n                                {\n                                  attrs: {\n                                    members: _vm.computedParticipants,\n                                    \"name-key\": \"name\"\n                                  },\n                                  on: { at: _vm.handleAt },\n                                  scopedSlots: _vm._u(\n                                    [\n                                      {\n                                        key: \"item\",\n                                        fn: function(s) {\n                                          return [\n                                            _c(\n                                              \"span\",\n                                              { staticClass: \"mentioned\" },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(s.item.name) + \" \"\n                                                ),\n                                                _c(\n                                                  \"span\",\n                                                  {\n                                                    staticClass:\n                                                      \"bracketed text-muted-md\"\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(s.item.username)\n                                                    )\n                                                  ]\n                                                )\n                                              ]\n                                            )\n                                          ]\n                                        }\n                                      },\n                                      {\n                                        key: \"embeddedItem\",\n                                        fn: function(s) {\n                                          return [\n                                            _c(\"span\", [\n                                              _c(\n                                                \"span\",\n                                                {\n                                                  staticClass:\n                                                    \"tag mentioned bg-white text-primary mx-1 px-2 py-1 rounded\",\n                                                  attrs: {\n                                                    \"data-uuid\":\n                                                      s.current &&\n                                                      s.current.user\n                                                        ? s.current.user.uuid\n                                                        : \"\"\n                                                  }\n                                                },\n                                                [_vm._v(_vm._s(s.current.name))]\n                                              ),\n                                              _vm._v(\" \"),\n                                              _c(\"span\")\n                                            ])\n                                          ]\n                                        }\n                                      }\n                                    ],\n                                    null,\n                                    false,\n                                    1168386567\n                                  ),\n                                  model: {\n                                    value: _vm.newMessage.message,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.newMessage, \"message\", $$v)\n                                    },\n                                    expression: \"newMessage.message\"\n                                  }\n                                },\n                                [\n                                  _vm._v(\" \"),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"div\",\n                                    {\n                                      ref: \"newMessageInput\",\n                                      staticClass:\n                                        \"new-message-input form-control\",\n                                      attrs: {\n                                        contenteditable: \"\",\n                                        \"data-placeholder\": _vm.$t(\n                                          \"chat.type_a_message\"\n                                        ),\n                                        placeholder: _vm.$t(\n                                          \"chat.type_a_message\"\n                                        )\n                                      },\n                                      on: {\n                                        keydown: [\n                                          _vm.isTyping,\n                                          function($event) {\n                                            if (\n                                              !$event.type.indexOf(\"key\") &&\n                                              _vm._k(\n                                                $event.keyCode,\n                                                \"enter\",\n                                                13,\n                                                $event.key,\n                                                \"Enter\"\n                                              )\n                                            ) {\n                                              return null\n                                            }\n                                            return _vm.enterPressedEvt(\n                                              _vm.postMessage,\n                                              $event\n                                            )\n                                          }\n                                        ]\n                                      }\n                                    },\n                                    [_c(\"div\")]\n                                  )\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"emoji-picker\", {\n                                staticClass: \"emoji-picker-wrapper\",\n                                attrs: { search: _vm.searchTermEmoji },\n                                on: { emoji: _vm.appendEmoji },\n                                scopedSlots: _vm._u(\n                                  [\n                                    {\n                                      key: \"emoji-invoker\",\n                                      fn: function(ref) {\n                                        var clickEvent = ref.events.click\n                                        return _c(\n                                          \"button\",\n                                          {\n                                            staticClass:\n                                              \"btn-custom emoji-button\",\n                                            attrs: { type: \"button\" },\n                                            on: {\n                                              click: function($event) {\n                                                $event.stopPropagation()\n                                                return clickEvent.apply(\n                                                  null,\n                                                  arguments\n                                                )\n                                              }\n                                            }\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"far fa-grin\"\n                                            })\n                                          ]\n                                        )\n                                      }\n                                    },\n                                    {\n                                      key: \"emoji-picker\",\n                                      fn: function(ref) {\n                                        var emojis = ref.emojis\n                                        var insert = ref.insert\n                                        var display = ref.display\n                                        return _c(\n                                          \"div\",\n                                          {\n                                            staticClass:\n                                              \"emoji-picker-container\"\n                                          },\n                                          [\n                                            _c(\n                                              \"div\",\n                                              { staticClass: \"emoji-picker\" },\n                                              [\n                                                _c(\n                                                  \"div\",\n                                                  {\n                                                    staticClass:\n                                                      \"emoji-picker__search\"\n                                                  },\n                                                  [\n                                                    _c(\"input\", {\n                                                      directives: [\n                                                        {\n                                                          name: \"model\",\n                                                          rawName: \"v-model\",\n                                                          value:\n                                                            _vm.searchTermEmoji,\n                                                          expression:\n                                                            \"searchTermEmoji\"\n                                                        },\n                                                        {\n                                                          name: \"focus\",\n                                                          rawName: \"v-focus\"\n                                                        }\n                                                      ],\n                                                      attrs: { type: \"text\" },\n                                                      domProps: {\n                                                        value:\n                                                          _vm.searchTermEmoji\n                                                      },\n                                                      on: {\n                                                        input: function(\n                                                          $event\n                                                        ) {\n                                                          if (\n                                                            $event.target\n                                                              .composing\n                                                          ) {\n                                                            return\n                                                          }\n                                                          _vm.searchTermEmoji =\n                                                            $event.target.value\n                                                        }\n                                                      }\n                                                    })\n                                                  ]\n                                                ),\n                                                _vm._v(\" \"),\n                                                _c(\n                                                  \"div\",\n                                                  _vm._l(emojis, function(\n                                                    emojiGroup,\n                                                    category\n                                                  ) {\n                                                    return _c(\n                                                      \"div\",\n                                                      {\n                                                        key: category,\n                                                        staticClass: \"mt-2\"\n                                                      },\n                                                      [\n                                                        _c(\"h5\", [\n                                                          _vm._v(\n                                                            _vm._s(category)\n                                                          )\n                                                        ]),\n                                                        _vm._v(\" \"),\n                                                        _c(\n                                                          \"div\",\n                                                          {\n                                                            staticClass:\n                                                              \"emojis\"\n                                                          },\n                                                          _vm._l(\n                                                            emojiGroup,\n                                                            function(\n                                                              emoji,\n                                                              emojiName\n                                                            ) {\n                                                              return _c(\n                                                                \"span\",\n                                                                {\n                                                                  key: emojiName,\n                                                                  attrs: {\n                                                                    title: emojiName\n                                                                  },\n                                                                  on: {\n                                                                    click: function(\n                                                                      $event\n                                                                    ) {\n                                                                      return insert(\n                                                                        emoji\n                                                                      )\n                                                                    }\n                                                                  }\n                                                                },\n                                                                [\n                                                                  _vm._v(\n                                                                    _vm._s(\n                                                                      emoji\n                                                                    )\n                                                                  )\n                                                                ]\n                                                              )\n                                                            }\n                                                          ),\n                                                          0\n                                                        )\n                                                      ]\n                                                    )\n                                                  }),\n                                                  0\n                                                )\n                                              ]\n                                            )\n                                          ]\n                                        )\n                                      }\n                                    }\n                                  ],\n                                  null,\n                                  false,\n                                  3848860834\n                                )\n                              }),\n                              _vm._v(\" \"),\n                              !_vm.newMessage.message &&\n                              _vm.configs.chat.fileSharing\n                                ? _c(\"file-uploader\", {\n                                    attrs: {\n                                      url: \"/chat/messages\",\n                                      \"name-label\": \"upload.attachment\",\n                                      \"names-label\": \"upload.attachments\",\n                                      \"button-icon\": \"fas fa-paperclip\",\n                                      \"button-classes\": \"btn-sm\",\n                                      \"button-design\": \"custom\",\n                                      \"hide-button-label\": \"\",\n                                      \"hide-file-list\": \"\",\n                                      options: _vm.preRequisite.uploaderConfig,\n                                      data: _vm.newMessage.attachments,\n                                      \"additional-form-data\":\n                                        _vm.activeConversation,\n                                      \"request-identifier\":\n                                        _vm.newMessageRequestUUID\n                                    },\n                                    on: {\n                                      uploading: _vm.attachmentUploadStarted,\n                                      updated: _vm.attachmentUploaded,\n                                      error: _vm.attachmentUploadError,\n                                      noNeed: _vm.noNeedCallback\n                                    }\n                                  })\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn-custom post-message-button\",\n                                  attrs: {\n                                    type: \"button\",\n                                    title: _vm.$t(\"general.submit\")\n                                  },\n                                  on: { click: _vm.postMessage }\n                                },\n                                [_c(\"i\", { staticClass: \"far fa-paper-plane\" })]\n                              )\n                            ],\n                            1\n                          )\n                        ])\n                      : _vm._e()\n                  ],\n                  1\n                )\n              : _vm._e()\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"button\", { attrs: { type: \"button\" } }, [\n      _c(\"i\", { staticClass: \"fas fa-comment-dots fa-flip-horizontal\" })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"scroll-btn-wrapper\" }, [\n      _c(\"i\", { staticClass: \"fas fa-angle-double-down\" })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"message-item-wrapper\" }, [\n    _c(\n      \"div\",\n      { class: [\"message-item\", { \"has-attachments\": _vm.hasAttachment }] },\n      [\n        _c(\"span\", { staticClass: \"tail-in\" }, [\n          _c(\n            \"svg\",\n            {\n              attrs: {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 8 13\",\n                width: \"8\",\n                height: \"13\"\n              }\n            },\n            [\n              _c(\"path\", {\n                attrs: {\n                  opacity: \".13\",\n                  fill: \"#0000000\",\n                  d:\n                    \"M1.533 3.568L8 12.193V1H2.812C1.042 1 .474 2.156 1.533 3.568z\"\n                }\n              }),\n              _c(\"path\", {\n                attrs: {\n                  fill: \"currentColor\",\n                  d:\n                    \"M1.533 2.568L8 11.193V0H2.812C1.042 0 .474 1.156 1.533 2.568z\"\n                }\n              })\n            ]\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"message-header\" }, [\n          _c(\"h6\", { staticClass: \"message-user\" }, [\n            _vm._v(_vm._s(_vm.message.user.profile.name))\n          ])\n        ]),\n        _vm._v(\" \"),\n        _vm.hasAttachment\n          ? _c(\n              \"div\",\n              { staticClass: \"message-content\" },\n              [\n                _vm._l(_vm.message.attachments, function(attachment) {\n                  return [\n                    _c(\n                      \"div\",\n                      {\n                        key: attachment.uuid,\n                        class: [\n                          \"attachment\",\n                          {\n                            \"non-image-attachment\":\n                              attachment.mime !== \"image/png\" &&\n                              attachment.mime !== \"image/jpeg\"\n                          }\n                        ]\n                      },\n                      [\n                        attachment.mime === \"image/png\" ||\n                        attachment.mime === \"image/jpeg\"\n                          ? [\n                              _c(\n                                \"a\",\n                                {\n                                  staticClass: \"attachment-link\",\n                                  attrs: {\n                                    href: attachment.fullUrl,\n                                    target: \"_blank\"\n                                  }\n                                },\n                                [\n                                  _c(\"img\", {\n                                    staticClass: \"img-fluid\",\n                                    attrs: {\n                                      src: attachment.fullUrl,\n                                      alt: attachment.filename\n                                    }\n                                  })\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"div\", { staticClass: \"attachment-shadow\" }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"message-footer small\" },\n                                [\n                                  _vm.message.sentAt\n                                    ? _c(\n                                        \"span\",\n                                        { staticClass: \"message-created-at\" },\n                                        [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm._f(\"momentCalendarTz\")(\n                                                _vm.message.sentAt\n                                              )\n                                            )\n                                          )\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"span\",\n                                    {\n                                      class: [\n                                        \"message-status\",\n                                        _vm.message.status\n                                      ]\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        class:\n                                          _vm.messageStatusIcons[\n                                            _vm.message.status\n                                          ]\n                                      })\n                                    ]\n                                  )\n                                ]\n                              )\n                            ]\n                          : [\n                              _c(\n                                \"a\",\n                                {\n                                  staticClass: \"attachment-link\",\n                                  attrs: {\n                                    href: attachment.fullUrl,\n                                    target: \"_blank\"\n                                  }\n                                },\n                                [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"attachment-details\" },\n                                    [\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"attachment-icon\" },\n                                        [\n                                          _c(\"i\", {\n                                            class: [\n                                              \"fas\",\n                                              _vm.fileIcons[attachment.mime]\n                                            ]\n                                          })\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"attachment-name\" },\n                                        [\n                                          _c(\"h6\", [\n                                            _vm._v(_vm._s(attachment.filename))\n                                          ])\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _vm._m(0, true)\n                                    ]\n                                  )\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"message-footer small\" },\n                                [\n                                  _c(\"div\", { staticClass: \"left-side\" }, [\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"attachment-type\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.fileMimeTypes[attachment.mime]\n                                          )\n                                        )\n                                      ]\n                                    ),\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"attachment-size\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(attachment.humanReadableSize)\n                                        )\n                                      ]\n                                    )\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"div\", { staticClass: \"right-side\" }, [\n                                    _vm.message.sentAt\n                                      ? _c(\n                                          \"span\",\n                                          { staticClass: \"message-created-at\" },\n                                          [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm._f(\"momentCalendarTz\")(\n                                                  _vm.message.sentAt\n                                                )\n                                              )\n                                            )\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"span\",\n                                      {\n                                        class: [\n                                          \"message-status\",\n                                          _vm.message.status\n                                        ]\n                                      },\n                                      [\n                                        _c(\"i\", {\n                                          class:\n                                            _vm.messageStatusIcons[\n                                              _vm.message.status\n                                            ]\n                                        })\n                                      ]\n                                    )\n                                  ])\n                                ]\n                              )\n                            ]\n                      ],\n                      2\n                    )\n                  ]\n                })\n              ],\n              2\n            )\n          : _c(\"div\", { staticClass: \"message-content\" }, [\n              _c(\"div\", { staticClass: \"message-body\" }, [\n                _vm.message.status === \"sent\"\n                  ? _c(\"div\", {\n                      staticClass: \"message\",\n                      domProps: { innerHTML: _vm._s(_vm.message.message) }\n                    })\n                  : _c(\"div\", { staticClass: \"message\" }, [\n                      _vm._v(_vm._s(_vm.removeHtmlTags(_vm.message.message)))\n                    ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"footer-space\" })\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"message-footer small\" }, [\n                _vm.message.sentAt\n                  ? _c(\"span\", { staticClass: \"message-created-at\" }, [\n                      _vm._v(\n                        _vm._s(_vm._f(\"momentCalendarTz\")(_vm.message.sentAt))\n                      )\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"span\", { class: [\"message-status\", _vm.message.status] }, [\n                  _c(\"i\", { class: _vm.messageStatusIcons[_vm.message.status] })\n                ])\n              ])\n            ])\n      ]\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"download-icon\" }, [\n      _c(\"i\", { staticClass: \"far fa-arrow-alt-circle-down\" })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"li\",\n    { class: [\"room-item\"], on: { click: _vm.onClickRoomItem } },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"item-thumb\" },\n        [_c(\"user-avatar\", { attrs: { user: _vm.computedAvatar, size: 40 } })],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"item-details\" },\n        [\n          _c(\"div\", { staticClass: \"title-row\" }, [\n            _c(\"h6\", { staticClass: \"item-title\" }, [\n              _vm._v(_vm._s(_vm.roomName))\n            ]),\n            _vm._v(\" \"),\n            _vm.showLastMessage && _vm.room.lastConversationAt\n              ? _c(\"small\", { staticClass: \"item-meta\" }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm._f(\"momentCalendarTz\")(_vm.room.lastConversationAt)\n                    )\n                  )\n                ])\n              : _vm._e()\n          ]),\n          _vm._v(\" \"),\n          _vm.showLastMessage && _vm.room.lastConversationAt\n            ? [\n                _vm.room.message\n                  ? _c(\"div\", { staticClass: \"meta-row text-ellipsis\" }, [\n                      _vm.room.message === \"%%chat_attachment_%%\"\n                        ? _c(\"span\", [\n                            _vm._v(_vm._s(_vm.$t(\"upload.attachment\")))\n                          ])\n                        : _c(\"span\", [\n                            _vm._v(_vm._s(_vm.removeHtmlTags(_vm.room.message)))\n                          ])\n                    ])\n                  : _vm.room.isGroup\n                  ? _c(\"div\", { staticClass: \"meta-row text-ellipsis\" }, [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(_vm.room.memberCount) +\n                            \" \" +\n                            _vm._s(_vm.$t(\"chat.members\"))\n                        )\n                      ])\n                    ])\n                  : _vm._e()\n              ]\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.room.unreadMessages\n            ? _c(\"div\", { staticClass: \"unread-messages\" }, [\n                _c(\n                  \"span\",\n                  { staticClass: \"badge badge-sm badge-pill badge-light\" },\n                  [_vm._v(_vm._s(_vm.room.unreadMessages))]\n                )\n              ])\n            : _vm._e()\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _vm._t(\"actions\", function() {\n        return [\n          _vm.showCustomAction\n            ? _c(\n                \"div\",\n                {\n                  staticClass:\n                    \"item-actions action-buttons floating-action-buttons\"\n                },\n                [\n                  _c(\n                    \"button\",\n                    {\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function($event) {\n                          $event.stopPropagation()\n                          return _vm.doCustomAction.apply(null, arguments)\n                        }\n                      }\n                    },\n                    [_c(\"i\", { class: _vm.customActionIcon })]\n                  )\n                ]\n              )\n            : _vm._e()\n        ]\n      })\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"cb-inner-window settings-container\" }, [\n    _vm.activeContainer === \"settings\"\n      ? _c(\"div\", { staticClass: \"settings-wrapper\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"settings\" },\n            [\n              _c(\n                \"vue-scroll\",\n                {\n                  ref: \"vue-scroll-settings\",\n                  attrs: { id: \"vue-scroll-settings\" }\n                },\n                [\n                  _c(\n                    \"div\",\n                    { staticClass: \"settings-list\" },\n                    [\n                      _c(\n                        \"switch-wrapper\",\n                        {\n                          staticClass: \"text-light\",\n                          attrs: {\n                            label: _vm.$t(\"config.chat.enable_auto_open\")\n                          }\n                        },\n                        [\n                          _c(\"base-switch\", {\n                            attrs: { design: \"success\" },\n                            model: {\n                              value: _vm.formData.chat.enableAutoOpen,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.formData.chat,\n                                  \"enableAutoOpen\",\n                                  $$v\n                                )\n                              },\n                              expression: \"formData.chat.enableAutoOpen\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"switch-wrapper\",\n                        {\n                          staticClass: \"text-light\",\n                          attrs: {\n                            label: _vm.$t(\"config.chat.enter_to_submit\")\n                          }\n                        },\n                        [\n                          _c(\"base-switch\", {\n                            attrs: { design: \"success\" },\n                            model: {\n                              value: _vm.formData.chat.enterToSubmit,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.formData.chat,\n                                  \"enterToSubmit\",\n                                  $$v\n                                )\n                              },\n                              expression: \"formData.chat.enterToSubmit\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"switch-wrapper\",\n                        {\n                          staticClass: \"text-light\",\n                          attrs: {\n                            label: _vm.$t(\"config.chat.mute_sound_notification\")\n                          }\n                        },\n                        [\n                          _c(\"base-switch\", {\n                            attrs: { design: \"success\" },\n                            model: {\n                              value: _vm.formData.chat.muteSoundNotification,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.formData.chat,\n                                  \"muteSoundNotification\",\n                                  $$v\n                                )\n                              },\n                              expression: \"formData.chat.muteSoundNotification\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"settings-footer\" },\n            [\n              _c(\n                \"base-button\",\n                {\n                  attrs: { type: \"button\", design: \"primary\", size: \"block\" },\n                  on: { click: _vm.submit }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"general.save\")))]\n              )\n            ],\n            1\n          )\n        ])\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./conversation-header.vue?vue&type=template&id=2ce8a029&\"\nimport script from \"./conversation-header.vue?vue&type=script&lang=js&\"\nexport * from \"./conversation-header.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2ce8a029')) {\n      api.createRecord('2ce8a029', component.options)\n    } else {\n      api.reload('2ce8a029', component.options)\n    }\n    module.hot.accept(\"./conversation-header.vue?vue&type=template&id=2ce8a029&\", function () {\n      api.rerender('2ce8a029', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/chat-box/conversation-header.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./conversation-header.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./conversation-header.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./conversation-header.vue?vue&type=template&id=2ce8a029&\"","import { render, staticRenderFns } from \"./group.vue?vue&type=template&id=56715911&\"\nimport script from \"./group.vue?vue&type=script&lang=js&\"\nexport * from \"./group.vue?vue&type=script&lang=js&\"\nimport style0 from \"./group.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('56715911')) {\n      api.createRecord('56715911', component.options)\n    } else {\n      api.reload('56715911', component.options)\n    }\n    module.hot.accept(\"./group.vue?vue&type=template&id=56715911&\", function () {\n      api.rerender('56715911', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/chat-box/group.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./group.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./group.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/style-loader/index.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./group.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./group.vue?vue&type=template&id=56715911&\"","import { render, staticRenderFns } from \"./header.vue?vue&type=template&id=b871232a&\"\nimport script from \"./header.vue?vue&type=script&lang=js&\"\nexport * from \"./header.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('b871232a')) {\n      api.createRecord('b871232a', component.options)\n    } else {\n      api.reload('b871232a', component.options)\n    }\n    module.hot.accept(\"./header.vue?vue&type=template&id=b871232a&\", function () {\n      api.rerender('b871232a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/chat-box/header.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./header.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./header.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./header.vue?vue&type=template&id=b871232a&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7eb429e4&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7eb429e4')) {\n      api.createRecord('7eb429e4', component.options)\n    } else {\n      api.reload('7eb429e4', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=7eb429e4&\", function () {\n      api.rerender('7eb429e4', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/chat-box/index.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=7eb429e4&\"","import { render, staticRenderFns } from \"./message-item.vue?vue&type=template&id=5c5f8277&\"\nimport script from \"./message-item.vue?vue&type=script&lang=js&\"\nexport * from \"./message-item.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5c5f8277')) {\n      api.createRecord('5c5f8277', component.options)\n    } else {\n      api.reload('5c5f8277', component.options)\n    }\n    module.hot.accept(\"./message-item.vue?vue&type=template&id=5c5f8277&\", function () {\n      api.rerender('5c5f8277', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/chat-box/message-item.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./message-item.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./message-item.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./message-item.vue?vue&type=template&id=5c5f8277&\"","import { render, staticRenderFns } from \"./room-item.vue?vue&type=template&id=7c922152&\"\nimport script from \"./room-item.vue?vue&type=script&lang=js&\"\nexport * from \"./room-item.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7c922152')) {\n      api.createRecord('7c922152', component.options)\n    } else {\n      api.reload('7c922152', component.options)\n    }\n    module.hot.accept(\"./room-item.vue?vue&type=template&id=7c922152&\", function () {\n      api.rerender('7c922152', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/chat-box/room-item.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./room-item.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./room-item.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./room-item.vue?vue&type=template&id=7c922152&\"","import { render, staticRenderFns } from \"./settings.vue?vue&type=template&id=923098fe&\"\nimport script from \"./settings.vue?vue&type=script&lang=js&\"\nexport * from \"./settings.vue?vue&type=script&lang=js&\"\nimport style0 from \"./settings.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('923098fe')) {\n      api.createRecord('923098fe', component.options)\n    } else {\n      api.reload('923098fe', component.options)\n    }\n    module.hot.accept(\"./settings.vue?vue&type=template&id=923098fe&\", function () {\n      api.rerender('923098fe', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/chat-box/settings.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settings.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settings.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/style-loader/index.js!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-3!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settings.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./settings.vue?vue&type=template&id=923098fe&\"","import { mapGetters, mapActions } from 'vuex'\nimport * as ConfigAPI from '@api/config'\nimport { formatKeysToSnakeCase } from '@js/core/utils/formatter'\n\nexport default {\n    components: {},\n    data() {\n        return {\n            formData: {},\n            formErrors: {},\n            initialFormData: null,\n            initianLength: 0,\n            emptyFormData: null,\n            entity: null,\n            preRequisite: {},\n            isLoading: true,\n            useUserPreference: false,\n            dataType: null,\n            configType: '',\n        }\n    },\n    computed: {\n        ...mapGetters('config', {\n            configsWithPreference: 'configs',\n            configs: 'configsOriginal',\n            vars: 'vars',\n            allowExtraInput: 'allowExtraInput',\n        }),\n        formHasErrors() {\n            let ans = false\n            this.formErrors.objForEach(er => {\n                ans = er !== '' ? true : ans\n            })\n            return ans\n        },\n    },\n    methods: {\n        ...mapActions('config', [\n            'GetConfig',\n        ]),\n        ...mapActions('user', [\n            'GetUser',\n        ]),\n        ...mapActions('navigation', [\n            'Generate',\n        ]),\n        ...mapActions('common', [\n            'Custom',\n        ]),\n        findActualValue(value, options, key = 'uuid') {\n            return options.find(option => option[key] === value) || null\n        },\n        submit(preference = false) {\n            if(formUtil.isUnchanged(this.initialFormData, this.formData)) {\n                this.$toasted.info(this.$t('general.nothing_changed'), this.$toastConfig.info)\n                return false\n            }\n\n            this.isLoading = true\n\n            if(this.formData.hasOwnProperty('type')) {\n                this.formData.type = this.formData.type.snakeCase()\n            }\n\n            const storeFn = preference === true || this.useUserPreference ? ConfigAPI.updateUserPref : (this.configType === 'module' ? ConfigAPI.updateModule : ConfigAPI.update)\n\n            if (this.beforeSubmit && typeof this.beforeSubmit === \"function\") {\n                const shouldProceed = this.beforeSubmit()\n                if(shouldProceed === false) {\n                    this.isLoading = false\n                    return\n                }\n            }\n\n            storeFn(this.formData)\n                .then(response => {\n                    const fnToCall = preference === true || this.useUserPreference ? this.GetUser : this.GetConfig\n                    fnToCall()\n                        .then(() => {\n                            this.$toasted.success(response.message, this.$toastConfig)\n                            this.initialFormData = _.cloneDeep(this.formData)\n                            this.isLoading = false\n                        })\n                        .catch(error => {\n                            this.isLoading = false\n                            this.formErrors = formUtil.handleErrors(error)\n                        })\n\n                    if (typeof this.afterSubmit === \"function\") {\n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitSuccess === \"function\") {\n                        this.afterSubmitSuccess()\n                    }\n                })\n                .catch(error => {\n                    this.isLoading = false\n                    this.formErrors = formUtil.handleErrors(error)\n\n                    if (typeof this.afterSubmit === \"function\") {\n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitError === \"function\") {\n                        this.afterSubmitError()\n                    }\n                })\n        },\n        reset() {\n            formUtil.confirmAction()\n                .then((result) => {\n                    if (result.value) {\n                        this.formData = Object.assign({}, this.formData, _.cloneDeep(this.initialFormData))\n                    }\n                })\n        },\n        unsavedCheck(next) {\n            formUtil.unsavedCheckAlert(this.initialFormData, this.formData, next)\n        },\n        fillPreRequisite(response) {\n            this.preRequisite.objForEach((value, key) => {\n                this.preRequisite[key] = response.hasOwnProperty(key) ? response[key] : value\n            })\n\n            this.isLoading = false\n        },\n        fillFormData() {\n            this.isLoading = true\n            const configsToUse = this.useUserPreference ? this.configsWithPreference : this.configs\n            if(this.formData.type && configsToUse[this.formData.type]) {\n                this.formData = formUtil.assignValues(this.formData, configsToUse[this.formData.type])\n            }\n\n            if(this.formData.types && Array.isArray(this.formData.types)) {\n                this.formData.types.forEach((value) => {\n                    this.formData = formUtil.assignValues(this.formData, configsToUse[value])\n                })\n            }\n\n            if(this.formData.override) {\n                this.formData.objForEach((value, key) => {\n                    if(value && _.isObject(value)) {\n                        this.formData[key] = formUtil.assignValues(this.formData[key], configsToUse[key])\n                    } else {\n                        this.formData[key] = configsToUse[key] ? configsToUse[key] : value\n                    }\n                })\n            }\n\n            if (typeof this.addNewRow === \"function\" && typeof this.addNewRowIfNone === \"function\") {\n                this.addNewRowIfNone()\n            }\n\n            this.isLoading = false\n        },\n        async getInitialData(callbackFn) {\n            this.isLoading = true\n            try {\n                const response = await ConfigAPI.getPreRequisite(Object.keys(this.preRequisite).join(','))\n                this.fillPreRequisite(response)\n\n                if(callbackFn) {\n                    this.$nextTick(() => {\n                        callbackFn()\n                    })\n                }\n                return response\n            } catch (error) {\n                this.isLoading = false\n                this.formErrors = formUtil.handleErrors(error)\n                throw error\n            }\n        },\n    },\n    mounted() {\n        this.fillFormData()\n        this.initialFormData = _.cloneDeep(this.formData)\n    },\n    beforeDestroy () {\n        delete this.formData\n        delete this.formErrors\n        delete this.preRequisite\n    },\n    beforeRouteLeave(to, from, next) {\n        this.unsavedCheck(next)\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAjBA;AAqBA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAhBA;AAkBA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAxCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AAJA;AAlBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAZA;AAxCA;AAuDA;AAKA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAtEA;AAwEA;AACA;AACA;AACA;AACA;AA9KA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAVA;AAeA;AACA;AACA;AACA;AAHA;AAhBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkLA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AAJA;AAZA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAjBA;AAmBA;AAOA;AADA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA1CA;AA4CA;AAqvsBA;AAysBA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AA13BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AAJA;AAbA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AASA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AATA;AArCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AAJA;AA7BA;AAoCA;AAEA;AADA;AAGA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAvCA;AA7CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AANA;AAQA;AAVA;AAYA;AACA;AACA;AACA;AACA;AAHA;AA9BA;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3FA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxthpSA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5GA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACvCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACvCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAaaA;AACA;AAdA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAvIA;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApLA;;;;A","sourceRoot":""}