{"version":3,"file":"js/chunks/app/utility/note/view.js?id=8c4ec833c5f224536a70","sources":["webpack:///view.vue","webpack:///./resources/js/views/app/utility/note/view.vue?36cb","webpack:///./resources/js/views/app/utility/note/view.vue","webpack:///./resources/js/views/app/utility/note/view.vue?33ef","webpack:///./resources/js/views/app/utility/note/view.vue?80cc"],"sourcesContent":["<template>\n    <form @submit.prevent=\"doNothing\">\n        <animated-loader :is-loading=\"isLoading || isFetching\" :loader-color=\"vars.loaderColor\" />\n\n        <div class=\"row\">\n            <div class=\"col-12 col-md-9\">\n                <base-container boxed>\n\n                    <div class=\"row\">\n                        <div class=\"col-12 mb-3\">\n                            <base-input auto-focus :label=\"$t('utility.note.props.title')\" type=\"text\" v-model=\"formData.title\" :error.sync=\"formErrors.title\" @blur=\"createSlug\" required />\n                        </div>\n\n                        <div class=\"col-12 mt-4 mb-3\">\n                            <editor-wrapper :label=\"$t('utility.note.props.body')\" v-model=\"formData.body\" :error.sync=\"formErrors.body\" required />\n                        </div>\n\n                        <div class=\"col-12 mb-3\">\n                            <base-input :label=\"$t('utility.note.props.slug')\" type=\"text\" v-model=\"formData.slug\" :error.sync=\"formErrors.slug\" @blur=\"createSlug\" @focus=\"createSlug\" format=\"kebabCase\" required />\n                            <div class=\"small text-muted\" v-if=\"formData.slug\">{{ getLocation() + '/.../' + formData.slug }}</div>\n                        </div>\n                    </div>\n\n\n                    <fieldset class=\"fieldset primary mt-5\">\n                        <legend>{{ $t('site.seo') }}</legend>\n\n                        <div class=\"search-preview-wrapper mb-4\" v-if=\"seoTitle\">\n                            <h6 class=\"text-muted mb-3\">{{ $t('site.google_preview') }}</h6>\n                            <div class=\"title\">{{ seoTitle | charLimit(50) }}</div>\n                            <div class=\"url\">{{ seoUrl | charLimit(70) }}</div>\n                            <div class=\"description\">{{ seoDescription | charLimit(145) }}</div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-12 mb-3\">\n                                <base-input :label=\"$t('utility.note.props.seo_title')\" type=\"text\" v-model=\"formData.meta.seoTitle\" :error.sync=\"formErrors.seoTitle\" />\n                                <k-progress v-if=\"formData.meta.seoTitle\" :show-text=\"false\" :percent=\"getProgress(formData.meta.seoTitle, 50)\" :status=\"seoTitleProgressStatus\" />\n                            </div>\n\n                            <div class=\"col-12 mb-3\">\n                                <base-textarea rows=\"2\" :label=\"$t('utility.note.props.description')\" v-model=\"formData.meta.description\" :error.sync=\"formErrors.description\" char-count />\n                                <k-progress v-if=\"formData.meta.description\" :show-text=\"false\" :percent=\"getProgress(formData.meta.description, 145, 5)\" :status=\"seoDescProgressStatus\" />\n                            </div>\n\n                            <div class=\"col-12\">\n                                <base-textarea rows=\"2\" :label=\"$t('utility.note.props.keywords')\" v-model=\"formData.meta.keywords\" :error.sync=\"formErrors.keywords\" />\n                            </div>\n                        </div>\n                    </fieldset>\n\n                </base-container>\n            </div>\n\n            <div class=\"col-12 col-md-3 d-flex flex-column\">\n                <card class=\"mb-4\">\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <view-single data-classes=\"small\" :label=\"$t('utility.note.note') + ' ' + $t('utility.note.props.status')\" :value=\"formData.status ? $t('site.published') : $t('site.draft')\" />\n                        </div>\n\n                        <template v-if=\"editData && !duplicate\">\n                            <div class=\"col-12\">\n                                <view-date data-classes=\"small\" :label=\"$t('general.created_at')\" :value=\"formData.createdAt\" :to-format=\"vars.defaultDateTimeFormat\" />\n                            </div>\n                            <div class=\"col-12\">\n                                <view-date data-classes=\"small\" :label=\"$t('general.updated_at')\" :value=\"formData.updatedAt\" :to-format=\"vars.defaultDateTimeFormat\" />\n                            </div>\n                        </template>\n                    </div>\n\n                    <div v-if=\"formHasErrors\" class=\"alert alert-danger my-3\" role=\"alert\">\n                        <h6 class=\"m-0\">{{ $t('general.form_has_errors') }}</h6>\n                    </div>\n\n                    <div class=\"form-footer mt-3\">\n                        <div class=\"both-side\" key=\"published\" v-if=\"formData.status\">\n                            <base-button type=\"button\" design=\"link\" @click=\"draft\" tabindex=\"-1\" class=\"text-center\">{{ $t('site.unpublish') }}</base-button>\n                            <base-button type=\"button\" design=\"primary\" @click=\"publish\">{{ $t('general.update') }}</base-button>\n                        </div>\n\n                        <div class=\"both-side\" key=\"draft\" v-else>\n                            <base-button type=\"button\" design=\"light\" @click=\"draft\">\n                                <template v-if=\"formData.uuid\">{{ $t('general.update') }}</template>\n                                <template v-else>{{ $t('general.save') }}</template>\n                            </base-button>\n\n                            <base-button type=\"button\" design=\"primary\" @click=\"publish\">{{ $t('general.publish') }}</base-button>\n                        </div>\n                    </div>\n                </card>\n\n                <card class=\"mb-4\" :title=\"$t('site.featured_image')\">\n                    <div class=\"row\">\n                        <div class=\"col-12 d-flex justify-content-center\">\n                            <image-uploader :url=\"imageUploadURL\" :existing-image=\"formData.media ? formData.media.url : null\" :existing-media=\"formData.media\" :show-upload-button=\"!showKeepAdding\" @uploaded=\"uploadedImage\" @error=\"uploadedImageError\" @noNeed=\"noNeedCallback\" @removed=\"getEntityData\" />\n                        </div>\n                    </div>\n                </card>\n\n                <card class=\"mb-4\" :title=\"$t('site.attributes')\">\n                    <div class=\"row\">\n                        <div class=\"col-12 mb-3\">\n                            <base-select :options=\"preRequisite.templates\" v-model=\"formData.template\" :label=\"$t('site.page_template.template')\" :error.sync=\"formErrors.template\" required preselect-first />\n                        </div>\n\n                        <div class=\"col-12 mb-3\">\n                            <base-select :options=\"preRequisite.pages\" v-model=\"formData.parent\" :label=\"$t('utility.note.props.parent')\" :error.sync=\"formErrors.parent\" :allow-empty=\"true\" />\n                        </div>\n\n                    </div>\n                </card>\n\n                <card class=\"flex-grow\" :title=\"$t('site.options')\">\n                    <div class=\"row\">\n                    </div>\n                </card>\n\n            </div>\n        </div>\n    </form>\n</template>\n\n<script>\n    import form from '@mixins/form'\n    import EditorWrapper from '@core/components/EditorWrapper'\n    import ImageUploader from '@components/ImageUploader'\n    import EventBus from '@js/event-bus'\n    import KProgress from 'k-progress'\n\n    export default {\n        extends: form,\n        components: {\n            EditorWrapper,\n            ImageUploader,\n            KProgress,\n        },\n        data() {\n            return {\n                formData: {\n                    uuid: null,\n                    title: '',\n                    body: '',\n                    slug: '',\n                    status: false,\n                    template: null,\n                    parent: null,\n                    media: null,\n                    meta: {\n                        seoTitle: '',\n                        keywords: '',\n                        description: '',\n                        showFooter: false,\n                    }\n                },\n                preRequisite: {\n                    templates: [],\n                    parents: [],\n                },\n                initUrl: 'utility/notes',\n                seoRecommendedMinChars: 180,\n                seoRecommendedMaxChars: 220,\n                progressBarColors: [\n                    '#f5365c',\n                    '#fb6340',\n                    '#ffd600',\n                    '#5e72e4',\n                    '#2dce89',\n                ]\n            }\n        },\n        computed: {\n            imageUploadURL() {\n                return `notes/${this.formData.uuid}/media`\n            },\n            seoTitleProgressStatus() {\n                let val = this.getProgress(this.formData.meta.seoTitle, 50)\n                return val < 50 ? 'error' : ( val < 99 ? 'success' : 'warning' )\n            },\n            seoDescProgressStatus() {\n                let val = this.getProgress(this.formData.meta.description, 145, 5)\n                return val < 50 ? 'error' : ( val < 99 ? 'success' : 'warning' )\n            },\n            formStatus() {\n                if(!this.formData.uuid) {\n                    return 'creating'\n                } else if(this.editData && !this.duplicate){\n                    return 'editing'\n                } else {\n                    return 'saved'\n                }\n            },\n            seoTitle: {\n                get() {\n                    return this.formData.meta.seoTitle || this.formData.title\n                },\n                set(v) {\n                    this.formData.meta.seoTitle = v\n                }\n            },\n            seoDescription: {\n                get() {\n                    return this.formData.meta.description ? this.formData.meta.description : this.getExcerpt(this.formData.body)\n                },\n                set(v) {\n                    this.formData.meta.description = v\n                }\n            },\n            seoUrl() {\n                return this.getLocation() + '/.../' + this.formData.slug\n            }\n        },\n        methods: {\n            getProgress(str, total, diff = 1) {\n                let val = parseInt(((str.length / (total + diff) ) * 100).toFixed(0))\n                return val > 100 ? 100 : val\n            },\n            publish() {\n                this.formData.status = true\n                this.submit()\n            },\n            draft() {\n                this.formData.status = false\n                this.submit()\n            },\n            createSlug() {\n                if(this.showKeepAdding && this.formData.title != this.initialFormData.title) {\n                    this.formData.slug = this.formData.title.kebabCase()\n                } else {\n                    this.formData.slug = this.formData.slug ? this.formData.slug : this.formData.title.kebabCase()\n                }\n            },\n            getLocation() {\n                return document.location.origin\n            },\n            uploadedImage() {\n                if(this.formStatus === 'editing') {\n                    this.getEntityData()\n                } else {\n                    this.$router.back()\n                }\n            },\n            uploadedImageError() {\n                if(this.formStatus === 'saved') {\n                    this.$router.back()\n                } else {\n                    EventBus.$emit('CANCEL_UPLOAD')\n                }\n            },\n            noNeedCallback() {\n                if(this.formStatus === 'saved') {\n                    this.$router.back()\n                } else {\n                    this.getEntityData()\n                }\n            },\n            afterEditData() {\n                if(this.duplicate) {\n                    this.formData.uuid = null\n                    this.formData.status = false\n                    this.formData.media = null\n                }\n            },\n            afterSubmit(response) {\n                if(!this.formData.uuid) {\n                    this.formData.uuid = response.page.uuid\n                }\n                this.initialFormData = _.cloneDeep(this.formData)\n\n                if(this.formData.uuid) {\n                    this.$nextTick(() => {\n                        EventBus.$emit('START_UPLOAD')\n                    })\n                }\n            },\n            getExcerpt(str) {\n                return formUtil.getExcerpt(formUtil.stripHtml(str), 300)\n            }\n        },\n        mounted() {\n            this.getInitialData()\n        }\n    }\n\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function($event) {\n          $event.preventDefault()\n          return _vm.doNothing.apply(null, arguments)\n        }\n      }\n    },\n    [\n      _c(\"animated-loader\", {\n        attrs: {\n          \"is-loading\": _vm.isLoading || _vm.isFetching,\n          \"loader-color\": _vm.vars.loaderColor\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"col-12 col-md-9\" },\n          [\n            _c(\"base-container\", { attrs: { boxed: \"\" } }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 mb-3\" },\n                  [\n                    _c(\"base-input\", {\n                      attrs: {\n                        \"auto-focus\": \"\",\n                        label: _vm.$t(\"utility.note.props.title\"),\n                        type: \"text\",\n                        error: _vm.formErrors.title,\n                        required: \"\"\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(_vm.formErrors, \"title\", $event)\n                        },\n                        blur: _vm.createSlug\n                      },\n                      model: {\n                        value: _vm.formData.title,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"title\", $$v)\n                        },\n                        expression: \"formData.title\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 mt-4 mb-3\" },\n                  [\n                    _c(\"editor-wrapper\", {\n                      attrs: {\n                        label: _vm.$t(\"utility.note.props.body\"),\n                        error: _vm.formErrors.body,\n                        required: \"\"\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(_vm.formErrors, \"body\", $event)\n                        }\n                      },\n                      model: {\n                        value: _vm.formData.body,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"body\", $$v)\n                        },\n                        expression: \"formData.body\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 mb-3\" },\n                  [\n                    _c(\"base-input\", {\n                      attrs: {\n                        label: _vm.$t(\"utility.note.props.slug\"),\n                        type: \"text\",\n                        error: _vm.formErrors.slug,\n                        format: \"kebabCase\",\n                        required: \"\"\n                      },\n                      on: {\n                        \"update:error\": function($event) {\n                          return _vm.$set(_vm.formErrors, \"slug\", $event)\n                        },\n                        blur: _vm.createSlug,\n                        focus: _vm.createSlug\n                      },\n                      model: {\n                        value: _vm.formData.slug,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData, \"slug\", $$v)\n                        },\n                        expression: \"formData.slug\"\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _vm.formData.slug\n                      ? _c(\"div\", { staticClass: \"small text-muted\" }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.getLocation() + \"/.../\" + _vm.formData.slug\n                            )\n                          )\n                        ])\n                      : _vm._e()\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"fieldset\", { staticClass: \"fieldset primary mt-5\" }, [\n                _c(\"legend\", [_vm._v(_vm._s(_vm.$t(\"site.seo\")))]),\n                _vm._v(\" \"),\n                _vm.seoTitle\n                  ? _c(\"div\", { staticClass: \"search-preview-wrapper mb-4\" }, [\n                      _c(\"h6\", { staticClass: \"text-muted mb-3\" }, [\n                        _vm._v(_vm._s(_vm.$t(\"site.google_preview\")))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"title\" }, [\n                        _vm._v(_vm._s(_vm._f(\"charLimit\")(_vm.seoTitle, 50)))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"url\" }, [\n                        _vm._v(_vm._s(_vm._f(\"charLimit\")(_vm.seoUrl, 70)))\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"description\" }, [\n                        _vm._v(\n                          _vm._s(_vm._f(\"charLimit\")(_vm.seoDescription, 145))\n                        )\n                      ])\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 mb-3\" },\n                    [\n                      _c(\"base-input\", {\n                        attrs: {\n                          label: _vm.$t(\"utility.note.props.seo_title\"),\n                          type: \"text\",\n                          error: _vm.formErrors.seoTitle\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(_vm.formErrors, \"seoTitle\", $event)\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.meta.seoTitle,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData.meta, \"seoTitle\", $$v)\n                          },\n                          expression: \"formData.meta.seoTitle\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.formData.meta.seoTitle\n                        ? _c(\"k-progress\", {\n                            attrs: {\n                              \"show-text\": false,\n                              percent: _vm.getProgress(\n                                _vm.formData.meta.seoTitle,\n                                50\n                              ),\n                              status: _vm.seoTitleProgressStatus\n                            }\n                          })\n                        : _vm._e()\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 mb-3\" },\n                    [\n                      _c(\"base-textarea\", {\n                        attrs: {\n                          rows: \"2\",\n                          label: _vm.$t(\"utility.note.props.description\"),\n                          error: _vm.formErrors.description,\n                          \"char-count\": \"\"\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(\n                              _vm.formErrors,\n                              \"description\",\n                              $event\n                            )\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.meta.description,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData.meta, \"description\", $$v)\n                          },\n                          expression: \"formData.meta.description\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _vm.formData.meta.description\n                        ? _c(\"k-progress\", {\n                            attrs: {\n                              \"show-text\": false,\n                              percent: _vm.getProgress(\n                                _vm.formData.meta.description,\n                                145,\n                                5\n                              ),\n                              status: _vm.seoDescProgressStatus\n                            }\n                          })\n                        : _vm._e()\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12\" },\n                    [\n                      _c(\"base-textarea\", {\n                        attrs: {\n                          rows: \"2\",\n                          label: _vm.$t(\"utility.note.props.keywords\"),\n                          error: _vm.formErrors.keywords\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(_vm.formErrors, \"keywords\", $event)\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.meta.keywords,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData.meta, \"keywords\", $$v)\n                          },\n                          expression: \"formData.meta.keywords\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ])\n              ])\n            ])\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"col-12 col-md-3 d-flex flex-column\" },\n          [\n            _c(\"card\", { staticClass: \"mb-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"row\" },\n                [\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12\" },\n                    [\n                      _c(\"view-single\", {\n                        attrs: {\n                          \"data-classes\": \"small\",\n                          label:\n                            _vm.$t(\"utility.note.note\") +\n                            \" \" +\n                            _vm.$t(\"utility.note.props.status\"),\n                          value: _vm.formData.status\n                            ? _vm.$t(\"site.published\")\n                            : _vm.$t(\"site.draft\")\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _vm.editData && !_vm.duplicate\n                    ? [\n                        _c(\n                          \"div\",\n                          { staticClass: \"col-12\" },\n                          [\n                            _c(\"view-date\", {\n                              attrs: {\n                                \"data-classes\": \"small\",\n                                label: _vm.$t(\"general.created_at\"),\n                                value: _vm.formData.createdAt,\n                                \"to-format\": _vm.vars.defaultDateTimeFormat\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"col-12\" },\n                          [\n                            _c(\"view-date\", {\n                              attrs: {\n                                \"data-classes\": \"small\",\n                                label: _vm.$t(\"general.updated_at\"),\n                                value: _vm.formData.updatedAt,\n                                \"to-format\": _vm.vars.defaultDateTimeFormat\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]\n                    : _vm._e()\n                ],\n                2\n              ),\n              _vm._v(\" \"),\n              _vm.formHasErrors\n                ? _c(\n                    \"div\",\n                    {\n                      staticClass: \"alert alert-danger my-3\",\n                      attrs: { role: \"alert\" }\n                    },\n                    [\n                      _c(\"h6\", { staticClass: \"m-0\" }, [\n                        _vm._v(_vm._s(_vm.$t(\"general.form_has_errors\")))\n                      ])\n                    ]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"form-footer mt-3\" }, [\n                _vm.formData.status\n                  ? _c(\n                      \"div\",\n                      { key: \"published\", staticClass: \"both-side\" },\n                      [\n                        _c(\n                          \"base-button\",\n                          {\n                            staticClass: \"text-center\",\n                            attrs: {\n                              type: \"button\",\n                              design: \"link\",\n                              tabindex: \"-1\"\n                            },\n                            on: { click: _vm.draft }\n                          },\n                          [_vm._v(_vm._s(_vm.$t(\"site.unpublish\")))]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"base-button\",\n                          {\n                            attrs: { type: \"button\", design: \"primary\" },\n                            on: { click: _vm.publish }\n                          },\n                          [_vm._v(_vm._s(_vm.$t(\"general.update\")))]\n                        )\n                      ],\n                      1\n                    )\n                  : _c(\n                      \"div\",\n                      { key: \"draft\", staticClass: \"both-side\" },\n                      [\n                        _c(\n                          \"base-button\",\n                          {\n                            attrs: { type: \"button\", design: \"light\" },\n                            on: { click: _vm.draft }\n                          },\n                          [\n                            _vm.formData.uuid\n                              ? [_vm._v(_vm._s(_vm.$t(\"general.update\")))]\n                              : [_vm._v(_vm._s(_vm.$t(\"general.save\")))]\n                          ],\n                          2\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"base-button\",\n                          {\n                            attrs: { type: \"button\", design: \"primary\" },\n                            on: { click: _vm.publish }\n                          },\n                          [_vm._v(_vm._s(_vm.$t(\"general.publish\")))]\n                        )\n                      ],\n                      1\n                    )\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"card\",\n              {\n                staticClass: \"mb-4\",\n                attrs: { title: _vm.$t(\"site.featured_image\") }\n              },\n              [\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 d-flex justify-content-center\" },\n                    [\n                      _c(\"image-uploader\", {\n                        attrs: {\n                          url: _vm.imageUploadURL,\n                          \"existing-image\": _vm.formData.media\n                            ? _vm.formData.media.url\n                            : null,\n                          \"existing-media\": _vm.formData.media,\n                          \"show-upload-button\": !_vm.showKeepAdding\n                        },\n                        on: {\n                          uploaded: _vm.uploadedImage,\n                          error: _vm.uploadedImageError,\n                          noNeed: _vm.noNeedCallback,\n                          removed: _vm.getEntityData\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ])\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"card\",\n              {\n                staticClass: \"mb-4\",\n                attrs: { title: _vm.$t(\"site.attributes\") }\n              },\n              [\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 mb-3\" },\n                    [\n                      _c(\"base-select\", {\n                        attrs: {\n                          options: _vm.preRequisite.templates,\n                          label: _vm.$t(\"site.page_template.template\"),\n                          error: _vm.formErrors.template,\n                          required: \"\",\n                          \"preselect-first\": \"\"\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(_vm.formErrors, \"template\", $event)\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.template,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"template\", $$v)\n                          },\n                          expression: \"formData.template\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-12 mb-3\" },\n                    [\n                      _c(\"base-select\", {\n                        attrs: {\n                          options: _vm.preRequisite.pages,\n                          label: _vm.$t(\"utility.note.props.parent\"),\n                          error: _vm.formErrors.parent,\n                          \"allow-empty\": true\n                        },\n                        on: {\n                          \"update:error\": function($event) {\n                            return _vm.$set(_vm.formErrors, \"parent\", $event)\n                          }\n                        },\n                        model: {\n                          value: _vm.formData.parent,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formData, \"parent\", $$v)\n                          },\n                          expression: \"formData.parent\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ])\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"card\",\n              {\n                staticClass: \"flex-grow\",\n                attrs: { title: _vm.$t(\"site.options\") }\n              },\n              [_c(\"div\", { staticClass: \"row\" })]\n            )\n          ],\n          1\n        )\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./view.vue?vue&type=template&id=d7e3053c&\"\nimport script from \"./view.vue?vue&type=script&lang=js&\"\nexport * from \"./view.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('d7e3053c')) {\n      api.createRecord('d7e3053c', component.options)\n    } else {\n      api.reload('d7e3053c', component.options)\n    }\n    module.hot.accept(\"./view.vue?vue&type=template&id=d7e3053c&\", function () {\n      api.rerender('d7e3053c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/app/utility/note/view.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./view.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./view.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./view.vue?vue&type=template&id=d7e3053c&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAxBA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAvCA;AAyCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAmEA;AACA;AACA;AAvJA;;;;;;;;;;;;AClIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5hBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}