{"version":3,"file":"js/chunks/app/user-preference/index.js?id=934c649bb9c15aba2d32","sources":["webpack:///index.vue","webpack:///./resources/js/views/app/user-preference/index.vue?39ab","webpack:///./resources/js/mixins/config-form.js","webpack:///./resources/js/views/app/user-preference/index.vue","webpack:///./resources/js/views/app/user-preference/index.vue?30de","webpack:///./resources/js/views/app/user-preference/index.vue?b71a"],"sourcesContent":["<template>\n    <base-container boxed with-loader :is-loading=\"isLoading\" :loader-color=\"vars.loaderColor\">\n        <form @submit.prevent=\"submit\">\n            <h4 class=\"pb-2 mb-4 border-bottom\">{{ $t('config.system.system') }}</h4>\n\n            <div class=\"row\">\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-select :options=\"preRequisite.dateFormats\" v-model=\"formData.system.dateFormat\" :label=\"$t('config.system.date_format')\" :allow-empty=\"false\" simple :disabled=\"isLoading\" required>\n                            <template slot=\"selectedOption\" slot-scope=\"{ option }\">{{ now | moment(option.uuid) }} <small class=\"bracketed text-muted\">{{ option.name }}</small></template>\n\n                            <template slot=\"listOption\" slot-scope=\"{ option }\">\n                                {{ now | moment(option.uuid) }} <small class=\"bracketed text-muted\">{{ option.name }}</small>\n                            </template>\n                    </base-select>\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-select :options=\"preRequisite.timeFormats\" v-model=\"formData.system.timeFormat\" :label=\"$t('config.system.time_format')\" :allow-empty=\"false\" simple :disabled=\"isLoading\" required>\n                            <template slot=\"selectedOption\" slot-scope=\"{ option }\">{{ now | moment(option.uuid) }} <small class=\"bracketed text-muted\">{{ option.name }}</small></template>\n\n                            <template slot=\"listOption\" slot-scope=\"{ option }\">\n                                {{ now | moment(option.uuid) }} <small class=\"bracketed text-muted\">{{ option.name }}</small>\n                            </template>\n                    </base-select>\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-select :options=\"preRequisite.timezones\" v-model=\"formData.system.timezone\" :label=\"$t('config.system.timezone')\" :allow-empty=\"false\" simple :disabled=\"isLoading\" required />\n                </div>\n\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <base-select :options=\"preRequisite.locales\" v-model=\"formData.system.locale\" :label=\"$t('config.system.locale')\" :allow-empty=\"false\" simple :disabled=\"isLoading\" required />\n                </div>\n\n            </div>\n\n\n            <h4 class=\"pb-2 mb-4 mt-4 border-bottom\">{{ $t('config.chat.chat') }}</h4>\n\n            <div class=\"row\">\n                <div class=\"col-12 col-md-4 mb-4\">\n                    <switch-wrapper :label=\"$t('config.chat.enable_auto_open')\">\n                        <base-switch v-model=\"formData.chat.enableAutoOpen\"></base-switch>\n                    </switch-wrapper>\n                </div>\n                \n                <div class=\"col-12 col-md-4 mb-4\">\n                    <switch-wrapper :label=\"$t('config.chat.enter_to_submit')\">\n                        <base-switch v-model=\"formData.chat.enterToSubmit\"></base-switch>\n                    </switch-wrapper>\n                </div>\n                \n                <div class=\"col-12 col-md-4 mb-4\">\n                    <switch-wrapper :label=\"$t('config.chat.mute_sound_notification')\">\n                        <base-switch v-model=\"formData.chat.muteSoundNotification\"></base-switch>\n                    </switch-wrapper>\n                </div>\n            </div>\n\n            <div class=\"text-right mt-5\">\n                <base-button type=\"button\" design=\"light\" @click=\"reset\">{{ $t('general.reset') }}</base-button>\n                <base-button type=\"submit\" design=\"primary\">{{ $t('general.save') }}</base-button>\n            </div>\n\n        </form>\n    </base-container>\n</template>\n\n<script>\n    import form from '@mixins/config-form'\n\n    export default {\n        extends: form,\n        data() {\n            return {\n                now: moment(),\n                formData: {\n                    system: {\n                        dateFormat: '',\n                        timeFormat: '',\n                        timezone: '',\n                        perPage: 10,\n                        locale: '',\n                    },\n                    chat: {\n                        enableAutoOpen: false,\n                        enterToSubmit: false,\n                        muteSoundNotification: false,\n                    },\n                    override: true\n                },\n                preRequisite: {\n                    dateFormats: [],\n                    timeFormats: [],\n                    timezones: [],\n                    locales: [],\n                    paginations: [],\n                },\n                useUserPreference: true,\n            }\n        },\n        mounted() {\n            this.getInitialData()\n        },\n    }\n\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"base-container\",\n    {\n      attrs: {\n        boxed: \"\",\n        \"with-loader\": \"\",\n        \"is-loading\": _vm.isLoading,\n        \"loader-color\": _vm.vars.loaderColor\n      }\n    },\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.submit.apply(null, arguments)\n            }\n          }\n        },\n        [\n          _c(\"h4\", { staticClass: \"pb-2 mb-4 border-bottom\" }, [\n            _vm._v(_vm._s(_vm.$t(\"config.system.system\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-select\", {\n                  attrs: {\n                    options: _vm.preRequisite.dateFormats,\n                    label: _vm.$t(\"config.system.date_format\"),\n                    \"allow-empty\": false,\n                    simple: \"\",\n                    disabled: _vm.isLoading,\n                    required: \"\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"selectedOption\",\n                      fn: function(ref) {\n                        var option = ref.option\n                        return [\n                          _vm._v(\n                            _vm._s(_vm._f(\"moment\")(_vm.now, option.uuid)) + \" \"\n                          ),\n                          _c(\"small\", { staticClass: \"bracketed text-muted\" }, [\n                            _vm._v(_vm._s(option.name))\n                          ])\n                        ]\n                      }\n                    },\n                    {\n                      key: \"listOption\",\n                      fn: function(ref) {\n                        var option = ref.option\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(_vm._f(\"moment\")(_vm.now, option.uuid)) +\n                              \" \"\n                          ),\n                          _c(\"small\", { staticClass: \"bracketed text-muted\" }, [\n                            _vm._v(_vm._s(option.name))\n                          ])\n                        ]\n                      }\n                    }\n                  ]),\n                  model: {\n                    value: _vm.formData.system.dateFormat,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData.system, \"dateFormat\", $$v)\n                    },\n                    expression: \"formData.system.dateFormat\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-select\", {\n                  attrs: {\n                    options: _vm.preRequisite.timeFormats,\n                    label: _vm.$t(\"config.system.time_format\"),\n                    \"allow-empty\": false,\n                    simple: \"\",\n                    disabled: _vm.isLoading,\n                    required: \"\"\n                  },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"selectedOption\",\n                      fn: function(ref) {\n                        var option = ref.option\n                        return [\n                          _vm._v(\n                            _vm._s(_vm._f(\"moment\")(_vm.now, option.uuid)) + \" \"\n                          ),\n                          _c(\"small\", { staticClass: \"bracketed text-muted\" }, [\n                            _vm._v(_vm._s(option.name))\n                          ])\n                        ]\n                      }\n                    },\n                    {\n                      key: \"listOption\",\n                      fn: function(ref) {\n                        var option = ref.option\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(_vm._f(\"moment\")(_vm.now, option.uuid)) +\n                              \" \"\n                          ),\n                          _c(\"small\", { staticClass: \"bracketed text-muted\" }, [\n                            _vm._v(_vm._s(option.name))\n                          ])\n                        ]\n                      }\n                    }\n                  ]),\n                  model: {\n                    value: _vm.formData.system.timeFormat,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData.system, \"timeFormat\", $$v)\n                    },\n                    expression: \"formData.system.timeFormat\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-select\", {\n                  attrs: {\n                    options: _vm.preRequisite.timezones,\n                    label: _vm.$t(\"config.system.timezone\"),\n                    \"allow-empty\": false,\n                    simple: \"\",\n                    disabled: _vm.isLoading,\n                    required: \"\"\n                  },\n                  model: {\n                    value: _vm.formData.system.timezone,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData.system, \"timezone\", $$v)\n                    },\n                    expression: \"formData.system.timezone\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\"base-select\", {\n                  attrs: {\n                    options: _vm.preRequisite.locales,\n                    label: _vm.$t(\"config.system.locale\"),\n                    \"allow-empty\": false,\n                    simple: \"\",\n                    disabled: _vm.isLoading,\n                    required: \"\"\n                  },\n                  model: {\n                    value: _vm.formData.system.locale,\n                    callback: function($$v) {\n                      _vm.$set(_vm.formData.system, \"locale\", $$v)\n                    },\n                    expression: \"formData.system.locale\"\n                  }\n                })\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"h4\", { staticClass: \"pb-2 mb-4 mt-4 border-bottom\" }, [\n            _vm._v(_vm._s(_vm.$t(\"config.chat.chat\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\n                  \"switch-wrapper\",\n                  { attrs: { label: _vm.$t(\"config.chat.enable_auto_open\") } },\n                  [\n                    _c(\"base-switch\", {\n                      model: {\n                        value: _vm.formData.chat.enableAutoOpen,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData.chat, \"enableAutoOpen\", $$v)\n                        },\n                        expression: \"formData.chat.enableAutoOpen\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\n                  \"switch-wrapper\",\n                  { attrs: { label: _vm.$t(\"config.chat.enter_to_submit\") } },\n                  [\n                    _c(\"base-switch\", {\n                      model: {\n                        value: _vm.formData.chat.enterToSubmit,\n                        callback: function($$v) {\n                          _vm.$set(_vm.formData.chat, \"enterToSubmit\", $$v)\n                        },\n                        expression: \"formData.chat.enterToSubmit\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-md-4 mb-4\" },\n              [\n                _c(\n                  \"switch-wrapper\",\n                  {\n                    attrs: {\n                      label: _vm.$t(\"config.chat.mute_sound_notification\")\n                    }\n                  },\n                  [\n                    _c(\"base-switch\", {\n                      model: {\n                        value: _vm.formData.chat.muteSoundNotification,\n                        callback: function($$v) {\n                          _vm.$set(\n                            _vm.formData.chat,\n                            \"muteSoundNotification\",\n                            $$v\n                          )\n                        },\n                        expression: \"formData.chat.muteSoundNotification\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"text-right mt-5\" },\n            [\n              _c(\n                \"base-button\",\n                {\n                  attrs: { type: \"button\", design: \"light\" },\n                  on: { click: _vm.reset }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"general.reset\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"base-button\",\n                { attrs: { type: \"submit\", design: \"primary\" } },\n                [_vm._v(_vm._s(_vm.$t(\"general.save\")))]\n              )\n            ],\n            1\n          )\n        ]\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { mapGetters, mapActions } from 'vuex'\nimport * as ConfigAPI from '@api/config'\nimport { formatKeysToSnakeCase } from '@js/core/utils/formatter'\n\nexport default {\n    components: {},\n    data() {\n        return {\n            formData: {},\n            formErrors: {},\n            initialFormData: null,\n            initianLength: 0,\n            emptyFormData: null,\n            entity: null,\n            preRequisite: {},\n            isLoading: true,\n            useUserPreference: false,\n            dataType: null,\n            configType: '',\n        }\n    },\n    computed: {\n        ...mapGetters('config', {\n            configsWithPreference: 'configs',\n            configs: 'configsOriginal',\n            vars: 'vars',\n            allowExtraInput: 'allowExtraInput',\n        }),\n        formHasErrors() {\n            let ans = false\n            this.formErrors.objForEach(er => {\n                ans = er !== '' ? true : ans\n            })\n            return ans\n        },\n    },\n    methods: {\n        ...mapActions('config', [\n            'GetConfig',\n        ]),\n        ...mapActions('user', [\n            'GetUser',\n        ]),\n        ...mapActions('navigation', [\n            'Generate',\n        ]),\n        ...mapActions('common', [\n            'Custom',\n        ]),\n        findActualValue(value, options, key = 'uuid') {\n            return options.find(option => option[key] === value) || null\n        },\n        submit(preference = false) {\n            if(formUtil.isUnchanged(this.initialFormData, this.formData)) {\n                this.$toasted.info(this.$t('general.nothing_changed'), this.$toastConfig.info)\n                return false\n            }\n\n            this.isLoading = true\n\n            if(this.formData.hasOwnProperty('type')) {\n                this.formData.type = this.formData.type.snakeCase()\n            }\n\n            const storeFn = preference === true || this.useUserPreference ? ConfigAPI.updateUserPref : (this.configType === 'module' ? ConfigAPI.updateModule : ConfigAPI.update)\n\n            if (this.beforeSubmit && typeof this.beforeSubmit === \"function\") {\n                const shouldProceed = this.beforeSubmit()\n                if(shouldProceed === false) {\n                    this.isLoading = false\n                    return\n                }\n            }\n\n            storeFn(this.formData)\n                .then(response => {\n                    const fnToCall = preference === true || this.useUserPreference ? this.GetUser : this.GetConfig\n                    fnToCall()\n                        .then(() => {\n                            this.$toasted.success(response.message, this.$toastConfig)\n                            this.initialFormData = _.cloneDeep(this.formData)\n                            this.isLoading = false\n                        })\n                        .catch(error => {\n                            this.isLoading = false\n                            this.formErrors = formUtil.handleErrors(error)\n                        })\n\n                    if (typeof this.afterSubmit === \"function\") {\n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitSuccess === \"function\") {\n                        this.afterSubmitSuccess()\n                    }\n                })\n                .catch(error => {\n                    this.isLoading = false\n                    this.formErrors = formUtil.handleErrors(error)\n\n                    if (typeof this.afterSubmit === \"function\") {\n                        this.afterSubmit()\n                    }\n                    if (typeof this.afterSubmitError === \"function\") {\n                        this.afterSubmitError()\n                    }\n                })\n        },\n        reset() {\n            formUtil.confirmAction()\n                .then((result) => {\n                    if (result.value) {\n                        this.formData = Object.assign({}, this.formData, _.cloneDeep(this.initialFormData))\n                    }\n                })\n        },\n        unsavedCheck(next) {\n            formUtil.unsavedCheckAlert(this.initialFormData, this.formData, next)\n        },\n        fillPreRequisite(response) {\n            this.preRequisite.objForEach((value, key) => {\n                this.preRequisite[key] = response.hasOwnProperty(key) ? response[key] : value\n            })\n\n            this.isLoading = false\n        },\n        fillFormData() {\n            this.isLoading = true\n            const configsToUse = this.useUserPreference ? this.configsWithPreference : this.configs\n            if(this.formData.type && configsToUse[this.formData.type]) {\n                this.formData = formUtil.assignValues(this.formData, configsToUse[this.formData.type])\n            }\n\n            if(this.formData.types && Array.isArray(this.formData.types)) {\n                this.formData.types.forEach((value) => {\n                    this.formData = formUtil.assignValues(this.formData, configsToUse[value])\n                })\n            }\n\n            if(this.formData.override) {\n                this.formData.objForEach((value, key) => {\n                    if(value && _.isObject(value)) {\n                        this.formData[key] = formUtil.assignValues(this.formData[key], configsToUse[key])\n                    } else {\n                        this.formData[key] = configsToUse[key] ? configsToUse[key] : value\n                    }\n                })\n            }\n\n            if (typeof this.addNewRow === \"function\" && typeof this.addNewRowIfNone === \"function\") {\n                this.addNewRowIfNone()\n            }\n\n            this.isLoading = false\n        },\n        async getInitialData(callbackFn) {\n            this.isLoading = true\n            try {\n                const response = await ConfigAPI.getPreRequisite(Object.keys(this.preRequisite).join(','))\n                this.fillPreRequisite(response)\n\n                if(callbackFn) {\n                    this.$nextTick(() => {\n                        callbackFn()\n                    })\n                }\n                return response\n            } catch (error) {\n                this.isLoading = false\n                this.formErrors = formUtil.handleErrors(error)\n                throw error\n            }\n        },\n    },\n    mounted() {\n        this.fillFormData()\n        this.initialFormData = _.cloneDeep(this.formData)\n    },\n    beforeDestroy () {\n        delete this.formData\n        delete this.formErrors\n        delete this.preRequisite\n    },\n    beforeRouteLeave(to, from, next) {\n        this.unsavedCheck(next)\n    }\n}\n","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=517baa03&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"517baa03\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/pia.itebco.com/public_html/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('517baa03')) {\n      api.createRecord('517baa03', component.options)\n    } else {\n      api.reload('517baa03', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=517baa03&scoped=true&\", function () {\n      api.rerender('517baa03', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/app/user-preference/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=517baa03&scoped=true&\""],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAxBA;AA0BA;AACA;AACA;AACA;AAhCA;;;;;;;;;;;;ACxtTA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAaaA;AACA;AAdA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAvIA;AAyIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApLA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}